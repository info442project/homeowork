{"ast":null,"code":"/** @module utils/Positoning/getSelectedTextPosition */\nimport getSelectedText from '../getSelectedText';\nimport getTextWidth from './getTextWidth';\nvar ZERO_WIDTH_CHARACTER = '\\u200B';\n/**\n * A utility function to attempt to get the current highlighted text position.\n *\n * When a context menu is opened, this function attempts to find the bounding client rect\n * for the highlighted text. However, if the text is in the text field, some weird stuff\n * happens and it is unable to get it correctly.\n */\n\nexport default function getSelectedTextPosition(e) {\n  var height = void 0;\n  var target = e.target,\n      clientX = e.clientX,\n      clientY = e.clientY;\n  var text = getSelectedText();\n  var width = Math.round(getTextWidth(text, target) || 0);\n\n  if (!text || target.classList.contains('md-text-field')) {\n    height = parseInt(window.getComputedStyle(target).fontSize, 10);\n    return {\n      width: width,\n      height: height,\n      left: clientX - width,\n      top: clientY\n    };\n  } // All browsers I am supporting have window.getSelection, but better safe than sorry\n\n\n  if (window.getSelection) {\n    var selection = window.getSelection();\n\n    if (selection.rangeCount) {\n      var range = selection.getRangeAt(0).cloneRange();\n      var rect = null;\n\n      if (range.getClientRects) {\n        var rects = range.getClientRects();\n\n        if (rects.length > 0) {\n          rect = rects[0];\n        }\n      }\n\n      if (!rect) {\n        var span = document.createElement('span');\n        span.appendChild(document.createTextNode(ZERO_WIDTH_CHARACTER));\n        range.insertNode(span);\n        rect = span.getBoundingClientRect();\n        var spanParent = span.parentNode;\n        spanParent.removeChild(span);\n        spanParent.normalize();\n      }\n\n      return rect;\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/utils/Positioning/getSelectedTextPosition.js"],"names":["getSelectedText","getTextWidth","ZERO_WIDTH_CHARACTER","getSelectedTextPosition","e","height","target","clientX","clientY","text","width","Math","round","classList","contains","parseInt","window","getComputedStyle","fontSize","left","top","getSelection","selection","rangeCount","range","getRangeAt","cloneRange","rect","getClientRects","rects","length","span","document","createElement","appendChild","createTextNode","insertNode","getBoundingClientRect","spanParent","parentNode","removeChild","normalize"],"mappings":"AAAA;AACA,OAAOA,eAAP,MAA4B,oBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAIC,oBAAoB,GAAG,QAA3B;AAEA;;;;;;;;AAOA,eAAe,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AACjD,MAAIC,MAAM,GAAG,KAAK,CAAlB;AACA,MAAIC,MAAM,GAAGF,CAAC,CAACE,MAAf;AAAA,MACIC,OAAO,GAAGH,CAAC,CAACG,OADhB;AAAA,MAEIC,OAAO,GAAGJ,CAAC,CAACI,OAFhB;AAIA,MAAIC,IAAI,GAAGT,eAAe,EAA1B;AACA,MAAIU,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWX,YAAY,CAACQ,IAAD,EAAOH,MAAP,CAAZ,IAA8B,CAAzC,CAAZ;;AACA,MAAI,CAACG,IAAD,IAASH,MAAM,CAACO,SAAP,CAAiBC,QAAjB,CAA0B,eAA1B,CAAb,EAAyD;AACvDT,IAAAA,MAAM,GAAGU,QAAQ,CAACC,MAAM,CAACC,gBAAP,CAAwBX,MAAxB,EAAgCY,QAAjC,EAA2C,EAA3C,CAAjB;AACA,WAAO;AACLR,MAAAA,KAAK,EAAEA,KADF;AAELL,MAAAA,MAAM,EAAEA,MAFH;AAGLc,MAAAA,IAAI,EAAEZ,OAAO,GAAGG,KAHX;AAILU,MAAAA,GAAG,EAAEZ;AAJA,KAAP;AAMD,GAhBgD,CAkBjD;;;AACA,MAAIQ,MAAM,CAACK,YAAX,EAAyB;AACvB,QAAIC,SAAS,GAAGN,MAAM,CAACK,YAAP,EAAhB;;AACA,QAAIC,SAAS,CAACC,UAAd,EAA0B;AACxB,UAAIC,KAAK,GAAGF,SAAS,CAACG,UAAV,CAAqB,CAArB,EAAwBC,UAAxB,EAAZ;AACA,UAAIC,IAAI,GAAG,IAAX;;AACA,UAAIH,KAAK,CAACI,cAAV,EAA0B;AACxB,YAAIC,KAAK,GAAGL,KAAK,CAACI,cAAN,EAAZ;;AACA,YAAIC,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACpBH,UAAAA,IAAI,GAAGE,KAAK,CAAC,CAAD,CAAZ;AACD;AACF;;AAED,UAAI,CAACF,IAAL,EAAW;AACT,YAAII,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,QAAAA,IAAI,CAACG,WAAL,CAAiBF,QAAQ,CAACG,cAAT,CAAwBjC,oBAAxB,CAAjB;AACAsB,QAAAA,KAAK,CAACY,UAAN,CAAiBL,IAAjB;AACAJ,QAAAA,IAAI,GAAGI,IAAI,CAACM,qBAAL,EAAP;AAEA,YAAIC,UAAU,GAAGP,IAAI,CAACQ,UAAtB;AACAD,QAAAA,UAAU,CAACE,WAAX,CAAuBT,IAAvB;AACAO,QAAAA,UAAU,CAACG,SAAX;AACD;;AAED,aAAOd,IAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["/** @module utils/Positoning/getSelectedTextPosition */\nimport getSelectedText from '../getSelectedText';\nimport getTextWidth from './getTextWidth';\n\nvar ZERO_WIDTH_CHARACTER = '\\u200B';\n\n/**\n * A utility function to attempt to get the current highlighted text position.\n *\n * When a context menu is opened, this function attempts to find the bounding client rect\n * for the highlighted text. However, if the text is in the text field, some weird stuff\n * happens and it is unable to get it correctly.\n */\nexport default function getSelectedTextPosition(e) {\n  var height = void 0;\n  var target = e.target,\n      clientX = e.clientX,\n      clientY = e.clientY;\n\n  var text = getSelectedText();\n  var width = Math.round(getTextWidth(text, target) || 0);\n  if (!text || target.classList.contains('md-text-field')) {\n    height = parseInt(window.getComputedStyle(target).fontSize, 10);\n    return {\n      width: width,\n      height: height,\n      left: clientX - width,\n      top: clientY\n    };\n  }\n\n  // All browsers I am supporting have window.getSelection, but better safe than sorry\n  if (window.getSelection) {\n    var selection = window.getSelection();\n    if (selection.rangeCount) {\n      var range = selection.getRangeAt(0).cloneRange();\n      var rect = null;\n      if (range.getClientRects) {\n        var rects = range.getClientRects();\n        if (rects.length > 0) {\n          rect = rects[0];\n        }\n      }\n\n      if (!rect) {\n        var span = document.createElement('span');\n        span.appendChild(document.createTextNode(ZERO_WIDTH_CHARACTER));\n        range.insertNode(span);\n        rect = span.getBoundingClientRect();\n\n        var spanParent = span.parentNode;\n        spanParent.removeChild(span);\n        spanParent.normalize();\n      }\n\n      return rect;\n    }\n  }\n\n  return null;\n}"]},"metadata":{},"sourceType":"module"}