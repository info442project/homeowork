{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport { TAB } from '../constants/keyCodes';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getBtnStyles from './getBtnStyles';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport FontIcon from '../FontIcons/FontIcon';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport injectInk from '../Inks/injectInk';\nimport injectTooltip from '../Tooltips/injectTooltip';\n/**\n * The `Button` component can either be a `FlatButton`, `RaisedButton`, `IconButton`, or a\n * `FloatingButton`.\n *\n * A `FlatButton` is a button with no depth on the screen that is ideally used in `Dialog`s\n * or `CardActions`. The text can be optionally styled with the `primary` or `secondary` colors.\n *\n * A `RaisedButton` is a button with some depth to help actions have more prominent in flat\n * layouts or layouts with varying content. The background can be styled by the light/dark theme,\n * or optionally the `primary` or `secondary` color.\n *\n * An `IconButton` is a button that just displays a `FontIcon` as the child in a circle.\n * The `FontIcon` can be optionally styled with the `primary` or `secondary` color.\n *\n * A `FloatingButton` is a special case. Woop\n */\n\nvar Button = function (_PureComponent) {\n  _inherits(Button, _PureComponent);\n\n  function Button() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Button.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.disabled && !nextProps.disabled && this.state.hover) {\n      this.setState({\n        hover: false\n      });\n    }\n  };\n\n  Button.prototype.componentWillUpdate = function componentWillUpdate(nextProps, nextState) {\n    var _this2 = this;\n\n    if (!this.state.pressed && nextState.pressed) {\n      this._timeout = setTimeout(function () {\n        _this2._timeout = null;\n\n        if (_this2._attemptedBlur) {\n          _this2._attemptedBlur = false;\n\n          _this2.setState({\n            pressed: false\n          });\n        }\n      }, 450);\n    }\n  };\n\n  Button.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    if (this._snackbarTimeout) {\n      clearTimeout(this._snackbarTimeout);\n    }\n\n    window.removeEventListener('click', this._blur);\n  };\n\n  Button.prototype.render = function render() {\n    var _getBtnStyles;\n\n    var _props = this.props,\n        className = _props.className,\n        iconClassName = _props.iconClassName,\n        iconChildren = _props.iconChildren,\n        iconBefore = _props.iconBefore,\n        href = _props.href,\n        primary = _props.primary,\n        secondary = _props.secondary,\n        flat = _props.flat,\n        raised = _props.raised,\n        floating = _props.floating,\n        mini = _props.mini,\n        fixed = _props.fixed,\n        fixedPosition = _props.fixedPosition,\n        disabled = _props.disabled,\n        component = _props.component,\n        ink = _props.ink,\n        tooltip = _props.tooltip,\n        icon = _props.icon,\n        forceIconSize = _props.forceIconSize,\n        forceIconFontSize = _props.forceIconFontSize,\n        type = _props.type,\n        children = _props.children,\n        swapTheming = _props.swapTheming,\n        svg = _props.svg,\n        propIconEl = _props.iconEl,\n        label = _props.label,\n        props = _objectWithoutProperties(_props, ['className', 'iconClassName', 'iconChildren', 'iconBefore', 'href', 'primary', 'secondary', 'flat', 'raised', 'floating', 'mini', 'fixed', 'fixedPosition', 'disabled', 'component', 'ink', 'tooltip', 'icon', 'forceIconSize', 'forceIconFontSize', 'type', 'children', 'swapTheming', 'svg', 'iconEl', 'label']);\n\n    var iconEl = this.props.iconEl;\n\n    if (!href) {\n      props.type = type;\n    }\n\n    var _state = this.state,\n        pressed = _state.pressed,\n        hover = _state.hover,\n        snackbar = _state.snackbar,\n        snackbarType = _state.snackbarType;\n    var iconBtnType = icon || floating;\n    var visibleChildren = void 0;\n\n    if (!iconEl && !svg && (iconClassName || iconChildren || iconBtnType || label && children)) {\n      var resolvedIconChildren = iconChildren;\n\n      if (typeof iconChildren === 'undefined') {\n        resolvedIconChildren = iconBtnType || label ? children : null;\n      }\n\n      iconEl = React.createElement(FontIcon, {\n        iconClassName: iconClassName,\n        forceSize: forceIconSize,\n        forceFontSize: forceIconFontSize,\n        inherit: true\n      }, resolvedIconChildren);\n    } else if (iconEl || svg) {\n      var el = React.Children.only(iconEl || children);\n      iconEl = React.cloneElement(el, {\n        inherit: !el.props.error\n      });\n    }\n\n    if (!iconBtnType) {\n      visibleChildren = label || children;\n\n      if (iconEl) {\n        visibleChildren = React.createElement(IconSeparator, {\n          label: visibleChildren,\n          iconBefore: iconBefore\n        }, iconEl);\n      }\n    } else {\n      visibleChildren = iconEl;\n    }\n\n    var Component = component || (href ? 'a' : 'button');\n    return React.createElement(Component, _extends({}, props, {\n      disabled: disabled,\n      onTouchStart: this._handleTouchStart,\n      onTouchEnd: this._handleTouchEnd,\n      onMouseDown: this._handleMouseDown,\n      onMouseUp: this._handleMouseUp,\n      onKeyDown: this._handleKeyDown,\n      onKeyUp: this._handleKeyUp,\n      onMouseEnter: this._handleMouseEnter,\n      onMouseLeave: this._handleMouseLeave,\n      href: href,\n      className: getBtnStyles({\n        flat: flat,\n        raised: raised,\n        icon: icon,\n        floating: floating,\n        disabled: disabled,\n        primary: primary,\n        secondary: secondary,\n        hover: hover,\n        swapTheming: swapTheming,\n        pressed: pressed,\n        mini: mini,\n        fixed: fixed,\n        fixedPosition: fixedPosition\n      }, (_getBtnStyles = {\n        'md-btn--tooltip': tooltip,\n        'md-btn--snackbar-floating': snackbar\n      }, _getBtnStyles['md-btn--snackbar-floating-' + snackbarType + 'adjust'] = snackbar && snackbarType !== null, _getBtnStyles), 'md-inline-block', className)\n    }), ink, tooltip, visibleChildren);\n  };\n\n  return Button;\n}(PureComponent);\n\nButton.propTypes = {\n  /**\n   * An optional style to apply to the button.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the button.\n   */\n  className: PropTypes.string,\n\n  /**\n   * A boolean if the icon should appear before or after the text for a `FlatButton` or\n   * a `RaisedButton`.\n   */\n  iconBefore: PropTypes.bool,\n\n  /**\n   * Any children used to display the button. When the button type is `icon` or `floating`,\n   * this can be used to render the `FontIcon` instead of the `iconChildren` prop.\n   *\n   * When the button type is `raised` or `flat`, this will be the label or any other elements\n   * you'd like to display in the button. This can work hand-in-hand with the `iconClassName`\n   * and `iconChildren` to make a button with an icon and text.\n   */\n  children: PropTypes.node,\n\n  /**\n   * An icon className to use in an optional `FontIcon` in any version of the button. This will\n   * be used with the `children` prop. If the `floating` or `icon` props are set to true, this or\n   * the children are required.\n   *\n   * @see {@link #iconEl}\n   */\n  iconClassName: PropTypes.string,\n\n  /**\n   * Any children to use to display an icon in the button.\n   *\n   * @see {@link #iconEl}\n   */\n  iconChildren: PropTypes.node,\n\n  /**\n   * An optional icon to display. This prop is recommended over the `iconClassName` and `iconChildren`\n   * props since it allows more control for you. There is also better SVG support since it won't wrap\n   * the SVG with the `FontIcon` element.\n   */\n  iconEl: PropTypes.element,\n\n  /**\n   * The type for the button. This is required when the `component` prop is not\n   * the 'a' tag, a `function`, or when the `href` prop is defined.\n   */\n  type: function type(props, propName, component) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      args[_key2 - 3] = arguments[_key2];\n    }\n\n    var c = props.component;\n    var validator = PropTypes.oneOf(['button', 'submit', 'reset']);\n\n    if (!props.href && c !== 'a' && typeof c !== 'function') {\n      validator = validator.isRequired;\n    }\n\n    return validator.apply(undefined, [props, propName, component].concat(args));\n  },\n\n  /**\n   * Boolean if the button should be styled with the primary color.\n   */\n  primary: PropTypes.bool,\n\n  /**\n   * Boolean if the button should be styled with the secondary color.\n   */\n  secondary: PropTypes.bool,\n\n  /**\n   * Boolean if the button is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * An optional href for the button. This will style the `a` tag as a button.\n   */\n  href: PropTypes.string,\n\n  /**\n   * An optional component to render the button as. This allows you to get all the styles and functionality\n   * of the Button, but as a custom React component.\n   */\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n\n  /**\n   * An optional function to call when the `click` event is triggered.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * An optional function to call when the `touchstart` event is triggered.\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * An optional function to call when the `touchend` event is triggered.\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mousedown` event is triggered.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseup` event is triggered.\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * An optional function to call when the `keyup` event is triggered.\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * An optional function to call when the `keydown` event is triggered.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseenter` event is triggered.\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseleave` event is triggered.\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * Boolean if the `FloatingButton` should be fixed to the page. This prop can\n   * only be enabled if the `floating` prop is true.\n   */\n  fixed: invalidIf(PropTypes.bool, 'flat', 'raised', 'icon'),\n\n  /**\n   * The position that the `FloatingButton` should be fixed to the page. It will\n   * either be fixed to the top right, top left, bottom right, or bottom left of\n   * the page. This prop is only used if the `floating` prop and `fixed` prop are\n   * `true`.\n   */\n  fixedPosition: PropTypes.oneOf(['tr', 'tl', 'br', 'bl']).isRequired,\n\n  /**\n   * Boolean if the `FloatingButton` should be `mini`. This prop can only be used\n   * when the `floating` prop is true.\n   */\n  mini: invalidIf(PropTypes.bool, 'flat', 'raised', 'icon'),\n\n  /**\n   * Boolean if the `Button` should be styled as a `FlatButton`.\n   */\n  flat: PropTypes.bool,\n\n  /**\n   * Boolean if the `Button` should be styled as a `RaisedButton`.\n   */\n  raised: PropTypes.bool,\n\n  /**\n   * Boolean if the `Button` should be styled as a `IconButton`.\n   *\n   * @see {@link #svg}\n   */\n  icon: PropTypes.bool,\n\n  /**\n   * Boolean if the `Button` should be styled as a `FloatingButton`.\n   *\n   * @see {@link #svg}\n   */\n  floating: PropTypes.bool,\n\n  /**\n   * Boolean if the theming of `primary` or `secondary` should be swapped. By default,\n   * only flat and icon buttons can gain the theme colors as text color while the raised\n   * and floating buttons can gain the theme colors as background color.\n   *\n   * If this prop is enabled, the flat and icon buttons will gain the theme background colors\n   * while the raised and icon will gain the theme text colors instead.\n   *\n   * @see {@link #primary}\n   * @see {@link #secondary}\n   */\n  swapTheming: PropTypes.bool,\n\n  /**\n   * An optional label to use for the tooltip. This is normally only used for\n   * `IconButton`s or `FloatingButton`s, but can be used on `FlatButton`s and\n   * `RaisedButton`s if you wish. Knock yourself out!\n   *\n   * If this prop is omitted, no tooltip will be included.\n   */\n  tooltipLabel: PropTypes.node,\n\n  /**\n   * An optional delay before the tooltip appears on mouse over.\n   */\n  tooltipDelay: PropTypes.number,\n\n  /**\n   * The position for the tooltip.\n   */\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * An ink from `injectInk`.\n   * @access private\n   */\n  ink: PropTypes.node,\n\n  /**\n   * A tooltip from `injectTooltip`\n   * @access private\n   */\n  tooltip: PropTypes.node,\n\n  /**\n   * Custom validator for verifying that only one type is defined and that\n   * at one type is defined.\n   */\n  _typeValidator: function _typeValidator(props, propName, component) {\n    var flat = props.flat,\n        raised = props.raised,\n        icon = props.icon,\n        floating = props.floating;\n    var defined = [raised, flat, icon, floating].filter(function (d) {\n      return d;\n    });\n    var len = defined.length;\n\n    if (len === 0) {\n      return new Error('A material design button type must be specified in the `' + component + '` but none were ' + 'given. Valid types are `flat`, `raised`, `icon`, or `floating`.');\n    } else if (len !== 1) {\n      return new Error('Only one material design button type may be specified in the `' + component + '` but `' + len + '` ' + 'were given. Select only one of `flat`, `raised`, `icon`, or `floating`.');\n    }\n\n    return null;\n  },\n\n  /**\n   * Either a boolean that will enforce the 24x24 size of the font icon or a number of the size\n   * to enforce. This is useful when using other font icon libraries that do not have a consistent\n   * size.\n   */\n  forceIconSize: FontIcon.propTypes.forceSize,\n\n  /**\n   * Boolean if the `forceIconSize` prop should also force the `font-size` instead of only `width` and `height`.\n   */\n  forceIconFontSize: PropTypes.bool,\n\n  /**\n   * Boolean if the child is an SVGIcon or FontIcon when using the `icon` or `floating` props. This is only needed\n   * until the next release when the `label` migration can be removed.\n   */\n  svg: PropTypes.bool,\n  label: deprecated(PropTypes.node, 'Use the `children` prop instead'),\n  noIcon: deprecated(PropTypes.bool, 'This has been removed during the alpha release. Children will always attempt to be rendered outside of an ' + 'icon by default for flat and raised buttons')\n};\nButton.defaultProps = {\n  type: 'button',\n  iconBefore: true,\n  fixedPosition: 'br'\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.state = {\n    pressed: false,\n    snackbar: false,\n    snackbarType: null\n  };\n\n  this._blur = function () {\n    if (_this3.props.disabled) {\n      return;\n    }\n\n    if (_this3._timeout) {\n      _this3._attemptedBlur = true;\n    } else {\n      _this3.setState({\n        pressed: false\n      });\n    }\n  };\n\n  this._handleMouseUp = function (e) {\n    if (_this3.props.onMouseUp) {\n      _this3.props.onMouseUp(e);\n    }\n\n    _this3._blur();\n  };\n\n  this._handleMouseDown = function (e) {\n    if (_this3.props.onMouseDown) {\n      _this3.props.onMouseDown(e);\n    }\n\n    if (!_this3.props.disabled) {\n      _this3.setState({\n        pressed: true\n      });\n    }\n  };\n\n  this._handleTouchStart = function (e) {\n    if (_this3.props.onTouchStart) {\n      _this3.props.onTouchStart(e);\n    }\n\n    if (!_this3.props.disabled) {\n      _this3.setState({\n        pressed: true\n      });\n    }\n  };\n\n  this._handleTouchEnd = function (e) {\n    if (_this3.props.onTouchEnd) {\n      _this3.props.onTouchEnd(e);\n    }\n\n    _this3._blur();\n\n    captureNextEvent('mouseover');\n  };\n\n  this._handleKeyUp = function (e) {\n    if (_this3.props.onKeyUp) {\n      _this3.props.onKeyUp(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.addEventListener('click', _this3._blur);\n\n      _this3.setState({\n        pressed: true\n      });\n    }\n  };\n\n  this._handleKeyDown = function (e) {\n    if (_this3.props.onKeyDown) {\n      _this3.props.onKeyDown(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.removeEventListener('click', _this3._blur);\n\n      _this3.setState({\n        pressed: false\n      });\n    }\n  };\n\n  this._handleMouseEnter = function (e) {\n    if (_this3.props.onMouseEnter) {\n      _this3.props.onMouseEnter(e);\n    }\n\n    if (!_this3.props.disabled) {\n      _this3.setState({\n        hover: true\n      });\n    }\n  };\n\n  this._handleMouseLeave = function (e) {\n    if (_this3.props.onMouseLeave) {\n      _this3.props.onMouseLeave(e);\n    }\n\n    if (!_this3.props.disabled) {\n      _this3.setState({\n        hover: false\n      });\n    }\n  };\n\n  this._animateForSnackbar = function (multiline, leaveTimeout) {\n    if (typeof leaveTimeout === 'number') {\n      _this3._snackbarTimeout = setTimeout(function () {\n        _this3._snackbarTimeout = setTimeout(function () {\n          _this3._snackbarTimeout = null;\n\n          _this3.setState({\n            snackbar: false\n          });\n        }, leaveTimeout + 150);\n\n        _this3.setState({\n          snackbarType: null\n        });\n      }, TICK);\n    } else {\n      _this3._snackbarTimeout = setTimeout(function () {\n        _this3._snackbarTimeout = null;\n\n        _this3.setState({\n          snackbar: true,\n          snackbarType: multiline ? 'multiline-' : ''\n        });\n      }, TICK);\n    }\n  };\n};\n\nexport default injectInk(injectTooltip(Button));","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Buttons/Button.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","deprecated","TAB","TICK","getBtnStyles","invalidIf","captureNextEvent","FontIcon","IconSeparator","injectInk","injectTooltip","Button","_PureComponent","_temp","_this","_ret","_len","args","Array","_key","apply","concat","_initialiseProps","componentWillReceiveProps","nextProps","props","disabled","state","hover","setState","componentWillUpdate","nextState","_this2","pressed","_timeout","setTimeout","_attemptedBlur","componentWillUnmount","clearTimeout","_snackbarTimeout","window","removeEventListener","_blur","render","_getBtnStyles","_props","className","iconClassName","iconChildren","iconBefore","href","primary","secondary","flat","raised","floating","mini","fixed","fixedPosition","component","ink","tooltip","icon","forceIconSize","forceIconFontSize","type","children","swapTheming","svg","propIconEl","iconEl","label","_state","snackbar","snackbarType","iconBtnType","visibleChildren","resolvedIconChildren","createElement","forceSize","forceFontSize","inherit","el","Children","only","cloneElement","error","Component","onTouchStart","_handleTouchStart","onTouchEnd","_handleTouchEnd","onMouseDown","_handleMouseDown","onMouseUp","_handleMouseUp","onKeyDown","_handleKeyDown","onKeyUp","_handleKeyUp","onMouseEnter","_handleMouseEnter","onMouseLeave","_handleMouseLeave","propTypes","style","object","string","bool","node","element","propName","_len2","_key2","c","validator","oneOf","isRequired","undefined","oneOfType","func","onClick","tooltipLabel","tooltipDelay","number","tooltipPosition","_typeValidator","defined","filter","d","len","Error","noIcon","defaultProps","_this3","e","which","keyCode","addEventListener","_animateForSnackbar","multiline","leaveTimeout"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { TAB } from '../constants/keyCodes';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getBtnStyles from './getBtnStyles';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport FontIcon from '../FontIcons/FontIcon';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport injectInk from '../Inks/injectInk';\nimport injectTooltip from '../Tooltips/injectTooltip';\n\n/**\n * The `Button` component can either be a `FlatButton`, `RaisedButton`, `IconButton`, or a\n * `FloatingButton`.\n *\n * A `FlatButton` is a button with no depth on the screen that is ideally used in `Dialog`s\n * or `CardActions`. The text can be optionally styled with the `primary` or `secondary` colors.\n *\n * A `RaisedButton` is a button with some depth to help actions have more prominent in flat\n * layouts or layouts with varying content. The background can be styled by the light/dark theme,\n * or optionally the `primary` or `secondary` color.\n *\n * An `IconButton` is a button that just displays a `FontIcon` as the child in a circle.\n * The `FontIcon` can be optionally styled with the `primary` or `secondary` color.\n *\n * A `FloatingButton` is a special case. Woop\n */\n\nvar Button = function (_PureComponent) {\n  _inherits(Button, _PureComponent);\n\n  function Button() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Button.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.disabled && !nextProps.disabled && this.state.hover) {\n      this.setState({ hover: false });\n    }\n  };\n\n  Button.prototype.componentWillUpdate = function componentWillUpdate(nextProps, nextState) {\n    var _this2 = this;\n\n    if (!this.state.pressed && nextState.pressed) {\n      this._timeout = setTimeout(function () {\n        _this2._timeout = null;\n        if (_this2._attemptedBlur) {\n          _this2._attemptedBlur = false;\n\n          _this2.setState({ pressed: false });\n        }\n      }, 450);\n    }\n  };\n\n  Button.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    if (this._snackbarTimeout) {\n      clearTimeout(this._snackbarTimeout);\n    }\n\n    window.removeEventListener('click', this._blur);\n  };\n\n  Button.prototype.render = function render() {\n    var _getBtnStyles;\n\n    var _props = this.props,\n        className = _props.className,\n        iconClassName = _props.iconClassName,\n        iconChildren = _props.iconChildren,\n        iconBefore = _props.iconBefore,\n        href = _props.href,\n        primary = _props.primary,\n        secondary = _props.secondary,\n        flat = _props.flat,\n        raised = _props.raised,\n        floating = _props.floating,\n        mini = _props.mini,\n        fixed = _props.fixed,\n        fixedPosition = _props.fixedPosition,\n        disabled = _props.disabled,\n        component = _props.component,\n        ink = _props.ink,\n        tooltip = _props.tooltip,\n        icon = _props.icon,\n        forceIconSize = _props.forceIconSize,\n        forceIconFontSize = _props.forceIconFontSize,\n        type = _props.type,\n        children = _props.children,\n        swapTheming = _props.swapTheming,\n        svg = _props.svg,\n        propIconEl = _props.iconEl,\n        label = _props.label,\n        props = _objectWithoutProperties(_props, ['className', 'iconClassName', 'iconChildren', 'iconBefore', 'href', 'primary', 'secondary', 'flat', 'raised', 'floating', 'mini', 'fixed', 'fixedPosition', 'disabled', 'component', 'ink', 'tooltip', 'icon', 'forceIconSize', 'forceIconFontSize', 'type', 'children', 'swapTheming', 'svg', 'iconEl', 'label']);\n\n    var iconEl = this.props.iconEl;\n\n\n    if (!href) {\n      props.type = type;\n    }\n\n    var _state = this.state,\n        pressed = _state.pressed,\n        hover = _state.hover,\n        snackbar = _state.snackbar,\n        snackbarType = _state.snackbarType;\n\n    var iconBtnType = icon || floating;\n\n    var visibleChildren = void 0;\n    if (!iconEl && !svg && (iconClassName || iconChildren || iconBtnType || label && children)) {\n      var resolvedIconChildren = iconChildren;\n      if (typeof iconChildren === 'undefined') {\n        resolvedIconChildren = iconBtnType || label ? children : null;\n      }\n\n      iconEl = React.createElement(\n        FontIcon,\n        { iconClassName: iconClassName, forceSize: forceIconSize, forceFontSize: forceIconFontSize, inherit: true },\n        resolvedIconChildren\n      );\n    } else if (iconEl || svg) {\n      var el = React.Children.only(iconEl || children);\n      iconEl = React.cloneElement(el, { inherit: !el.props.error });\n    }\n\n    if (!iconBtnType) {\n      visibleChildren = label || children;\n      if (iconEl) {\n        visibleChildren = React.createElement(\n          IconSeparator,\n          { label: visibleChildren, iconBefore: iconBefore },\n          iconEl\n        );\n      }\n    } else {\n      visibleChildren = iconEl;\n    }\n\n    var Component = component || (href ? 'a' : 'button');\n    return React.createElement(\n      Component,\n      _extends({}, props, {\n        disabled: disabled,\n        onTouchStart: this._handleTouchStart,\n        onTouchEnd: this._handleTouchEnd,\n        onMouseDown: this._handleMouseDown,\n        onMouseUp: this._handleMouseUp,\n        onKeyDown: this._handleKeyDown,\n        onKeyUp: this._handleKeyUp,\n        onMouseEnter: this._handleMouseEnter,\n        onMouseLeave: this._handleMouseLeave,\n        href: href,\n        className: getBtnStyles({\n          flat: flat,\n          raised: raised,\n          icon: icon,\n          floating: floating,\n          disabled: disabled,\n          primary: primary,\n          secondary: secondary,\n          hover: hover,\n          swapTheming: swapTheming,\n          pressed: pressed,\n          mini: mini,\n          fixed: fixed,\n          fixedPosition: fixedPosition\n        }, (_getBtnStyles = {\n          'md-btn--tooltip': tooltip,\n          'md-btn--snackbar-floating': snackbar\n        }, _getBtnStyles['md-btn--snackbar-floating-' + snackbarType + 'adjust'] = snackbar && snackbarType !== null, _getBtnStyles), 'md-inline-block', className)\n      }),\n      ink,\n      tooltip,\n      visibleChildren\n    );\n  };\n\n  return Button;\n}(PureComponent);\n\nButton.propTypes = {\n  /**\n   * An optional style to apply to the button.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the button.\n   */\n  className: PropTypes.string,\n\n  /**\n   * A boolean if the icon should appear before or after the text for a `FlatButton` or\n   * a `RaisedButton`.\n   */\n  iconBefore: PropTypes.bool,\n\n  /**\n   * Any children used to display the button. When the button type is `icon` or `floating`,\n   * this can be used to render the `FontIcon` instead of the `iconChildren` prop.\n   *\n   * When the button type is `raised` or `flat`, this will be the label or any other elements\n   * you'd like to display in the button. This can work hand-in-hand with the `iconClassName`\n   * and `iconChildren` to make a button with an icon and text.\n   */\n  children: PropTypes.node,\n\n  /**\n   * An icon className to use in an optional `FontIcon` in any version of the button. This will\n   * be used with the `children` prop. If the `floating` or `icon` props are set to true, this or\n   * the children are required.\n   *\n   * @see {@link #iconEl}\n   */\n  iconClassName: PropTypes.string,\n\n  /**\n   * Any children to use to display an icon in the button.\n   *\n   * @see {@link #iconEl}\n   */\n  iconChildren: PropTypes.node,\n\n  /**\n   * An optional icon to display. This prop is recommended over the `iconClassName` and `iconChildren`\n   * props since it allows more control for you. There is also better SVG support since it won't wrap\n   * the SVG with the `FontIcon` element.\n   */\n  iconEl: PropTypes.element,\n\n  /**\n   * The type for the button. This is required when the `component` prop is not\n   * the 'a' tag, a `function`, or when the `href` prop is defined.\n   */\n  type: function type(props, propName, component) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      args[_key2 - 3] = arguments[_key2];\n    }\n\n    var c = props.component;\n    var validator = PropTypes.oneOf(['button', 'submit', 'reset']);\n    if (!props.href && c !== 'a' && typeof c !== 'function') {\n      validator = validator.isRequired;\n    }\n\n    return validator.apply(undefined, [props, propName, component].concat(args));\n  },\n\n  /**\n   * Boolean if the button should be styled with the primary color.\n   */\n  primary: PropTypes.bool,\n\n  /**\n   * Boolean if the button should be styled with the secondary color.\n   */\n  secondary: PropTypes.bool,\n\n  /**\n   * Boolean if the button is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * An optional href for the button. This will style the `a` tag as a button.\n   */\n  href: PropTypes.string,\n\n  /**\n   * An optional component to render the button as. This allows you to get all the styles and functionality\n   * of the Button, but as a custom React component.\n   */\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]),\n\n  /**\n   * An optional function to call when the `click` event is triggered.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * An optional function to call when the `touchstart` event is triggered.\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * An optional function to call when the `touchend` event is triggered.\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mousedown` event is triggered.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseup` event is triggered.\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * An optional function to call when the `keyup` event is triggered.\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * An optional function to call when the `keydown` event is triggered.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseenter` event is triggered.\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseleave` event is triggered.\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * Boolean if the `FloatingButton` should be fixed to the page. This prop can\n   * only be enabled if the `floating` prop is true.\n   */\n  fixed: invalidIf(PropTypes.bool, 'flat', 'raised', 'icon'),\n\n  /**\n   * The position that the `FloatingButton` should be fixed to the page. It will\n   * either be fixed to the top right, top left, bottom right, or bottom left of\n   * the page. This prop is only used if the `floating` prop and `fixed` prop are\n   * `true`.\n   */\n  fixedPosition: PropTypes.oneOf(['tr', 'tl', 'br', 'bl']).isRequired,\n\n  /**\n   * Boolean if the `FloatingButton` should be `mini`. This prop can only be used\n   * when the `floating` prop is true.\n   */\n  mini: invalidIf(PropTypes.bool, 'flat', 'raised', 'icon'),\n\n  /**\n   * Boolean if the `Button` should be styled as a `FlatButton`.\n   */\n  flat: PropTypes.bool,\n\n  /**\n   * Boolean if the `Button` should be styled as a `RaisedButton`.\n   */\n  raised: PropTypes.bool,\n\n  /**\n   * Boolean if the `Button` should be styled as a `IconButton`.\n   *\n   * @see {@link #svg}\n   */\n  icon: PropTypes.bool,\n\n  /**\n   * Boolean if the `Button` should be styled as a `FloatingButton`.\n   *\n   * @see {@link #svg}\n   */\n  floating: PropTypes.bool,\n\n  /**\n   * Boolean if the theming of `primary` or `secondary` should be swapped. By default,\n   * only flat and icon buttons can gain the theme colors as text color while the raised\n   * and floating buttons can gain the theme colors as background color.\n   *\n   * If this prop is enabled, the flat and icon buttons will gain the theme background colors\n   * while the raised and icon will gain the theme text colors instead.\n   *\n   * @see {@link #primary}\n   * @see {@link #secondary}\n   */\n  swapTheming: PropTypes.bool,\n\n  /**\n   * An optional label to use for the tooltip. This is normally only used for\n   * `IconButton`s or `FloatingButton`s, but can be used on `FlatButton`s and\n   * `RaisedButton`s if you wish. Knock yourself out!\n   *\n   * If this prop is omitted, no tooltip will be included.\n   */\n  tooltipLabel: PropTypes.node,\n\n  /**\n   * An optional delay before the tooltip appears on mouse over.\n   */\n  tooltipDelay: PropTypes.number,\n\n  /**\n   * The position for the tooltip.\n   */\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * An ink from `injectInk`.\n   * @access private\n   */\n  ink: PropTypes.node,\n\n  /**\n   * A tooltip from `injectTooltip`\n   * @access private\n   */\n  tooltip: PropTypes.node,\n\n  /**\n   * Custom validator for verifying that only one type is defined and that\n   * at one type is defined.\n   */\n  _typeValidator: function _typeValidator(props, propName, component) {\n    var flat = props.flat,\n        raised = props.raised,\n        icon = props.icon,\n        floating = props.floating;\n\n\n    var defined = [raised, flat, icon, floating].filter(function (d) {\n      return d;\n    });\n    var len = defined.length;\n    if (len === 0) {\n      return new Error('A material design button type must be specified in the `' + component + '` but none were ' + 'given. Valid types are `flat`, `raised`, `icon`, or `floating`.');\n    } else if (len !== 1) {\n      return new Error('Only one material design button type may be specified in the `' + component + '` but `' + len + '` ' + 'were given. Select only one of `flat`, `raised`, `icon`, or `floating`.');\n    }\n\n    return null;\n  },\n\n  /**\n   * Either a boolean that will enforce the 24x24 size of the font icon or a number of the size\n   * to enforce. This is useful when using other font icon libraries that do not have a consistent\n   * size.\n   */\n  forceIconSize: FontIcon.propTypes.forceSize,\n\n  /**\n   * Boolean if the `forceIconSize` prop should also force the `font-size` instead of only `width` and `height`.\n   */\n  forceIconFontSize: PropTypes.bool,\n\n  /**\n   * Boolean if the child is an SVGIcon or FontIcon when using the `icon` or `floating` props. This is only needed\n   * until the next release when the `label` migration can be removed.\n   */\n  svg: PropTypes.bool,\n\n  label: deprecated(PropTypes.node, 'Use the `children` prop instead'),\n  noIcon: deprecated(PropTypes.bool, 'This has been removed during the alpha release. Children will always attempt to be rendered outside of an ' + 'icon by default for flat and raised buttons')\n};\nButton.defaultProps = {\n  type: 'button',\n  iconBefore: true,\n  fixedPosition: 'br'\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.state = {\n    pressed: false,\n    snackbar: false,\n    snackbarType: null\n  };\n\n  this._blur = function () {\n    if (_this3.props.disabled) {\n      return;\n    }\n\n    if (_this3._timeout) {\n      _this3._attemptedBlur = true;\n    } else {\n      _this3.setState({ pressed: false });\n    }\n  };\n\n  this._handleMouseUp = function (e) {\n    if (_this3.props.onMouseUp) {\n      _this3.props.onMouseUp(e);\n    }\n\n    _this3._blur();\n  };\n\n  this._handleMouseDown = function (e) {\n    if (_this3.props.onMouseDown) {\n      _this3.props.onMouseDown(e);\n    }\n\n    if (!_this3.props.disabled) {\n      _this3.setState({ pressed: true });\n    }\n  };\n\n  this._handleTouchStart = function (e) {\n    if (_this3.props.onTouchStart) {\n      _this3.props.onTouchStart(e);\n    }\n\n    if (!_this3.props.disabled) {\n      _this3.setState({ pressed: true });\n    }\n  };\n\n  this._handleTouchEnd = function (e) {\n    if (_this3.props.onTouchEnd) {\n      _this3.props.onTouchEnd(e);\n    }\n\n    _this3._blur();\n    captureNextEvent('mouseover');\n  };\n\n  this._handleKeyUp = function (e) {\n    if (_this3.props.onKeyUp) {\n      _this3.props.onKeyUp(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.addEventListener('click', _this3._blur);\n      _this3.setState({ pressed: true });\n    }\n  };\n\n  this._handleKeyDown = function (e) {\n    if (_this3.props.onKeyDown) {\n      _this3.props.onKeyDown(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.removeEventListener('click', _this3._blur);\n      _this3.setState({ pressed: false });\n    }\n  };\n\n  this._handleMouseEnter = function (e) {\n    if (_this3.props.onMouseEnter) {\n      _this3.props.onMouseEnter(e);\n    }\n\n    if (!_this3.props.disabled) {\n      _this3.setState({ hover: true });\n    }\n  };\n\n  this._handleMouseLeave = function (e) {\n    if (_this3.props.onMouseLeave) {\n      _this3.props.onMouseLeave(e);\n    }\n\n    if (!_this3.props.disabled) {\n      _this3.setState({ hover: false });\n    }\n  };\n\n  this._animateForSnackbar = function (multiline, leaveTimeout) {\n    if (typeof leaveTimeout === 'number') {\n      _this3._snackbarTimeout = setTimeout(function () {\n        _this3._snackbarTimeout = setTimeout(function () {\n          _this3._snackbarTimeout = null;\n\n          _this3.setState({ snackbar: false });\n        }, leaveTimeout + 150);\n\n        _this3.setState({ snackbarType: null });\n      }, TICK);\n    } else {\n      _this3._snackbarTimeout = setTimeout(function () {\n        _this3._snackbarTimeout = null;\n\n        _this3.setState({ snackbar: true, snackbarType: multiline ? 'multiline-' : '' });\n      }, TICK);\n    }\n  };\n};\n\nexport default injectInk(injectTooltip(Button));"]},"metadata":{},"sourceType":"module"}