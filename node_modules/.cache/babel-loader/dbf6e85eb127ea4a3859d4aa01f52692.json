{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport TabIndicator from './TabIndicator';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport MenuTab from './MenuTab';\nimport TabOverflowButton from './TabOverflowButton';\nvar MOBILE_PADDING = 72;\nvar DESKTOP_PADDING = 80;\nvar MOBILE_TAB_MIN_WIDTH = 72;\nvar DESKTOP_TAB_MIN_WIDTH = 160;\n/**\n * The `Tabs` component is used to manage the state of which tab is currently active.\n */\n\nvar Tabs = function (_PureComponent) {\n  _inherits(Tabs, _PureComponent);\n\n  function Tabs(props) {\n    _classCallCheck(this, Tabs);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this._setContainer = function (container) {\n      _this._container = container;\n\n      _this._positionElements(_this._container !== null);\n    };\n\n    _this._positionElements = function (initialRender) {\n      initialRender = typeof initialRender === 'boolean' && initialRender;\n\n      if (!_this._container) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          centered = _this$props.centered,\n          overflowMenu = _this$props.overflowMenu;\n      var mobile = _this.props.mobile;\n      var paddingLeft = void 0;\n\n      if (!centered && _this._shouldAlign(_this.props)) {\n        paddingLeft = _this._calcPaddingLeft(_this._container, mobile);\n      }\n\n      var overflowAtIndex = void 0;\n\n      if (!mobile) {\n        overflowAtIndex = _this._calcOverflowIndex(_this._container, paddingLeft, overflowMenu);\n      }\n\n      var indicatorPosition = _this._calcIndicatorPosition(_this._container, initialRender ? paddingLeft : 0);\n\n      _this.setState(_extends({\n        mobile: mobile,\n        paddingLeft: paddingLeft,\n        overflowAtIndex: overflowAtIndex\n      }, indicatorPosition), _this._scrollActiveIntoView);\n    };\n\n    _this._scrollActiveIntoView = function () {\n      if (!_this._container || !_this.state.mobile) {\n        return;\n      }\n\n      var active = _this._container.querySelector('.md-tab--active');\n\n      if (!active) {\n        return;\n      }\n\n      var allTabs = Array.prototype.slice.call(_this._container.querySelectorAll('.md-tab'));\n\n      if (allTabs[0] === active) {\n        _this._container.scrollLeft = 0;\n        return;\n      }\n\n      var _this$_container = _this._container,\n          containerWidth = _this$_container.offsetWidth,\n          scrollLeft = _this$_container.scrollLeft;\n      var activeWidth = active.offsetWidth,\n          activeOffset = active.offsetLeft;\n      var inFullViewLeft = activeOffset - scrollLeft >= 0;\n      var inFullViewRight = activeOffset + activeWidth - (containerWidth + scrollLeft) <= 0;\n\n      if (inFullViewLeft && inFullViewRight) {\n        return;\n      }\n\n      var offset = 0;\n      allTabs.some(function (tab, i) {\n        if (i < _this.props.activeTabIndex) {\n          offset += tab.offsetWidth;\n        }\n\n        return i < _this.state.activeTabIndex;\n      });\n      _this._container.scrollLeft = offset;\n    };\n\n    _this._handleTabChange = function (index, tabId, tabControlsId, tabChildren, event) {\n      if (_this.props.onTabChange) {\n        _this.props.onTabChange(index, tabId, tabControlsId, tabChildren, event);\n      }\n\n      if (typeof _this.props.activeTabIndex === 'undefined') {\n        _this.setState(_extends({\n          activeTabIndex: index\n        }, _this._calcIndicatorPosition(_this._container, 0, index, _this.state.overflowAtIndex)));\n      }\n    };\n\n    _this._mapToOverflowTabProps = function (tab, i) {\n      var index = i + _this.state.overflowAtIndex;\n      var active = getField(_this.props, _this.state, 'activeTabIndex') === index;\n      var tabEl = Children.only(tab);\n      var handleTabChange = _this._handleTabChange;\n      return {\n        active: active,\n        primaryText: tabEl.props.label,\n        onClick: function handleClick(event) {\n          var _tabEl$props = tabEl.props,\n              onClick = _tabEl$props.onClick,\n              id = _tabEl$props.id,\n              controlsId = _tabEl$props.controlsId,\n              children = _tabEl$props.children;\n\n          if (onClick) {\n            onClick(index, event);\n          }\n\n          handleTabChange(index, id, controlsId, children, event);\n        }\n      };\n    };\n\n    _this._nextIndexes = function (increment) {\n      var _this$state = _this.state,\n          overflowIndex = _this$state.overflowIndex,\n          overflowAtIndex = _this$state.overflowAtIndex;\n      var visibleAmt = (overflowAtIndex - overflowIndex) * (increment ? 1 : -1);\n\n      _this.setState({\n        overflowIndex: overflowIndex + visibleAmt,\n        overflowAtIndex: overflowAtIndex + visibleAmt\n      });\n    };\n\n    _this._showNextTabs = function () {\n      _this._nextIndexes(true);\n    };\n\n    _this._showPreviousTabs = function () {\n      _this._nextIndexes(false);\n    };\n\n    _this._setTab = function (tab, index) {\n      if (tab) {\n        _this._tabList[index] = tab;\n      }\n    };\n\n    var defaultTabIndex = typeof props.activeTabIndex === 'undefined' ? props.defaultTabIndex : props.activeTabIndex;\n    var indicatorWidth = props.mobile ? MOBILE_TAB_MIN_WIDTH : DESKTOP_TAB_MIN_WIDTH;\n    _this.state = {\n      indicatorWidth: indicatorWidth,\n      indicatorOffset: indicatorWidth * defaultTabIndex,\n      indicatorVisible: true,\n      overflowIndex: 0\n    };\n\n    if (typeof props.activeTabIndex === 'undefined') {\n      _this.state.activeTabIndex = defaultTabIndex;\n    }\n\n    _this._tabList = [];\n    return _this;\n  }\n\n  Tabs.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.activeTabIndex !== nextProps.activeTabIndex) {\n      this.setState(_extends({}, this._calcIndicatorPosition(this._container, 0, nextProps.activeTabIndex, this.state.overflowAtIndex)), this._scrollActiveIntoView);\n    } else if (!this._shouldAlign(nextProps) && this._shouldAlign(this.props)) {\n      this.setState({\n        paddingLeft: null\n      });\n    }\n  };\n\n  Tabs.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this._shouldAlign(this.props) && this.state.overflowAtIndex !== prevState.overflowAtIndex) {\n      var paddingLeft = this._calcPaddingLeft(this._container, this.state.mobile); // Have to wait for the overflow menus to appear, then wop\n\n      /* eslint-disable react/no-did-update-set-state */\n\n\n      this.setState({\n        paddingLeft: paddingLeft\n      });\n    } else {\n      var labels = Children.map(Children.toArray(this.props.children), function (_ref) {\n        var label = _ref.props.label;\n        return label;\n      });\n      var prevLabels = Children.map(Children.toArray(prevProps.children), function (_ref2) {\n        var label = _ref2.props.label;\n        return label;\n      });\n\n      if (labels.length !== prevLabels.length || labels.filter(function (_, i) {\n        return labels[i] !== prevLabels[i];\n      }).length) {\n        this.setState(_extends({}, this._calcIndicatorPosition(this._container, 0, this.props.activeTabIndex, this.state.overflowAtIndex)), this._scrollActiveIntoView);\n      }\n    }\n  };\n\n  Tabs.prototype.getTabList = function getTabList() {\n    return this._tabList.slice(0);\n  };\n\n  Tabs.prototype.getTabByIndex = function getTabByIndex(tabIndex) {\n    return this._tabList[tabIndex];\n  };\n\n  Tabs.prototype._shouldAlign = function _shouldAlign(props) {\n    return typeof props.alignToKeyline === 'boolean' ? props.alignToKeyline : Children.toArray(props.children).filter(function (child) {\n      return !!child;\n    }).length > 3;\n  };\n\n  Tabs.prototype._calcPaddingLeft = function _calcPaddingLeft(container, mobile) {\n    var mediaPadding = mobile ? MOBILE_PADDING : DESKTOP_PADDING;\n    var tab = container.querySelector('.md-tab');\n\n    var _tab$querySelector = tab.querySelector('.md-tab-label'),\n        labelOffset = _tab$querySelector.offsetLeft;\n\n    return mediaPadding - labelOffset;\n  };\n\n  Tabs.prototype._calcOverflowIndex = function _calcOverflowIndex(container) {\n    var paddingLeft = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var menu = arguments[2];\n    var containerWidth = container.offsetWidth;\n    var overflowIndex = 0;\n\n    if (containerWidth < container.scrollWidth) {\n      var tabs = Array.prototype.slice.call(container.querySelectorAll('.md-tab'));\n      var totalWidth = 0;\n      tabs.some(function (tab, i) {\n        overflowIndex = i;\n        totalWidth += tab.offsetWidth;\n        return totalWidth > containerWidth;\n      });\n    }\n\n    return Math.max(0, overflowIndex - (menu ? 1 : 0));\n  };\n\n  Tabs.prototype._calcIndicatorPosition = function _calcIndicatorPosition(container) {\n    var paddingLeft = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var activeTabIndex = arguments[2];\n    var overflowAtIndex = arguments[3];\n    var activeItem = void 0;\n\n    if (typeof activeTabIndex === 'number') {\n      if (overflowAtIndex > 0 && activeTabIndex >= overflowAtIndex) {\n        activeItem = container.querySelector('.md-menu--tab');\n      } else {\n        activeItem = container.querySelectorAll('.md-tab')[activeTabIndex];\n      }\n    } else {\n      activeItem = container.querySelector('.md-tab--active');\n    }\n\n    if (!activeItem) {\n      return {\n        indicatorVisible: false\n      };\n    }\n\n    var _activeItem = activeItem,\n        indicatorWidth = _activeItem.offsetWidth,\n        indicatorOffset = _activeItem.offsetLeft;\n    return {\n      indicatorWidth: indicatorWidth,\n      indicatorOffset: indicatorOffset + paddingLeft,\n      indicatorVisible: !overflowAtIndex || overflowAtIndex > activeTabIndex\n    };\n  };\n\n  Tabs.prototype.render = function render() {\n    var _this2 = this;\n\n    var _state = this.state,\n        indicatorOffset = _state.indicatorOffset,\n        indicatorWidth = _state.indicatorWidth,\n        indicatorVisible = _state.indicatorVisible,\n        overflowIndex = _state.overflowIndex,\n        overflowAtIndex = _state.overflowAtIndex,\n        paddingLeft = _state.paddingLeft;\n\n    var _props = this.props,\n        Component = _props.component,\n        style = _props.style,\n        className = _props.className,\n        activeTabClassName = _props.activeTabClassName,\n        inactiveTabClassName = _props.inactiveTabClassName,\n        colored = _props.colored,\n        centered = _props.centered,\n        tabId = _props.tabId,\n        overflowMenu = _props.overflowMenu,\n        overflowMenuLabel = _props.overflowMenuLabel,\n        nextIcon = _props.nextIcon,\n        previousIcon = _props.previousIcon,\n        overflowMenuIcon = _props.overflowMenuIcon,\n        indicatorHeight = _props.indicatorHeight,\n        overflowMenuIconChildren = _props.overflowMenuIconChildren,\n        overflowMenuIconClassName = _props.overflowMenuIconClassName,\n        nextIconChildren = _props.nextIconChildren,\n        nextIconClassName = _props.nextIconClassName,\n        previousIconChildren = _props.previousIconChildren,\n        previousIconClassName = _props.previousIconClassName,\n        propActiveIndex = _props.activeTabIndex,\n        defaultTabIndex = _props.defaultTabIndex,\n        onTabChange = _props.onTabChange,\n        alignToKeyline = _props.alignToKeyline,\n        mobile = _props.mobile,\n        defaultMedia = _props.defaultMedia,\n        desktopMinWidth = _props.desktopMinWidth,\n        props = _objectWithoutProperties(_props, ['component', 'style', 'className', 'activeTabClassName', 'inactiveTabClassName', 'colored', 'centered', 'tabId', 'overflowMenu', 'overflowMenuLabel', 'nextIcon', 'previousIcon', 'overflowMenuIcon', 'indicatorHeight', 'overflowMenuIconChildren', 'overflowMenuIconClassName', 'nextIconChildren', 'nextIconClassName', 'previousIconChildren', 'previousIconClassName', 'activeTabIndex', 'defaultTabIndex', 'onTabChange', 'alignToKeyline', 'mobile', 'defaultMedia', 'desktopMinWidth']);\n\n    var activeTabIndex = getField(this.props, this.state, 'activeTabIndex');\n    var icon = false;\n    var children = Children.map(Children.toArray(this.props.children), function (tab, index) {\n      var handleOnClick = function handleOnClick(tabIndex, id, tabControlsId, tabChildren, event) {\n        if (tab.props.onClick) {\n          tab.props.onClick(tabId, id, tabControlsId, tabChildren, event);\n        }\n\n        _this2._handleTabChange(tabIndex, id, tabControlsId, tabChildren, event);\n      };\n\n      if (tab.props.icon) {\n        icon = true;\n      }\n\n      return cloneElement(tab, {\n        index: index,\n        activeClassName: activeTabClassName,\n        inactiveClassName: inactiveTabClassName,\n        id: tab.props.id || tabId + '-' + index,\n        controlsId: tab.props.controlsId || tabId + '-panel-' + index,\n        active: index === activeTabIndex,\n        ref: function ref(tabRef) {\n          return _this2._setTab(tabRef, index);\n        },\n        onClick: handleOnClick\n      });\n    });\n    var overflow = void 0;\n    var nextControl = void 0;\n    var previousControl = void 0;\n\n    if (overflowAtIndex) {\n      var length = children.length;\n\n      if (overflowMenu) {\n        overflow = React.createElement(MenuTab, {\n          id: tabId + '-overflow-menu',\n          activeTabIndex: activeTabIndex,\n          overflowAtIndex: overflowAtIndex,\n          label: React.createElement(IconSeparator, {\n            label: overflowMenuLabel\n          }, getDeprecatedIcon(overflowMenuIconClassName, overflowMenuIconChildren, overflowMenuIcon)),\n          tabs: children.slice(overflowAtIndex, children.length).map(this._mapToOverflowTabProps)\n        });\n      }\n\n      children = children.slice(overflowIndex, overflowAtIndex);\n\n      if (!overflowMenu && overflowIndex > 0) {\n        previousControl = React.createElement(TabOverflowButton, {\n          left: true,\n          icon: icon,\n          iconEl: getDeprecatedIcon(previousIconClassName, previousIconChildren, previousIcon),\n          onClick: this._showPreviousTabs\n        });\n      }\n\n      if (!overflowMenu && length > 3 && overflowAtIndex + overflowIndex <= length) {\n        nextControl = React.createElement(TabOverflowButton, {\n          icon: icon,\n          onClick: this._showNextTabs,\n          iconEl: getDeprecatedIcon(nextIconClassName, nextIconChildren, nextIcon)\n        });\n      }\n    }\n\n    return React.createElement(Component, _extends({}, props, {\n      style: _extends({}, style, {\n        paddingLeft: paddingLeft\n      }),\n      className: cn('md-tabs', {\n        'md-tabs--pagination': overflowAtIndex && !overflowMenu,\n        'md-tabs--centered': centered,\n        'md-background--primary': colored\n      }, className),\n      role: 'tablist'\n    }), React.createElement(ResizeObserver, {\n      watchWidth: true,\n      watchHeight: true,\n      onResize: this._positionElements,\n      elRef: this._setContainer\n    }), previousControl, children, nextControl, overflow, React.createElement(TabIndicator, {\n      offset: indicatorOffset,\n      height: indicatorHeight,\n      width: indicatorWidth,\n      visible: indicatorVisible\n    }));\n  };\n\n  return Tabs;\n}(PureComponent);\n\nTabs.propTypes = {\n  /**\n   * A base id to use for each `Tab`. When the child tabs are created, they are cloned\n   * with some additional accessibility props. Each tab will get a prop with this and the\n   * current index of the tab.\n   */\n  tabId: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The className to use when a tab is currently active. The default className does not\n   * actually apply any styles.\n   *\n   * If this prop is set, it will override any `activeClassName` props applied to the child\n   * `Tab`s. Either set a custom `activeClassName` on each `Tab`, or use this prop to apply\n   * the same `activeClassName` to each `Tab`.\n   *\n   * @see {@link Tabs/Tab#activeClassName}\n   */\n  activeTabClassName: PropTypes.string,\n\n  /**\n   * The className to use when the tab is not active and not selected. By default,\n   * this will set inactive tabs' color to `$md-white-base`. This works great\n   * if the tabs are placed on a colored toolbar but fails when the tabs are not colored\n   * or on a white background. In these cases, it is recommended to change this value\n   * to `md-text--secondary` or some other class name.\n   *\n   * If this prop is set, it will override any `inactiveClassName` props applied to the child\n   * `Tab`s. Either set a custom `inactiveClassName` on each `Tab`, or use this prop to apply\n   * the same `inactiveClassName` to each `Tab`.\n   *\n   * @see {@link Tabs/Tab#inactiveClassName}\n   */\n  inactiveTabClassName: PropTypes.string,\n\n  /**\n   * The component to render the tabs in.\n   */\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * This should either be a single `Tab` component or a list of `Tab` components. Unfortunately,\n   * the child *must* be exactly a `Tab` component because this is unable to extract the correct\n   * `label` and `children` from a custom `Tab` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]).isRequired,\n\n  /**\n   * Boolean if the tabs should be centered instead of aligned to the keyline. The tabs will\n   * only be aligned to the keyline when there are more than 3 tabs and the `alignToKeyline`\n   * prop is `false`.\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * Boolean if the tabs should align to a toolbar's title keyline. If this is undefined,\n   * the tabs will try to align to the keyline when there are more than 3 tabs.\n   */\n  alignToKeyline: PropTypes.bool,\n\n  /**\n   * Boolean if the tabs should be colored with the primary color. If this is false or undefined,\n   * the tabs will be colored for the light or dark theme.\n   */\n  colored: PropTypes.bool,\n\n  /**\n   * A boolean if the overflow tabs on desktop displays should appear in a menu. If this is false,\n   * the additional tabs will be available by using pagination buttons.\n   */\n  overflowMenu: PropTypes.bool,\n\n  /**\n   * An optional function to call when the active tab is changed. The callback will include\n   * the new active tab index and a click event.\n   *\n   * ```js\n   * onTabChange(newTabIndex, event);\n   * ```\n   */\n  onTabChange: PropTypes.func,\n\n  /**\n   * An optional active tab index to use. If this is defined, it will make the component controlled\n   * and require the `onTabChange` prop to be defined.\n   */\n  activeTabIndex: controlled(PropTypes.number, 'onTabChange', 'defaultTabIndex'),\n\n  /**\n   * The default tab index to use when the component is uncontrolled.\n   */\n  defaultTabIndex: PropTypes.number.isRequired,\n\n  /**\n   * When the `overflowMenu` prop is false, this will be used to render the \"next slice of tabs\"\n   * when there are too many tabs to display at once on desktop screens.\n   */\n  nextIcon: PropTypes.element,\n\n  /**\n   * When the `overflowMenu` prop is false, this will be used to render the \"previous slice of tabs\"\n   * when there are too many tabs to display at once on desktop screens.\n   */\n  previousIcon: PropTypes.element,\n\n  /**\n   * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\n   * This will be to render the icon to the right of the label.\n   */\n  overflowMenuIcon: PropTypes.element,\n\n  /**\n   * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\n   * This will be the text that displays as a tab.\n   */\n  overflowMenuLabel: PropTypes.node.isRequired,\n\n  /**\n   * This is the height for the active tab indicator underline. This should match the value of\n   * `$md-tab-indicator-height` set in SCSS.\n   *\n   * @see [$md-tab-indicator-height](/components/tabs?tab=2#variable-md-tab-indicator-height)\n   */\n  indicatorHeight: PropTypes.number,\n\n  /**\n   * Boolean if the tabs are currently rendered on a mobile or tablet device. This is used to calculate\n   * overflow/padding on the tabs.\n   */\n  mobile: PropTypes.bool,\n  defaultMedia: deprecated(PropTypes.oneOf(['mobile', 'tablet', 'desktop']), 'Use `mobile` instead'),\n  desktopMinWidth: deprecated(PropTypes.number, 'Use `mobile` instead'),\n  nextIconChildren: deprecated(PropTypes.node, 'Use the `nextIcon` prop instead'),\n  nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\n  previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\n  previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\n  overflowMenuIconChildren: deprecated(PropTypes.node, 'Use the `overflowMenuIcon` prop instead'),\n  overflowMenuIconClassName: deprecated(PropTypes.string, 'Use the `overflowMenuIcon` prop instead')\n};\nTabs.defaultProps = {\n  component: 'ul',\n  defaultTabIndex: 0,\n  indicatorHeight: 2,\n  nextIcon: React.createElement(FontIcon, null, 'keyboard_arrow_right'),\n  previousIcon: React.createElement(FontIcon, null, 'keyboard_arrow_left'),\n  overflowMenuLabel: 'More',\n  overflowMenuIcon: React.createElement(FontIcon, null, 'arrow_drop_down')\n};\nexport default Tabs;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Tabs/Tabs.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","Children","cloneElement","PropTypes","cn","deprecated","isRequiredForA11y","getField","controlled","TabIndicator","IconSeparator","ResizeObserver","FontIcon","getDeprecatedIcon","MenuTab","TabOverflowButton","MOBILE_PADDING","DESKTOP_PADDING","MOBILE_TAB_MIN_WIDTH","DESKTOP_TAB_MIN_WIDTH","Tabs","_PureComponent","props","_this","_setContainer","container","_container","_positionElements","initialRender","_this$props","centered","overflowMenu","mobile","paddingLeft","_shouldAlign","_calcPaddingLeft","overflowAtIndex","_calcOverflowIndex","indicatorPosition","_calcIndicatorPosition","setState","_scrollActiveIntoView","state","active","querySelector","allTabs","Array","slice","querySelectorAll","scrollLeft","_this$_container","containerWidth","offsetWidth","activeWidth","activeOffset","offsetLeft","inFullViewLeft","inFullViewRight","offset","some","tab","activeTabIndex","_handleTabChange","index","tabId","tabControlsId","tabChildren","event","onTabChange","_mapToOverflowTabProps","tabEl","only","handleTabChange","primaryText","label","onClick","handleClick","_tabEl$props","id","controlsId","children","_nextIndexes","increment","_this$state","overflowIndex","visibleAmt","_showNextTabs","_showPreviousTabs","_setTab","_tabList","defaultTabIndex","indicatorWidth","indicatorOffset","indicatorVisible","componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","prevState","labels","map","toArray","_ref","prevLabels","_ref2","filter","_","getTabList","getTabByIndex","tabIndex","alignToKeyline","child","mediaPadding","_tab$querySelector","labelOffset","undefined","menu","scrollWidth","tabs","totalWidth","Math","max","activeItem","_activeItem","render","_this2","_state","_props","Component","component","style","className","activeTabClassName","inactiveTabClassName","colored","overflowMenuLabel","nextIcon","previousIcon","overflowMenuIcon","indicatorHeight","overflowMenuIconChildren","overflowMenuIconClassName","nextIconChildren","nextIconClassName","previousIconChildren","previousIconClassName","propActiveIndex","defaultMedia","desktopMinWidth","icon","handleOnClick","activeClassName","inactiveClassName","ref","tabRef","overflow","nextControl","previousControl","createElement","left","iconEl","role","watchWidth","watchHeight","onResize","elRef","height","width","visible","propTypes","oneOfType","number","string","object","func","isRequired","element","arrayOf","bool","node","oneOf","defaultProps"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport TabIndicator from './TabIndicator';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport MenuTab from './MenuTab';\nimport TabOverflowButton from './TabOverflowButton';\n\nvar MOBILE_PADDING = 72;\nvar DESKTOP_PADDING = 80;\nvar MOBILE_TAB_MIN_WIDTH = 72;\nvar DESKTOP_TAB_MIN_WIDTH = 160;\n\n/**\n * The `Tabs` component is used to manage the state of which tab is currently active.\n */\n\nvar Tabs = function (_PureComponent) {\n  _inherits(Tabs, _PureComponent);\n\n  function Tabs(props) {\n    _classCallCheck(this, Tabs);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this._setContainer = function (container) {\n      _this._container = container;\n      _this._positionElements(_this._container !== null);\n    };\n\n    _this._positionElements = function (initialRender) {\n      initialRender = typeof initialRender === 'boolean' && initialRender;\n      if (!_this._container) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          centered = _this$props.centered,\n          overflowMenu = _this$props.overflowMenu;\n      var mobile = _this.props.mobile;\n\n\n      var paddingLeft = void 0;\n      if (!centered && _this._shouldAlign(_this.props)) {\n        paddingLeft = _this._calcPaddingLeft(_this._container, mobile);\n      }\n\n      var overflowAtIndex = void 0;\n      if (!mobile) {\n        overflowAtIndex = _this._calcOverflowIndex(_this._container, paddingLeft, overflowMenu);\n      }\n\n      var indicatorPosition = _this._calcIndicatorPosition(_this._container, initialRender ? paddingLeft : 0);\n\n      _this.setState(_extends({ mobile: mobile, paddingLeft: paddingLeft, overflowAtIndex: overflowAtIndex }, indicatorPosition), _this._scrollActiveIntoView);\n    };\n\n    _this._scrollActiveIntoView = function () {\n      if (!_this._container || !_this.state.mobile) {\n        return;\n      }\n\n      var active = _this._container.querySelector('.md-tab--active');\n      if (!active) {\n        return;\n      }\n\n      var allTabs = Array.prototype.slice.call(_this._container.querySelectorAll('.md-tab'));\n      if (allTabs[0] === active) {\n        _this._container.scrollLeft = 0;\n        return;\n      }\n\n      var _this$_container = _this._container,\n          containerWidth = _this$_container.offsetWidth,\n          scrollLeft = _this$_container.scrollLeft;\n      var activeWidth = active.offsetWidth,\n          activeOffset = active.offsetLeft;\n\n      var inFullViewLeft = activeOffset - scrollLeft >= 0;\n      var inFullViewRight = activeOffset + activeWidth - (containerWidth + scrollLeft) <= 0;\n      if (inFullViewLeft && inFullViewRight) {\n        return;\n      }\n\n      var offset = 0;\n      allTabs.some(function (tab, i) {\n        if (i < _this.props.activeTabIndex) {\n          offset += tab.offsetWidth;\n        }\n\n        return i < _this.state.activeTabIndex;\n      });\n\n      _this._container.scrollLeft = offset;\n    };\n\n    _this._handleTabChange = function (index, tabId, tabControlsId, tabChildren, event) {\n      if (_this.props.onTabChange) {\n        _this.props.onTabChange(index, tabId, tabControlsId, tabChildren, event);\n      }\n\n      if (typeof _this.props.activeTabIndex === 'undefined') {\n        _this.setState(_extends({\n          activeTabIndex: index\n        }, _this._calcIndicatorPosition(_this._container, 0, index, _this.state.overflowAtIndex)));\n      }\n    };\n\n    _this._mapToOverflowTabProps = function (tab, i) {\n      var index = i + _this.state.overflowAtIndex;\n      var active = getField(_this.props, _this.state, 'activeTabIndex') === index;\n      var tabEl = Children.only(tab);\n      var handleTabChange = _this._handleTabChange;\n\n      return {\n        active: active,\n        primaryText: tabEl.props.label,\n        onClick: function handleClick(event) {\n          var _tabEl$props = tabEl.props,\n              onClick = _tabEl$props.onClick,\n              id = _tabEl$props.id,\n              controlsId = _tabEl$props.controlsId,\n              children = _tabEl$props.children;\n\n          if (onClick) {\n            onClick(index, event);\n          }\n\n          handleTabChange(index, id, controlsId, children, event);\n        }\n      };\n    };\n\n    _this._nextIndexes = function (increment) {\n      var _this$state = _this.state,\n          overflowIndex = _this$state.overflowIndex,\n          overflowAtIndex = _this$state.overflowAtIndex;\n\n      var visibleAmt = (overflowAtIndex - overflowIndex) * (increment ? 1 : -1);\n\n      _this.setState({\n        overflowIndex: overflowIndex + visibleAmt,\n        overflowAtIndex: overflowAtIndex + visibleAmt\n      });\n    };\n\n    _this._showNextTabs = function () {\n      _this._nextIndexes(true);\n    };\n\n    _this._showPreviousTabs = function () {\n      _this._nextIndexes(false);\n    };\n\n    _this._setTab = function (tab, index) {\n      if (tab) {\n        _this._tabList[index] = tab;\n      }\n    };\n\n    var defaultTabIndex = typeof props.activeTabIndex === 'undefined' ? props.defaultTabIndex : props.activeTabIndex;\n    var indicatorWidth = props.mobile ? MOBILE_TAB_MIN_WIDTH : DESKTOP_TAB_MIN_WIDTH;\n    _this.state = {\n      indicatorWidth: indicatorWidth,\n      indicatorOffset: indicatorWidth * defaultTabIndex,\n      indicatorVisible: true,\n      overflowIndex: 0\n    };\n\n    if (typeof props.activeTabIndex === 'undefined') {\n      _this.state.activeTabIndex = defaultTabIndex;\n    }\n    _this._tabList = [];\n    return _this;\n  }\n\n  Tabs.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.activeTabIndex !== nextProps.activeTabIndex) {\n      this.setState(_extends({}, this._calcIndicatorPosition(this._container, 0, nextProps.activeTabIndex, this.state.overflowAtIndex)), this._scrollActiveIntoView);\n    } else if (!this._shouldAlign(nextProps) && this._shouldAlign(this.props)) {\n      this.setState({ paddingLeft: null });\n    }\n  };\n\n  Tabs.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this._shouldAlign(this.props) && this.state.overflowAtIndex !== prevState.overflowAtIndex) {\n      var paddingLeft = this._calcPaddingLeft(this._container, this.state.mobile);\n      // Have to wait for the overflow menus to appear, then wop\n      /* eslint-disable react/no-did-update-set-state */\n      this.setState({ paddingLeft: paddingLeft });\n    } else {\n      var labels = Children.map(Children.toArray(this.props.children), function (_ref) {\n        var label = _ref.props.label;\n        return label;\n      });\n      var prevLabels = Children.map(Children.toArray(prevProps.children), function (_ref2) {\n        var label = _ref2.props.label;\n        return label;\n      });\n      if (labels.length !== prevLabels.length || labels.filter(function (_, i) {\n        return labels[i] !== prevLabels[i];\n      }).length) {\n        this.setState(_extends({}, this._calcIndicatorPosition(this._container, 0, this.props.activeTabIndex, this.state.overflowAtIndex)), this._scrollActiveIntoView);\n      }\n    }\n  };\n\n  Tabs.prototype.getTabList = function getTabList() {\n    return this._tabList.slice(0);\n  };\n\n  Tabs.prototype.getTabByIndex = function getTabByIndex(tabIndex) {\n    return this._tabList[tabIndex];\n  };\n\n  Tabs.prototype._shouldAlign = function _shouldAlign(props) {\n    return typeof props.alignToKeyline === 'boolean' ? props.alignToKeyline : Children.toArray(props.children).filter(function (child) {\n      return !!child;\n    }).length > 3;\n  };\n\n  Tabs.prototype._calcPaddingLeft = function _calcPaddingLeft(container, mobile) {\n    var mediaPadding = mobile ? MOBILE_PADDING : DESKTOP_PADDING;\n    var tab = container.querySelector('.md-tab');\n\n    var _tab$querySelector = tab.querySelector('.md-tab-label'),\n        labelOffset = _tab$querySelector.offsetLeft;\n\n    return mediaPadding - labelOffset;\n  };\n\n  Tabs.prototype._calcOverflowIndex = function _calcOverflowIndex(container) {\n    var paddingLeft = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var menu = arguments[2];\n\n    var containerWidth = container.offsetWidth;\n    var overflowIndex = 0;\n    if (containerWidth < container.scrollWidth) {\n      var tabs = Array.prototype.slice.call(container.querySelectorAll('.md-tab'));\n      var totalWidth = 0;\n      tabs.some(function (tab, i) {\n        overflowIndex = i;\n        totalWidth += tab.offsetWidth;\n\n        return totalWidth > containerWidth;\n      });\n    }\n\n    return Math.max(0, overflowIndex - (menu ? 1 : 0));\n  };\n\n  Tabs.prototype._calcIndicatorPosition = function _calcIndicatorPosition(container) {\n    var paddingLeft = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var activeTabIndex = arguments[2];\n    var overflowAtIndex = arguments[3];\n\n    var activeItem = void 0;\n    if (typeof activeTabIndex === 'number') {\n      if (overflowAtIndex > 0 && activeTabIndex >= overflowAtIndex) {\n        activeItem = container.querySelector('.md-menu--tab');\n      } else {\n        activeItem = container.querySelectorAll('.md-tab')[activeTabIndex];\n      }\n    } else {\n      activeItem = container.querySelector('.md-tab--active');\n    }\n\n    if (!activeItem) {\n      return { indicatorVisible: false };\n    }\n\n    var _activeItem = activeItem,\n        indicatorWidth = _activeItem.offsetWidth,\n        indicatorOffset = _activeItem.offsetLeft;\n\n    return {\n      indicatorWidth: indicatorWidth,\n      indicatorOffset: indicatorOffset + paddingLeft,\n      indicatorVisible: !overflowAtIndex || overflowAtIndex > activeTabIndex\n    };\n  };\n\n  Tabs.prototype.render = function render() {\n    var _this2 = this;\n\n    var _state = this.state,\n        indicatorOffset = _state.indicatorOffset,\n        indicatorWidth = _state.indicatorWidth,\n        indicatorVisible = _state.indicatorVisible,\n        overflowIndex = _state.overflowIndex,\n        overflowAtIndex = _state.overflowAtIndex,\n        paddingLeft = _state.paddingLeft;\n\n    var _props = this.props,\n        Component = _props.component,\n        style = _props.style,\n        className = _props.className,\n        activeTabClassName = _props.activeTabClassName,\n        inactiveTabClassName = _props.inactiveTabClassName,\n        colored = _props.colored,\n        centered = _props.centered,\n        tabId = _props.tabId,\n        overflowMenu = _props.overflowMenu,\n        overflowMenuLabel = _props.overflowMenuLabel,\n        nextIcon = _props.nextIcon,\n        previousIcon = _props.previousIcon,\n        overflowMenuIcon = _props.overflowMenuIcon,\n        indicatorHeight = _props.indicatorHeight,\n        overflowMenuIconChildren = _props.overflowMenuIconChildren,\n        overflowMenuIconClassName = _props.overflowMenuIconClassName,\n        nextIconChildren = _props.nextIconChildren,\n        nextIconClassName = _props.nextIconClassName,\n        previousIconChildren = _props.previousIconChildren,\n        previousIconClassName = _props.previousIconClassName,\n        propActiveIndex = _props.activeTabIndex,\n        defaultTabIndex = _props.defaultTabIndex,\n        onTabChange = _props.onTabChange,\n        alignToKeyline = _props.alignToKeyline,\n        mobile = _props.mobile,\n        defaultMedia = _props.defaultMedia,\n        desktopMinWidth = _props.desktopMinWidth,\n        props = _objectWithoutProperties(_props, ['component', 'style', 'className', 'activeTabClassName', 'inactiveTabClassName', 'colored', 'centered', 'tabId', 'overflowMenu', 'overflowMenuLabel', 'nextIcon', 'previousIcon', 'overflowMenuIcon', 'indicatorHeight', 'overflowMenuIconChildren', 'overflowMenuIconClassName', 'nextIconChildren', 'nextIconClassName', 'previousIconChildren', 'previousIconClassName', 'activeTabIndex', 'defaultTabIndex', 'onTabChange', 'alignToKeyline', 'mobile', 'defaultMedia', 'desktopMinWidth']);\n\n    var activeTabIndex = getField(this.props, this.state, 'activeTabIndex');\n\n    var icon = false;\n    var children = Children.map(Children.toArray(this.props.children), function (tab, index) {\n      var handleOnClick = function handleOnClick(tabIndex, id, tabControlsId, tabChildren, event) {\n        if (tab.props.onClick) {\n          tab.props.onClick(tabId, id, tabControlsId, tabChildren, event);\n        }\n\n        _this2._handleTabChange(tabIndex, id, tabControlsId, tabChildren, event);\n      };\n\n      if (tab.props.icon) {\n        icon = true;\n      }\n\n      return cloneElement(tab, {\n        index: index,\n        activeClassName: activeTabClassName,\n        inactiveClassName: inactiveTabClassName,\n        id: tab.props.id || tabId + '-' + index,\n        controlsId: tab.props.controlsId || tabId + '-panel-' + index,\n        active: index === activeTabIndex,\n        ref: function ref(tabRef) {\n          return _this2._setTab(tabRef, index);\n        },\n        onClick: handleOnClick\n      });\n    });\n\n    var overflow = void 0;\n    var nextControl = void 0;\n    var previousControl = void 0;\n    if (overflowAtIndex) {\n      var length = children.length;\n      if (overflowMenu) {\n        overflow = React.createElement(MenuTab, {\n          id: tabId + '-overflow-menu',\n          activeTabIndex: activeTabIndex,\n          overflowAtIndex: overflowAtIndex,\n          label: React.createElement(\n            IconSeparator,\n            { label: overflowMenuLabel },\n            getDeprecatedIcon(overflowMenuIconClassName, overflowMenuIconChildren, overflowMenuIcon)\n          ),\n          tabs: children.slice(overflowAtIndex, children.length).map(this._mapToOverflowTabProps)\n        });\n      }\n\n      children = children.slice(overflowIndex, overflowAtIndex);\n\n      if (!overflowMenu && overflowIndex > 0) {\n        previousControl = React.createElement(TabOverflowButton, {\n          left: true,\n          icon: icon,\n          iconEl: getDeprecatedIcon(previousIconClassName, previousIconChildren, previousIcon),\n          onClick: this._showPreviousTabs\n        });\n      }\n\n      if (!overflowMenu && length > 3 && overflowAtIndex + overflowIndex <= length) {\n        nextControl = React.createElement(TabOverflowButton, {\n          icon: icon,\n          onClick: this._showNextTabs,\n          iconEl: getDeprecatedIcon(nextIconClassName, nextIconChildren, nextIcon)\n        });\n      }\n    }\n\n    return React.createElement(\n      Component,\n      _extends({}, props, {\n        style: _extends({}, style, { paddingLeft: paddingLeft }),\n        className: cn('md-tabs', {\n          'md-tabs--pagination': overflowAtIndex && !overflowMenu,\n          'md-tabs--centered': centered,\n          'md-background--primary': colored\n        }, className),\n        role: 'tablist'\n      }),\n      React.createElement(ResizeObserver, { watchWidth: true, watchHeight: true, onResize: this._positionElements, elRef: this._setContainer }),\n      previousControl,\n      children,\n      nextControl,\n      overflow,\n      React.createElement(TabIndicator, {\n        offset: indicatorOffset,\n        height: indicatorHeight,\n        width: indicatorWidth,\n        visible: indicatorVisible\n      })\n    );\n  };\n\n  return Tabs;\n}(PureComponent);\n\nTabs.propTypes = {\n  /**\n   * A base id to use for each `Tab`. When the child tabs are created, they are cloned\n   * with some additional accessibility props. Each tab will get a prop with this and the\n   * current index of the tab.\n   */\n  tabId: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The className to use when a tab is currently active. The default className does not\n   * actually apply any styles.\n   *\n   * If this prop is set, it will override any `activeClassName` props applied to the child\n   * `Tab`s. Either set a custom `activeClassName` on each `Tab`, or use this prop to apply\n   * the same `activeClassName` to each `Tab`.\n   *\n   * @see {@link Tabs/Tab#activeClassName}\n   */\n  activeTabClassName: PropTypes.string,\n\n  /**\n   * The className to use when the tab is not active and not selected. By default,\n   * this will set inactive tabs' color to `$md-white-base`. This works great\n   * if the tabs are placed on a colored toolbar but fails when the tabs are not colored\n   * or on a white background. In these cases, it is recommended to change this value\n   * to `md-text--secondary` or some other class name.\n   *\n   * If this prop is set, it will override any `inactiveClassName` props applied to the child\n   * `Tab`s. Either set a custom `inactiveClassName` on each `Tab`, or use this prop to apply\n   * the same `inactiveClassName` to each `Tab`.\n   *\n   * @see {@link Tabs/Tab#inactiveClassName}\n   */\n  inactiveTabClassName: PropTypes.string,\n\n  /**\n   * The component to render the tabs in.\n   */\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * This should either be a single `Tab` component or a list of `Tab` components. Unfortunately,\n   * the child *must* be exactly a `Tab` component because this is unable to extract the correct\n   * `label` and `children` from a custom `Tab` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]).isRequired,\n\n  /**\n   * Boolean if the tabs should be centered instead of aligned to the keyline. The tabs will\n   * only be aligned to the keyline when there are more than 3 tabs and the `alignToKeyline`\n   * prop is `false`.\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * Boolean if the tabs should align to a toolbar's title keyline. If this is undefined,\n   * the tabs will try to align to the keyline when there are more than 3 tabs.\n   */\n  alignToKeyline: PropTypes.bool,\n\n  /**\n   * Boolean if the tabs should be colored with the primary color. If this is false or undefined,\n   * the tabs will be colored for the light or dark theme.\n   */\n  colored: PropTypes.bool,\n\n  /**\n   * A boolean if the overflow tabs on desktop displays should appear in a menu. If this is false,\n   * the additional tabs will be available by using pagination buttons.\n   */\n  overflowMenu: PropTypes.bool,\n\n  /**\n   * An optional function to call when the active tab is changed. The callback will include\n   * the new active tab index and a click event.\n   *\n   * ```js\n   * onTabChange(newTabIndex, event);\n   * ```\n   */\n  onTabChange: PropTypes.func,\n\n  /**\n   * An optional active tab index to use. If this is defined, it will make the component controlled\n   * and require the `onTabChange` prop to be defined.\n   */\n  activeTabIndex: controlled(PropTypes.number, 'onTabChange', 'defaultTabIndex'),\n\n  /**\n   * The default tab index to use when the component is uncontrolled.\n   */\n  defaultTabIndex: PropTypes.number.isRequired,\n\n  /**\n   * When the `overflowMenu` prop is false, this will be used to render the \"next slice of tabs\"\n   * when there are too many tabs to display at once on desktop screens.\n   */\n  nextIcon: PropTypes.element,\n\n  /**\n   * When the `overflowMenu` prop is false, this will be used to render the \"previous slice of tabs\"\n   * when there are too many tabs to display at once on desktop screens.\n   */\n  previousIcon: PropTypes.element,\n\n  /**\n   * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\n   * This will be to render the icon to the right of the label.\n   */\n  overflowMenuIcon: PropTypes.element,\n\n  /**\n   * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\n   * This will be the text that displays as a tab.\n   */\n  overflowMenuLabel: PropTypes.node.isRequired,\n\n  /**\n   * This is the height for the active tab indicator underline. This should match the value of\n   * `$md-tab-indicator-height` set in SCSS.\n   *\n   * @see [$md-tab-indicator-height](/components/tabs?tab=2#variable-md-tab-indicator-height)\n   */\n  indicatorHeight: PropTypes.number,\n\n  /**\n   * Boolean if the tabs are currently rendered on a mobile or tablet device. This is used to calculate\n   * overflow/padding on the tabs.\n   */\n  mobile: PropTypes.bool,\n  defaultMedia: deprecated(PropTypes.oneOf(['mobile', 'tablet', 'desktop']), 'Use `mobile` instead'),\n  desktopMinWidth: deprecated(PropTypes.number, 'Use `mobile` instead'),\n  nextIconChildren: deprecated(PropTypes.node, 'Use the `nextIcon` prop instead'),\n  nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\n  previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\n  previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\n  overflowMenuIconChildren: deprecated(PropTypes.node, 'Use the `overflowMenuIcon` prop instead'),\n  overflowMenuIconClassName: deprecated(PropTypes.string, 'Use the `overflowMenuIcon` prop instead')\n};\nTabs.defaultProps = {\n  component: 'ul',\n  defaultTabIndex: 0,\n  indicatorHeight: 2,\n  nextIcon: React.createElement(\n    FontIcon,\n    null,\n    'keyboard_arrow_right'\n  ),\n  previousIcon: React.createElement(\n    FontIcon,\n    null,\n    'keyboard_arrow_left'\n  ),\n  overflowMenuLabel: 'More',\n  overflowMenuIcon: React.createElement(\n    FontIcon,\n    null,\n    'arrow_drop_down'\n  )\n};\nexport default Tabs;"]},"metadata":{},"sourceType":"module"}