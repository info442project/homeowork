{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport { TAB } from '../constants/keyCodes';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\n/**\n * The `AccessibleFakeButton` is a generic component that can be used to render\n * a `div` or any other non `button` components as a button. This should not be\n * used often.\n *\n * The `AccessibleFakeButton` allows the user to tab focus the element, use the\n * space or enter key to trigger the `onClick` event, and toggles the `aria-pressed`\n * attribute.\n */\n\nvar AccessibleFakeButton = function (_PureComponent) {\n  _inherits(AccessibleFakeButton, _PureComponent);\n\n  function AccessibleFakeButton() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, AccessibleFakeButton);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.state = {\n      pressed: false,\n      tabFocused: false\n    }, _this.focus = function () {\n      if (_this._node) {\n        _this._node.focus();\n      }\n    }, _this.blur = function () {\n      if (_this._node) {\n        _this._node.blur();\n      }\n    }, _this._setNode = function (node) {\n      if (node) {\n        _this._node = findDOMNode(node);\n      }\n    }, _this._handleClick = function (e) {\n      if (_this.props.disabled) {\n        return;\n      }\n\n      if (_this.props.onClick) {\n        _this.props.onClick(e);\n      }\n\n      _this._node.focus();\n\n      _this.setState({\n        pressed: !_this.state.pressed\n      });\n    }, _this._handleKeyDown = function (e) {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          onKeyDown = _this$props.onKeyDown,\n          listenToEnter = _this$props.listenToEnter,\n          listenToSpace = _this$props.listenToSpace;\n\n      if (disabled) {\n        return;\n      }\n\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n\n      handleKeyboardAccessibility(e, _this._handleClick, listenToEnter, listenToSpace);\n    }, _this._handleKeyUp = function (e) {\n      var _this$props2 = _this.props,\n          onKeyUp = _this$props2.onKeyUp,\n          onTabFocus = _this$props2.onTabFocus;\n\n      if (onKeyUp) {\n        onKeyUp(e);\n      }\n\n      if ((e.which || e.keyCode) === TAB) {\n        if (onTabFocus) {\n          onTabFocus(e);\n        }\n\n        _this.setState({\n          tabFocused: true\n        });\n      }\n    }, _this._handleBlur = function (e) {\n      if (_this.props.onBlur) {\n        _this.props.onBlur(e);\n      }\n\n      if (_this.state.tabFocused) {\n        _this.setState({\n          tabFocused: false\n        });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * Focuses the button.\n   */\n\n  /**\n   * Blurs the button.\n   */\n\n\n  AccessibleFakeButton.prototype.render = function render() {\n    var _cn;\n\n    var _props = this.props,\n        Component = _props.component,\n        children = _props.children,\n        className = _props.className,\n        tabbedClassName = _props.tabbedClassName,\n        disabled = _props.disabled,\n        tabIndex = _props.tabIndex,\n        ink = _props.ink,\n        noFocusOutline = _props.noFocusOutline,\n        onBlur = _props.onBlur,\n        onClick = _props.onClick,\n        onKeyUp = _props.onKeyUp,\n        onKeyDown = _props.onKeyDown,\n        onTabFocus = _props.onTabFocus,\n        listenToEnter = _props.listenToEnter,\n        listenToSpace = _props.listenToSpace,\n        props = _objectWithoutProperties(_props, ['component', 'children', 'className', 'tabbedClassName', 'disabled', 'tabIndex', 'ink', 'noFocusOutline', 'onBlur', 'onClick', 'onKeyUp', 'onKeyDown', 'onTabFocus', 'listenToEnter', 'listenToSpace']);\n\n    var childElements = children;\n\n    if (ink) {\n      childElements = Children.toArray(children);\n      childElements.unshift(ink);\n    }\n\n    return React.createElement(Component, _extends({}, props, {\n      ref: this._setNode,\n      className: cn('md-fake-btn', (_cn = {\n        'md-pointer--hover': !disabled,\n        'md-fake-btn--no-outline': noFocusOutline\n      }, _cn[tabbedClassName] = tabbedClassName && this.state.tabFocused, _cn), className),\n      disabled: disabled,\n      tabIndex: disabled ? null : tabIndex,\n      onBlur: this._handleBlur,\n      onClick: this._handleClick,\n      onKeyUp: this._handleKeyUp,\n      onKeyDown: this._handleKeyDown,\n      'aria-pressed': this.state.pressed\n    }), childElements);\n  };\n\n  return AccessibleFakeButton;\n}(PureComponent);\n\nAccessibleFakeButton.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional function to call only when the button has been focused with the tab key.\n   */\n  tabbedClassName: PropTypes.string,\n\n  /**\n   * Any children to display in the Accessible Fake Button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * An optional onClick function to call when the user clicks the\n   * button or presses space || enter.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * An optional onKeyDown function to call.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * An optional onBlur function to call.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * An optional onKeyUp function to call.\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * An optional function to call when the element is focused with the tab key.\n   */\n  onTabFocus: PropTypes.func,\n\n  /**\n   * The component to render the Fake button as.\n   */\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * Boolean if the default outline should be removed the when the fake button has been focused.\n   *\n   * @see {@link #tabbedClassName}\n   */\n  noFocusOutline: PropTypes.bool,\n\n  /**\n   * The tab index to use for the Fake button so it is keyboard focusable.\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Boolean if the Button is disabled. This will prevent tab focus.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The role for the accessible fake button. It is recommended to keep it\n   * the default of `button` unless you are rendering it as an `a` tag.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The ink when coming from the AccessibleFakeInkedButton\n   * @access private\n   */\n  ink: PropTypes.node,\n\n  /**\n   * Boolean if the spacebar should be used to trigger the click event. This _should_ be `true`\n   * is almost all cases.\n   */\n  listenToSpace: PropTypes.bool,\n\n  /**\n   * Boolean if the enter key should be used to trigger the click event. This _should_ be `true`\n   * in most cases. By default, the param will be ignored if the `role` attribute is for a `checkbox`\n   * or `radio`. When it is a checkbox or radio, it will attempt to submit the form on the enter\n   * keypress instead like the native elements.\n   */\n  listenToEnter: PropTypes.bool\n};\nAccessibleFakeButton.defaultProps = {\n  component: 'div',\n  tabIndex: 0,\n  role: 'button',\n  noFocusOutline: true,\n  listenToEnter: true,\n  listenToSpace: true\n};\nexport default AccessibleFakeButton;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Helpers/AccessibleFakeButton.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","Children","PropTypes","findDOMNode","cn","TAB","handleKeyboardAccessibility","AccessibleFakeButton","_PureComponent","_temp","_this","_ret","_len","args","Array","_key","apply","concat","state","pressed","tabFocused","focus","_node","blur","_setNode","node","_handleClick","e","props","disabled","onClick","setState","_handleKeyDown","_this$props","onKeyDown","listenToEnter","listenToSpace","_handleKeyUp","_this$props2","onKeyUp","onTabFocus","which","keyCode","_handleBlur","onBlur","render","_cn","_props","Component","component","children","className","tabbedClassName","tabIndex","ink","noFocusOutline","childElements","toArray","unshift","createElement","ref","propTypes","style","object","string","func","oneOfType","isRequired","bool","number","role","defaultProps"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport { TAB } from '../constants/keyCodes';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\n\n/**\n * The `AccessibleFakeButton` is a generic component that can be used to render\n * a `div` or any other non `button` components as a button. This should not be\n * used often.\n *\n * The `AccessibleFakeButton` allows the user to tab focus the element, use the\n * space or enter key to trigger the `onClick` event, and toggles the `aria-pressed`\n * attribute.\n */\n\nvar AccessibleFakeButton = function (_PureComponent) {\n  _inherits(AccessibleFakeButton, _PureComponent);\n\n  function AccessibleFakeButton() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, AccessibleFakeButton);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.state = { pressed: false, tabFocused: false }, _this.focus = function () {\n      if (_this._node) {\n        _this._node.focus();\n      }\n    }, _this.blur = function () {\n      if (_this._node) {\n        _this._node.blur();\n      }\n    }, _this._setNode = function (node) {\n      if (node) {\n        _this._node = findDOMNode(node);\n      }\n    }, _this._handleClick = function (e) {\n      if (_this.props.disabled) {\n        return;\n      }\n\n      if (_this.props.onClick) {\n        _this.props.onClick(e);\n      }\n\n      _this._node.focus();\n      _this.setState({ pressed: !_this.state.pressed });\n    }, _this._handleKeyDown = function (e) {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          onKeyDown = _this$props.onKeyDown,\n          listenToEnter = _this$props.listenToEnter,\n          listenToSpace = _this$props.listenToSpace;\n\n      if (disabled) {\n        return;\n      }\n\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n\n      handleKeyboardAccessibility(e, _this._handleClick, listenToEnter, listenToSpace);\n    }, _this._handleKeyUp = function (e) {\n      var _this$props2 = _this.props,\n          onKeyUp = _this$props2.onKeyUp,\n          onTabFocus = _this$props2.onTabFocus;\n\n      if (onKeyUp) {\n        onKeyUp(e);\n      }\n\n      if ((e.which || e.keyCode) === TAB) {\n        if (onTabFocus) {\n          onTabFocus(e);\n        }\n\n        _this.setState({ tabFocused: true });\n      }\n    }, _this._handleBlur = function (e) {\n      if (_this.props.onBlur) {\n        _this.props.onBlur(e);\n      }\n\n      if (_this.state.tabFocused) {\n        _this.setState({ tabFocused: false });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Focuses the button.\n   */\n\n\n  /**\n   * Blurs the button.\n   */\n\n\n  AccessibleFakeButton.prototype.render = function render() {\n    var _cn;\n\n    var _props = this.props,\n        Component = _props.component,\n        children = _props.children,\n        className = _props.className,\n        tabbedClassName = _props.tabbedClassName,\n        disabled = _props.disabled,\n        tabIndex = _props.tabIndex,\n        ink = _props.ink,\n        noFocusOutline = _props.noFocusOutline,\n        onBlur = _props.onBlur,\n        onClick = _props.onClick,\n        onKeyUp = _props.onKeyUp,\n        onKeyDown = _props.onKeyDown,\n        onTabFocus = _props.onTabFocus,\n        listenToEnter = _props.listenToEnter,\n        listenToSpace = _props.listenToSpace,\n        props = _objectWithoutProperties(_props, ['component', 'children', 'className', 'tabbedClassName', 'disabled', 'tabIndex', 'ink', 'noFocusOutline', 'onBlur', 'onClick', 'onKeyUp', 'onKeyDown', 'onTabFocus', 'listenToEnter', 'listenToSpace']);\n\n    var childElements = children;\n    if (ink) {\n      childElements = Children.toArray(children);\n      childElements.unshift(ink);\n    }\n\n    return React.createElement(\n      Component,\n      _extends({}, props, {\n        ref: this._setNode,\n        className: cn('md-fake-btn', (_cn = {\n          'md-pointer--hover': !disabled,\n          'md-fake-btn--no-outline': noFocusOutline\n        }, _cn[tabbedClassName] = tabbedClassName && this.state.tabFocused, _cn), className),\n        disabled: disabled,\n        tabIndex: disabled ? null : tabIndex,\n        onBlur: this._handleBlur,\n        onClick: this._handleClick,\n        onKeyUp: this._handleKeyUp,\n        onKeyDown: this._handleKeyDown,\n        'aria-pressed': this.state.pressed\n      }),\n      childElements\n    );\n  };\n\n  return AccessibleFakeButton;\n}(PureComponent);\n\nAccessibleFakeButton.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional function to call only when the button has been focused with the tab key.\n   */\n  tabbedClassName: PropTypes.string,\n\n  /**\n   * Any children to display in the Accessible Fake Button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * An optional onClick function to call when the user clicks the\n   * button or presses space || enter.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * An optional onKeyDown function to call.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * An optional onBlur function to call.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * An optional onKeyUp function to call.\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * An optional function to call when the element is focused with the tab key.\n   */\n  onTabFocus: PropTypes.func,\n\n  /**\n   * The component to render the Fake button as.\n   */\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * Boolean if the default outline should be removed the when the fake button has been focused.\n   *\n   * @see {@link #tabbedClassName}\n   */\n  noFocusOutline: PropTypes.bool,\n\n  /**\n   * The tab index to use for the Fake button so it is keyboard focusable.\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Boolean if the Button is disabled. This will prevent tab focus.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The role for the accessible fake button. It is recommended to keep it\n   * the default of `button` unless you are rendering it as an `a` tag.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The ink when coming from the AccessibleFakeInkedButton\n   * @access private\n   */\n  ink: PropTypes.node,\n\n  /**\n   * Boolean if the spacebar should be used to trigger the click event. This _should_ be `true`\n   * is almost all cases.\n   */\n  listenToSpace: PropTypes.bool,\n\n  /**\n   * Boolean if the enter key should be used to trigger the click event. This _should_ be `true`\n   * in most cases. By default, the param will be ignored if the `role` attribute is for a `checkbox`\n   * or `radio`. When it is a checkbox or radio, it will attempt to submit the form on the enter\n   * keypress instead like the native elements.\n   */\n  listenToEnter: PropTypes.bool\n};\nAccessibleFakeButton.defaultProps = {\n  component: 'div',\n  tabIndex: 0,\n  role: 'button',\n  noFocusOutline: true,\n  listenToEnter: true,\n  listenToSpace: true\n};\nexport default AccessibleFakeButton;"]},"metadata":{},"sourceType":"module"}