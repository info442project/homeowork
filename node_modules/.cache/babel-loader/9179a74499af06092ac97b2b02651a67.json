{"ast":null,"code":"/** @module utils/PropTypes/requiredForA11yIfNot */\n\n/**\n * This validator checks that the current prop is valid and defined ONLY if\n * any of the `otherPropNames` are not true or defined.\n *\n * @param {function} validator - The React PropTypes validator to use for the given prop.\n * @param {String[]} otherPropNames - Any other prop names to validate against.\n * @return {Error} an error or null\n */\nexport default function requiredForA11yIfNot(validator) {\n  for (var _len = arguments.length, otherPropNames = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    otherPropNames[_key - 1] = arguments[_key];\n  }\n\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n    var defined = typeof props[propName] !== 'undefined';\n\n    for (var _len2 = arguments.length, args = Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {\n      args[_key2 - 5] = arguments[_key2];\n    }\n\n    var err = validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n\n    if (!err && !defined && !otherPropNames.filter(function (pn) {\n      return !!props[pn];\n    }).length) {\n      err = new Error('The `' + propFullNameSafe + '` ' + location + ' is required to make `' + componentNameSafe + '` accessible ' + 'for users of assistive technologies such as screen readers.');\n    }\n\n    return err;\n  };\n}","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/utils/PropTypes/requiredForA11yIfNot.js"],"names":["requiredForA11yIfNot","validator","_len","arguments","length","otherPropNames","Array","_key","validate","props","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","defined","_len2","args","_key2","err","apply","undefined","concat","filter","pn","Error"],"mappings":"AAAA;;AAEA;;;;;;;;AAQA,eAAe,SAASA,oBAAT,CAA8BC,SAA9B,EAAyC;AACtD,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,cAAc,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAvB,CAAnD,EAA8EK,IAAI,GAAG,CAA1F,EAA6FA,IAAI,GAAGL,IAApG,EAA0GK,IAAI,EAA9G,EAAkH;AAChHF,IAAAA,cAAc,CAACE,IAAI,GAAG,CAAR,CAAd,GAA2BJ,SAAS,CAACI,IAAD,CAApC;AACD;;AAED,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCC,aAAnC,EAAkDC,QAAlD,EAA4DC,YAA5D,EAA0E;AAC/E,QAAIC,iBAAiB,GAAGH,aAAa,IAAI,eAAzC;AACA,QAAII,gBAAgB,GAAGF,YAAY,IAAIH,QAAvC;AACA,QAAIM,OAAO,GAAG,OAAOP,KAAK,CAACC,QAAD,CAAZ,KAA2B,WAAzC;;AAEA,SAAK,IAAIO,KAAK,GAAGd,SAAS,CAACC,MAAtB,EAA8Bc,IAAI,GAAGZ,KAAK,CAACW,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,CAAzB,CAA1C,EAAuEE,KAAK,GAAG,CAApF,EAAuFA,KAAK,GAAGF,KAA/F,EAAsGE,KAAK,EAA3G,EAA+G;AAC7GD,MAAAA,IAAI,CAACC,KAAK,GAAG,CAAT,CAAJ,GAAkBhB,SAAS,CAACgB,KAAD,CAA3B;AACD;;AAED,QAAIC,GAAG,GAAGnB,SAAS,CAACoB,KAAV,CAAgBC,SAAhB,EAA2B,CAACb,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyDU,MAAzD,CAAgEL,IAAhE,CAA3B,CAAV;;AACA,QAAI,CAACE,GAAD,IAAQ,CAACJ,OAAT,IAAoB,CAACX,cAAc,CAACmB,MAAf,CAAsB,UAAUC,EAAV,EAAc;AAC3D,aAAO,CAAC,CAAChB,KAAK,CAACgB,EAAD,CAAd;AACD,KAFwB,EAEtBrB,MAFH,EAEW;AACTgB,MAAAA,GAAG,GAAG,IAAIM,KAAJ,CAAU,UAAUX,gBAAV,GAA6B,IAA7B,GAAoCH,QAApC,GAA+C,wBAA/C,GAA0EE,iBAA1E,GAA8F,eAA9F,GAAgH,6DAA1H,CAAN;AACD;;AAED,WAAOM,GAAP;AACD,GAjBD;AAkBD","sourcesContent":["/** @module utils/PropTypes/requiredForA11yIfNot */\n\n/**\n * This validator checks that the current prop is valid and defined ONLY if\n * any of the `otherPropNames` are not true or defined.\n *\n * @param {function} validator - The React PropTypes validator to use for the given prop.\n * @param {String[]} otherPropNames - Any other prop names to validate against.\n * @return {Error} an error or null\n */\nexport default function requiredForA11yIfNot(validator) {\n  for (var _len = arguments.length, otherPropNames = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    otherPropNames[_key - 1] = arguments[_key];\n  }\n\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n    var defined = typeof props[propName] !== 'undefined';\n\n    for (var _len2 = arguments.length, args = Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {\n      args[_key2 - 5] = arguments[_key2];\n    }\n\n    var err = validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n    if (!err && !defined && !otherPropNames.filter(function (pn) {\n      return !!props[pn];\n    }).length) {\n      err = new Error('The `' + propFullNameSafe + '` ' + location + ' is required to make `' + componentNameSafe + '` accessible ' + 'for users of assistive technologies such as screen readers.');\n    }\n\n    return err;\n  };\n}"]},"metadata":{},"sourceType":"module"}