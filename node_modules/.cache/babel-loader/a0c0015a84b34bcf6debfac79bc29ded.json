{"ast":null,"code":"/** @module utils/PropTypes/oneRequiredForA11yIf */\n\n/**\n * A PropType validator to make sure that any of the other prop names have been defined\n * if the current prop is also defined.\n *\n * This is mostly useful for when adding a prop requires additional accessibility props defined\n * as well.\n *\n * @param {function} validator - The current prop's validator.\n */\nexport default function oneRequiredForA11yIf(validator) {\n  for (var _len = arguments.length, otherPropNames = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    otherPropNames[_key - 1] = arguments[_key];\n  }\n\n  return function validate(props, propName, componentName, location, propFullName) {\n    var filterUndefined = function filterUndefined(pn) {\n      return typeof props[pn] !== 'undefined';\n    };\n\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n    var defined = typeof props[propName] !== 'undefined';\n    var allPropNames = [propFullNameSafe].concat(otherPropNames);\n\n    for (var _len2 = arguments.length, args = Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {\n      args[_key2 - 5] = arguments[_key2];\n    }\n\n    var err = validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n\n    if (!err && defined && !allPropNames.filter(filterUndefined).length) {\n      err = new Error('One of the following props are required to make `' + componentNameSafe + '` accessible ' + ('for users of assistive technologies such as screen readers when using the `' + propFullNameSafe + '` ') + ('prop. `' + allPropNames.join('`, `') + '`.'));\n    }\n\n    return err;\n  };\n}","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/utils/PropTypes/oneRequiredForA11yIf.js"],"names":["oneRequiredForA11yIf","validator","_len","arguments","length","otherPropNames","Array","_key","validate","props","propName","componentName","location","propFullName","filterUndefined","pn","componentNameSafe","propFullNameSafe","defined","allPropNames","concat","_len2","args","_key2","err","apply","undefined","filter","Error","join"],"mappings":"AAAA;;AAEA;;;;;;;;;AASA,eAAe,SAASA,oBAAT,CAA8BC,SAA9B,EAAyC;AACtD,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,cAAc,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAvB,CAAnD,EAA8EK,IAAI,GAAG,CAA1F,EAA6FA,IAAI,GAAGL,IAApG,EAA0GK,IAAI,EAA9G,EAAkH;AAChHF,IAAAA,cAAc,CAACE,IAAI,GAAG,CAAR,CAAd,GAA2BJ,SAAS,CAACI,IAAD,CAApC;AACD;;AAED,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCC,aAAnC,EAAkDC,QAAlD,EAA4DC,YAA5D,EAA0E;AAC/E,QAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,EAAzB,EAA6B;AACjD,aAAO,OAAON,KAAK,CAACM,EAAD,CAAZ,KAAqB,WAA5B;AACD,KAFD;;AAGA,QAAIC,iBAAiB,GAAGL,aAAa,IAAI,eAAzC;AACA,QAAIM,gBAAgB,GAAGJ,YAAY,IAAIH,QAAvC;AACA,QAAIQ,OAAO,GAAG,OAAOT,KAAK,CAACC,QAAD,CAAZ,KAA2B,WAAzC;AACA,QAAIS,YAAY,GAAG,CAACF,gBAAD,EAAmBG,MAAnB,CAA0Bf,cAA1B,CAAnB;;AAEA,SAAK,IAAIgB,KAAK,GAAGlB,SAAS,CAACC,MAAtB,EAA8BkB,IAAI,GAAGhB,KAAK,CAACe,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,CAAzB,CAA1C,EAAuEE,KAAK,GAAG,CAApF,EAAuFA,KAAK,GAAGF,KAA/F,EAAsGE,KAAK,EAA3G,EAA+G;AAC7GD,MAAAA,IAAI,CAACC,KAAK,GAAG,CAAT,CAAJ,GAAkBpB,SAAS,CAACoB,KAAD,CAA3B;AACD;;AAED,QAAIC,GAAG,GAAGvB,SAAS,CAACwB,KAAV,CAAgBC,SAAhB,EAA2B,CAACjB,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyDO,MAAzD,CAAgEE,IAAhE,CAA3B,CAAV;;AACA,QAAI,CAACE,GAAD,IAAQN,OAAR,IAAmB,CAACC,YAAY,CAACQ,MAAb,CAAoBb,eAApB,EAAqCV,MAA7D,EAAqE;AACnEoB,MAAAA,GAAG,GAAG,IAAII,KAAJ,CAAU,sDAAsDZ,iBAAtD,GAA0E,eAA1E,IAA6F,gFAAgFC,gBAAhF,GAAmG,IAAhM,KAAyM,YAAYE,YAAY,CAACU,IAAb,CAAkB,MAAlB,CAAZ,GAAwC,IAAjP,CAAV,CAAN;AACD;;AAED,WAAOL,GAAP;AACD,GAnBD;AAoBD","sourcesContent":["/** @module utils/PropTypes/oneRequiredForA11yIf */\n\n/**\n * A PropType validator to make sure that any of the other prop names have been defined\n * if the current prop is also defined.\n *\n * This is mostly useful for when adding a prop requires additional accessibility props defined\n * as well.\n *\n * @param {function} validator - The current prop's validator.\n */\nexport default function oneRequiredForA11yIf(validator) {\n  for (var _len = arguments.length, otherPropNames = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    otherPropNames[_key - 1] = arguments[_key];\n  }\n\n  return function validate(props, propName, componentName, location, propFullName) {\n    var filterUndefined = function filterUndefined(pn) {\n      return typeof props[pn] !== 'undefined';\n    };\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n    var defined = typeof props[propName] !== 'undefined';\n    var allPropNames = [propFullNameSafe].concat(otherPropNames);\n\n    for (var _len2 = arguments.length, args = Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {\n      args[_key2 - 5] = arguments[_key2];\n    }\n\n    var err = validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n    if (!err && defined && !allPropNames.filter(filterUndefined).length) {\n      err = new Error('One of the following props are required to make `' + componentNameSafe + '` accessible ' + ('for users of assistive technologies such as screen readers when using the `' + propFullNameSafe + '` ') + ('prop. `' + allPropNames.join('`, `') + '`.'));\n    }\n\n    return err;\n  };\n}"]},"metadata":{},"sourceType":"module"}