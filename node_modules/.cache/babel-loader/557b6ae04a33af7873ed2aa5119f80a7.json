{"ast":null,"code":"function _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\nimport TooltipContainer from './TooltipContainer';\n/**\n * Takes any component and injects a tooltip container as a prop. The tooltip container\n * will add event listeners for touch, mouse, and keyboard events so that a tooltip will appear\n * in the ComposedComponent.\n *\n * If the `tooltipLabel` prop is omitted, the tooltip and event listeners will not\n * be included.\n *\n * ```js\n * @param {function} ComposedComponent the component to compose with the tooltip functionality.\n * @return {function} the ComposedComponent with a tooltip.\n * ```\n */\n\nexport default (function (ComposedComponent) {\n  var _class, _temp2;\n\n  return _temp2 = _class = function (_PureComponent) {\n    _inherits(TooltipedComponent, _PureComponent);\n\n    function TooltipedComponent() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, TooltipedComponent);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this._composed = null, _this.getComposedComponent = function () {\n        return _this._composed;\n      }, _this._setComposedComponent = function (component) {\n        _this._composed = component;\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n    /**\n     * Gets the composed component as a ref. This is useful if you need to access the ref of the\n     * composed component instead of the `injectTooltip` HOC to use some publicly accessible methods.\n     *\n     * ```js\n     * <SomeTooltippedComponent\n     *   ref={tooltipHOC => {\n     *     tooltipHOC.getComposedComponent().focus();\n     *   }}\n     * />\n     * ```\n     *\n     * > NOTE: This can be `null`, so make sure to do a null check before using.\n     */\n\n\n    TooltipedComponent.prototype.render = function render() {\n      var _props = this.props,\n          tooltipLabel = _props.tooltipLabel,\n          tooltipDelay = _props.tooltipDelay,\n          tooltipPosition = _props.tooltipPosition,\n          tooltipStyle = _props.tooltipStyle,\n          tooltipClassName = _props.tooltipClassName,\n          tooltipContainerStyle = _props.tooltipContainerStyle,\n          tooltipContainerClassName = _props.tooltipContainerClassName,\n          tooltipTransitionEnterTimeout = _props.tooltipTransitionEnterTimeout,\n          tooltipTransitionLeaveTimeout = _props.tooltipTransitionLeaveTimeout,\n          props = _objectWithoutProperties(_props, ['tooltipLabel', 'tooltipDelay', 'tooltipPosition', 'tooltipStyle', 'tooltipClassName', 'tooltipContainerStyle', 'tooltipContainerClassName', 'tooltipTransitionEnterTimeout', 'tooltipTransitionLeaveTimeout']);\n\n      if (tooltipLabel) {\n        props.tooltip = React.createElement(TooltipContainer, {\n          key: 'tooltipContainer',\n          label: tooltipLabel,\n          delay: tooltipDelay,\n          position: tooltipPosition,\n          enterTimeout: tooltipTransitionEnterTimeout,\n          leaveTimeout: tooltipTransitionLeaveTimeout,\n          style: tooltipContainerStyle,\n          className: tooltipContainerClassName,\n          tooltipStyle: tooltipStyle,\n          tooltipClassName: tooltipClassName\n        });\n      }\n\n      props.ref = this._setComposedComponent;\n      return React.createElement(ComposedComponent, props);\n    };\n\n    return TooltipedComponent;\n  }(PureComponent), _class.displayName = getDisplayName(ComposedComponent, 'Tooltip'), _class.propTypes = {\n    /**\n     * An optional style to apply to the tooltip container.\n     */\n    tooltipContainerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the tooltip container.\n     */\n    tooltipContainerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the tooltip itself.\n     */\n    tooltipStyle: PropTypes.object,\n\n    /**\n     * An optional className to the tooltip itself.\n     */\n    tooltipClassName: PropTypes.string,\n\n    /**\n     * The tooltip to display. If omitted, the `tooltip` prop will not be injected.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * The amount of delay before the tooltip will appear on hover, touch, or keyboard focus.\n     */\n    tooltipDelay: TooltipContainer.propTypes.delay,\n\n    /**\n     * The position that the tooltip should appear related to the composed component.\n     */\n    tooltipPosition: TooltipContainer.propTypes.position,\n\n    /**\n     * The transition time for the tooltip appearing.\n     */\n    tooltipTransitionEnterTimeout: TooltipContainer.propTypes.enterTimeout,\n\n    /**\n     * The transition time for the tooltip disappearing.\n     */\n    tooltipTransitionLeaveTimeout: TooltipContainer.propTypes.leaveTimeout\n  }, _temp2;\n});","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Tooltips/injectTooltip.js"],"names":["_objectWithoutProperties","obj","keys","target","i","indexOf","Object","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","getDisplayName","TooltipContainer","ComposedComponent","_class","_temp2","_PureComponent","TooltipedComponent","_temp","_this","_ret","_len","arguments","length","args","Array","_key","apply","concat","_composed","getComposedComponent","_setComposedComponent","component","render","_props","props","tooltipLabel","tooltipDelay","tooltipPosition","tooltipStyle","tooltipClassName","tooltipContainerStyle","tooltipContainerClassName","tooltipTransitionEnterTimeout","tooltipTransitionLeaveTimeout","tooltip","createElement","key","label","delay","position","enterTimeout","leaveTimeout","style","className","ref","displayName","propTypes","object","string","node"],"mappings":"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","sourcesContent":["function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\nimport TooltipContainer from './TooltipContainer';\n\n/**\n * Takes any component and injects a tooltip container as a prop. The tooltip container\n * will add event listeners for touch, mouse, and keyboard events so that a tooltip will appear\n * in the ComposedComponent.\n *\n * If the `tooltipLabel` prop is omitted, the tooltip and event listeners will not\n * be included.\n *\n * ```js\n * @param {function} ComposedComponent the component to compose with the tooltip functionality.\n * @return {function} the ComposedComponent with a tooltip.\n * ```\n */\nexport default (function (ComposedComponent) {\n  var _class, _temp2;\n\n  return _temp2 = _class = function (_PureComponent) {\n    _inherits(TooltipedComponent, _PureComponent);\n\n    function TooltipedComponent() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, TooltipedComponent);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this._composed = null, _this.getComposedComponent = function () {\n        return _this._composed;\n      }, _this._setComposedComponent = function (component) {\n        _this._composed = component;\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    /**\n     * Gets the composed component as a ref. This is useful if you need to access the ref of the\n     * composed component instead of the `injectTooltip` HOC to use some publicly accessible methods.\n     *\n     * ```js\n     * <SomeTooltippedComponent\n     *   ref={tooltipHOC => {\n     *     tooltipHOC.getComposedComponent().focus();\n     *   }}\n     * />\n     * ```\n     *\n     * > NOTE: This can be `null`, so make sure to do a null check before using.\n     */\n\n\n    TooltipedComponent.prototype.render = function render() {\n      var _props = this.props,\n          tooltipLabel = _props.tooltipLabel,\n          tooltipDelay = _props.tooltipDelay,\n          tooltipPosition = _props.tooltipPosition,\n          tooltipStyle = _props.tooltipStyle,\n          tooltipClassName = _props.tooltipClassName,\n          tooltipContainerStyle = _props.tooltipContainerStyle,\n          tooltipContainerClassName = _props.tooltipContainerClassName,\n          tooltipTransitionEnterTimeout = _props.tooltipTransitionEnterTimeout,\n          tooltipTransitionLeaveTimeout = _props.tooltipTransitionLeaveTimeout,\n          props = _objectWithoutProperties(_props, ['tooltipLabel', 'tooltipDelay', 'tooltipPosition', 'tooltipStyle', 'tooltipClassName', 'tooltipContainerStyle', 'tooltipContainerClassName', 'tooltipTransitionEnterTimeout', 'tooltipTransitionLeaveTimeout']);\n\n      if (tooltipLabel) {\n        props.tooltip = React.createElement(TooltipContainer, {\n          key: 'tooltipContainer',\n          label: tooltipLabel,\n          delay: tooltipDelay,\n          position: tooltipPosition,\n          enterTimeout: tooltipTransitionEnterTimeout,\n          leaveTimeout: tooltipTransitionLeaveTimeout,\n          style: tooltipContainerStyle,\n          className: tooltipContainerClassName,\n          tooltipStyle: tooltipStyle,\n          tooltipClassName: tooltipClassName\n        });\n      }\n\n      props.ref = this._setComposedComponent;\n\n      return React.createElement(ComposedComponent, props);\n    };\n\n    return TooltipedComponent;\n  }(PureComponent), _class.displayName = getDisplayName(ComposedComponent, 'Tooltip'), _class.propTypes = {\n    /**\n     * An optional style to apply to the tooltip container.\n     */\n    tooltipContainerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the tooltip container.\n     */\n    tooltipContainerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the tooltip itself.\n     */\n    tooltipStyle: PropTypes.object,\n\n    /**\n     * An optional className to the tooltip itself.\n     */\n    tooltipClassName: PropTypes.string,\n\n    /**\n     * The tooltip to display. If omitted, the `tooltip` prop will not be injected.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * The amount of delay before the tooltip will appear on hover, touch, or keyboard focus.\n     */\n    tooltipDelay: TooltipContainer.propTypes.delay,\n\n    /**\n     * The position that the tooltip should appear related to the composed component.\n     */\n    tooltipPosition: TooltipContainer.propTypes.position,\n\n    /**\n     * The transition time for the tooltip appearing.\n     */\n    tooltipTransitionEnterTimeout: TooltipContainer.propTypes.enterTimeout,\n\n    /**\n     * The transition time for the tooltip disappearing.\n     */\n    tooltipTransitionLeaveTimeout: TooltipContainer.propTypes.leaveTimeout\n  }, _temp2;\n});"]},"metadata":{},"sourceType":"module"}