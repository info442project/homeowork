{"ast":null,"code":"/** @module utils/PropTypes/minNumber */\nimport PropTypes from 'prop-types';\n/**\n * Validates the a prop's value is greater than or equal to the minimum value.\n *\n * @param {Number} min - the minimum value for the prop.\n * @param {Boolean} required - Boolean if the prop is required.\n * @return {Error} an error or null.\n */\n\nexport default function minNumber(min, required) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n    var validator = PropTypes.number;\n\n    if (required) {\n      validator = validator.isRequired;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    var err = validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n\n    if (!required && !err && props[propName] < min) {\n      err = new Error('The ' + location + ' `' + propFullNameSafe + '` must be greater than or equal to the min value ' + ('`' + min + '` but received `' + props[propName] + '` for the `' + componentNameSafe + '` component.'));\n    }\n\n    return err;\n  };\n}","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/utils/PropTypes/minNumber.js"],"names":["PropTypes","minNumber","min","required","validate","props","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","validator","number","isRequired","_len","arguments","length","args","Array","_key","err","apply","undefined","concat","Error"],"mappings":"AAAA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AAEA;;;;;;;;AAOA,eAAe,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAC/C,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCC,aAAnC,EAAkDC,QAAlD,EAA4DC,YAA5D,EAA0E;AAC/E,QAAIC,iBAAiB,GAAGH,aAAa,IAAI,eAAzC;AACA,QAAII,gBAAgB,GAAGF,YAAY,IAAIH,QAAvC;AAEA,QAAIM,SAAS,GAAGZ,SAAS,CAACa,MAA1B;;AACA,QAAIV,QAAJ,EAAc;AACZS,MAAAA,SAAS,GAAGA,SAAS,CAACE,UAAtB;AACD;;AAED,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAvB,CAAzC,EAAoEK,IAAI,GAAG,CAAhF,EAAmFA,IAAI,GAAGL,IAA1F,EAAgGK,IAAI,EAApG,EAAwG;AACtGF,MAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAED,QAAIC,GAAG,GAAGT,SAAS,CAACU,KAAV,CAAgBC,SAAhB,EAA2B,CAAClB,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyDe,MAAzD,CAAgEN,IAAhE,CAA3B,CAAV;;AACA,QAAI,CAACf,QAAD,IAAa,CAACkB,GAAd,IAAqBhB,KAAK,CAACC,QAAD,CAAL,GAAkBJ,GAA3C,EAAgD;AAC9CmB,MAAAA,GAAG,GAAG,IAAII,KAAJ,CAAU,SAASjB,QAAT,GAAoB,IAApB,GAA2BG,gBAA3B,GAA8C,mDAA9C,IAAqG,MAAMT,GAAN,GAAY,kBAAZ,GAAiCG,KAAK,CAACC,QAAD,CAAtC,GAAmD,aAAnD,GAAmEI,iBAAnE,GAAuF,cAA5L,CAAV,CAAN;AACD;;AAED,WAAOW,GAAP;AACD,GAnBD;AAoBD","sourcesContent":["/** @module utils/PropTypes/minNumber */\nimport PropTypes from 'prop-types';\n\n/**\n * Validates the a prop's value is greater than or equal to the minimum value.\n *\n * @param {Number} min - the minimum value for the prop.\n * @param {Boolean} required - Boolean if the prop is required.\n * @return {Error} an error or null.\n */\nexport default function minNumber(min, required) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    var validator = PropTypes.number;\n    if (required) {\n      validator = validator.isRequired;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    var err = validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n    if (!required && !err && props[propName] < min) {\n      err = new Error('The ' + location + ' `' + propFullNameSafe + '` must be greater than or equal to the min value ' + ('`' + min + '` but received `' + props[propName] + '` for the `' + componentNameSafe + '` component.'));\n    }\n\n    return err;\n  };\n}"]},"metadata":{},"sourceType":"module"}