{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport { LEFT, RIGHT, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport isValidClick from '../utils/EventUtils/isValidClick';\nimport { setTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport calculateValueDistance from '../utils/NumberUtils/calculateValueDistance';\nimport isWithinStep from '../utils/NumberUtils/isWithinStep';\nimport controlled from '../utils/PropTypes/controlled';\nimport SliderLabel from './SliderLabel';\nimport Track from './Track';\nimport TextField from '../TextFields/TextField';\n/**\n * The `Slider` component is used to let users select a value from a continuous\n * or discrete range of values by moving the slider thumb.\n *\n * When the user has finished dragging the Slider or increments the value by using\n * the edit field/keyboard arrows, the value will be rounded to the nearest `step`.\n */\n\nvar Slider = function (_PureComponent) {\n  _inherits(Slider, _PureComponent);\n\n  function Slider(props) {\n    _classCallCheck(this, Slider);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var min = props.min,\n        max = props.max,\n        step = props.step;\n    var scale = Math.abs(max - min) / step;\n    var value = typeof props.value !== 'undefined' ? props.value : props.defaultValue;\n\n    if (typeof value === 'undefined') {\n      value = min;\n    }\n\n    var distance = _this._calcDistance(value, min, max);\n\n    var thumbLeft = _this._calcLeft(distance);\n\n    var trackFillWidth = distance + '%';\n\n    if (typeof props.value !== 'undefined') {\n      value = undefined;\n    }\n\n    var trackWidth = void 0;\n\n    if (props.label && !props.editable && !props.leftIcon && !props.rightIcon) {\n      trackWidth = '100%';\n    }\n\n    _this.state = {\n      value: value,\n      scale: scale,\n      distance: distance,\n      thumbLeft: thumbLeft,\n      trackWidth: trackWidth,\n      trackFillWidth: trackFillWidth,\n      active: false,\n      dragging: false,\n      maskInked: false\n    };\n    _this._dragAdded = false;\n    return _this;\n  }\n\n  Slider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        leftIcon = _props.leftIcon,\n        rightIcon = _props.rightIcon,\n        label = _props.label,\n        min = _props.min,\n        max = _props.max,\n        step = _props.step,\n        value = _props.value;\n\n    if (value !== nextProps.value) {\n      var distance = this._calcDistance(nextProps.value, nextProps.min, nextProps.max);\n\n      this.setState({\n        distance: distance,\n        trackFillWidth: distance + '%',\n        thumbLeft: this._calcLeft(distance)\n      });\n    }\n\n    if (leftIcon !== nextProps.leftIcon || rightIcon !== nextProps.rightIcon || label !== nextProps.label) {\n      this._calcTrackWidth(nextProps);\n    }\n\n    if (min !== nextProps.min || max !== nextProps.max || step !== nextProps.step) {\n      this.setState({\n        scale: Math.abs(nextProps.max - nextProps.min) / nextProps.step\n      });\n    }\n  };\n\n  Slider.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var _state = this.state,\n        active = _state.active,\n        manualIncrement = _state.manualIncrement;\n\n    if (active !== prevState.active) {\n      if (active) {\n        window.addEventListener('click', this._blurOnOutsideClick);\n\n        this._focusThumb();\n      } else {\n        window.removeEventListener('click', this._blurOnOutsideClick);\n      }\n    }\n\n    var addDrag = active && !manualIncrement;\n\n    if (this._dragAdded !== addDrag) {\n      if (addDrag) {\n        window.addEventListener('mousemove', this._handleDragMove);\n        window.addEventListener('mouseup', this._handleDragEnd);\n      } else {\n        window.removeEventListener('mousemove', this._handleDragMove);\n        window.removeEventListener('mouseup', this._handleDragEnd);\n      }\n\n      setTouchEvent(addDrag, window, 'move', this._handleDragMove);\n      setTouchEvent(addDrag, window, 'end', this._handleDragEnd);\n      this._dragAdded = addDrag;\n    }\n  };\n\n  Slider.prototype.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener('click', this._blurOnOutsideClick);\n    window.removeEventListener('mousemove', this._handleMouseMove);\n    window.removeEventListener('mouseup', this._handleMouseUp);\n    removeTouchEvent(window, 'move', this._handleDragMove);\n    removeTouchEvent(window, 'end', this._handleDragEnd);\n\n    if (this._inkTimeout) {\n      clearTimeout(this._inkTimeout);\n    }\n\n    if (this._focusTimeout) {\n      clearTimeout(this._focusTimeout);\n    }\n  };\n  /**\n   * Gets the `left` position for the thumb based on the value given.\n   *\n   * @param {number} value - The current value.\n   * @return {string} the `calc` string.\n   */\n\n\n  Slider.prototype._calcLeft = function _calcLeft(value) {\n    return 'calc(' + value + '% - 6px)';\n  };\n\n  Slider.prototype._calcDistance = function _calcDistance(value, min, max) {\n    return Math.max(0, Math.min(100, (value - min) / (max - min) * 100));\n  };\n  /**\n   * Checks if a classList does not contain all the *bad* class names.\n   *\n   * @param {function} classList - The classList to check.\n   * @return {Boolean} true if the classList does not contain any of the *bad* class names.\n   */\n\n\n  Slider.prototype._isValidClassList = function _isValidClassList(classList) {\n    var invalid = false;\n    ['md-slider-label', 'md-slider-ind', 'md-icon'].some(function (cl) {\n      invalid = classList.contains(cl);\n      return invalid;\n    });\n    return !invalid;\n  };\n\n  Slider.prototype._isInTextField = function _isInTextField(e) {\n    var className = e.target.className; // SVG's className is an object instead of a string\n\n    return typeof className.match === 'function' && className.match(/text-field/);\n  };\n  /**\n   * Checks if the target is within the text field container.\n   *\n   * @param {Object} target - The event target.\n   * @return {Boolean} true if the target is in the text field.\n   */\n\n  /**\n   * Updates the slider's thumb position and the slider's track fill width based\n   * on the thumb's current x position on the screen.\n   *\n   * The slider distance will be *normalized* when:\n   *  - The user does a quick jump\n   *  - The user stops dragging with the mouse\n   *  - The user drops dragging with touch\n   *\n   * If the position is not *normalized*, the `onDragChange` prop will be called\n   * with the new distance percentage, the value, and the move event.\n   *\n   * The `onChange` function will always be called.\n   *\n   * @param {Object} e - The current event to extract an x location from\n   * @param {bool} normalize - Boolean if the distance should be normalized\n   *    to the current scale of the slider.\n   */\n\n  /**\n   * This will either allow a user to start dragging the slider or quickly\n   * jump to a new value on the slider if the slider is not disabled.\n   *\n   * This will handle the `touchstart` and `mousedown` events.\n   *\n   * @param {Object} e - The touchstart or mousedown event.\n   */\n\n  /**\n   * This will set the active state of the slider to false if the user\n   * clicks outside of the slider's container.\n   *\n   * @param {Object} e - The window's click event.\n   */\n\n  /**\n   * Updates the slider with the `step` prop and calls the `onChange`\n   * function with the new value.\n   *\n   * @param {number} incrementedValue - The newly incremented value of the slider.\n   * @param {Object} e - Either the text field's change event, mouse down event, or\n   *    touch start event.\n   * @param {bool} disableTransition - Boolean if the jump's transition should be disabled.\n   */\n\n  /**\n   * This will increment the Slider's value by the `step` prop. If the left or\n   * right key arrow is pressed.\n   *\n   * @param {Object} e - the keydown event.\n   */\n\n  /**\n   * This function will animate the discrete Slider's ink if it gains focus\n   * by a tab event.\n   *\n   * @param {Object} e - the key up event.\n   */\n\n  /**\n   * For some reason the width of the track gets set to 0 if the `Slider` has a label and\n   * does not include the `leftIcon`, `rightIcon`, and is not `editable` OR it is\n   * `editable` and does not include the `leftIcon`. All other cases the width works\n   * correctly.\n   *\n   * This function just checks these things, and sets the width accordingly.\n   */\n\n  /**\n   * The ink for a Discrete slider is only visible for a short time on initial\n   * focus. This function will handle the in/out transitions.\n   */\n\n  /**\n   * This is a helper function for focusing the Slider's thumb component. There\n   * is a short delay because the body sometimes gets focused immediately after\n   * if there is no timeout..\n   */\n\n\n  Slider.prototype.render = function render() {\n    var _state2 = this.state,\n        dragging = _state2.dragging,\n        active = _state2.active,\n        thumbLeft = _state2.thumbLeft,\n        trackFillWidth = _state2.trackFillWidth,\n        maskInked = _state2.maskInked,\n        trackWidth = _state2.trackWidth,\n        scale = _state2.scale,\n        distance = _state2.distance;\n\n    var _props2 = this.props,\n        id = _props2.id,\n        min = _props2.min,\n        max = _props2.max,\n        disabled = _props2.disabled,\n        className = _props2.className,\n        trackStyle = _props2.trackStyle,\n        trackClassName = _props2.trackClassName,\n        thumbStyle = _props2.thumbStyle,\n        thumbClassName = _props2.thumbClassName,\n        discreteValueStyle = _props2.discreteValueStyle,\n        discreteValueClassName = _props2.discreteValueClassName,\n        label = _props2.label,\n        editable = _props2.editable,\n        step = _props2.step,\n        inputWidth = _props2.inputWidth,\n        leftIcon = _props2.leftIcon,\n        rightIcon = _props2.rightIcon,\n        discrete = _props2.discrete,\n        discreteTicks = _props2.discreteTicks,\n        tickWidth = _props2.tickWidth,\n        valuePrecision = _props2.valuePrecision,\n        propValue = _props2.value,\n        onChange = _props2.onChange,\n        onDragChange = _props2.onDragChange,\n        discreteInkTransitionTime = _props2.discreteInkTransitionTime,\n        stepPrecision = _props2.stepPrecision,\n        props = _objectWithoutProperties(_props2, ['id', 'min', 'max', 'disabled', 'className', 'trackStyle', 'trackClassName', 'thumbStyle', 'thumbClassName', 'discreteValueStyle', 'discreteValueClassName', 'label', 'editable', 'step', 'inputWidth', 'leftIcon', 'rightIcon', 'discrete', 'discreteTicks', 'tickWidth', 'valuePrecision', 'value', 'onChange', 'onDragChange', 'discreteInkTransitionTime', 'stepPrecision']);\n\n    var value = getField(this.props, this.state);\n    var rightChildren = rightIcon;\n\n    if (editable) {\n      rightChildren = React.createElement(TextField, {\n        id: id + '-editor',\n        ref: this._setField,\n        type: 'number',\n        value: value,\n        inputClassName: 'md-slider-editor',\n        style: {\n          width: inputWidth\n        },\n        onChange: this._handleTextFieldChange,\n        step: step\n      });\n    }\n\n    return React.createElement('div', _extends({}, props, {\n      ref: this._setNode,\n      className: cn('md-slider-container', className, {\n        'md-pointer--hover': !disabled\n      }),\n      onMouseDown: this._handleDragStart,\n      onTouchStart: this._handleDragStart\n    }), React.createElement(SliderLabel, {\n      htmlFor: id\n    }, label), React.createElement('input', {\n      id: id,\n      type: 'range',\n      className: 'md-slider-input',\n      readOnly: true,\n      min: min,\n      max: max,\n      value: value,\n      disabled: disabled\n    }), leftIcon, React.createElement(Track, {\n      ref: this._setTrack,\n      style: Object.assign({}, trackStyle, {\n        width: trackWidth\n      }),\n      className: cn(trackClassName, {\n        'md-slider-track--ind-left': leftIcon,\n        'md-slider-track--ind-right': rightIcon\n      }),\n      thumbStyle: thumbStyle,\n      thumbClassName: thumbClassName,\n      discreteValueStyle: discreteValueStyle,\n      discreteValueClassName: discreteValueClassName,\n      active: active,\n      dragging: dragging,\n      disabled: disabled,\n      thumbLeft: thumbLeft,\n      trackFillWidth: trackFillWidth,\n      on: !disabled && distance > 0,\n      off: distance === 0,\n      maskInked: maskInked,\n      onThumbKeyUp: this._handleKeyUp,\n      onThumbKeyDown: this._handleKeyDown,\n      onThumbFocus: this._handleFocus,\n      discrete: discrete,\n      tickWidth: tickWidth,\n      discreteTicks: discreteTicks,\n      valuePrecision: valuePrecision,\n      step: step,\n      scale: scale,\n      value: value\n    }), rightChildren);\n  };\n\n  return Slider;\n}(PureComponent);\n\nSlider.propTypes = {\n  /**\n   * An id to use for the `Slider`. This is required if the `label` prop\n   * is defined.\n   */\n  id: function id(props, propName, component) {\n    for (var _len = arguments.length, others = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      others[_key - 3] = arguments[_key];\n    }\n\n    if (typeof props.label === 'undefined') {\n      return PropTypes.string.apply(PropTypes, [props, propName, component].concat(others));\n    }\n\n    return isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])).apply(undefined, [props, propName, component].concat(others));\n  },\n\n  /**\n   * An optional style to apply to the slider's container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the slider's container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the slider's thumb.\n   */\n  thumbStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the slider's thumb.\n   */\n  thumbClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the slider's track.\n   */\n  trackStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the slider's track.\n   */\n  trackClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the slider's track fill.\n   */\n  trackFillStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the slider's track fill.\n   */\n  trackFillClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to a discrete slider's value.\n   */\n  discreteValueStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to a discrete slider's value.\n   */\n  discreteValueClassName: PropTypes.string,\n\n  /**\n   * The default value for the slider. This number must be between the min and max values if\n   * defined. If this is undefined, it's value will be set to the min value.\n   */\n  defaultValue: PropTypes.number,\n\n  /**\n   * The min value for the slider. This value **must** be less than the `max` value.\n   */\n  min: function min(props, propName, component) {\n    for (var _len2 = arguments.length, others = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      others[_key2 - 3] = arguments[_key2];\n    }\n\n    var _PropTypes$number;\n\n    var err = (_PropTypes$number = PropTypes.number).isRequired.apply(_PropTypes$number, [props, propName, component].concat(others));\n\n    if (!err) {\n      var min = props[propName];\n      var name = void 0;\n\n      if (min > props.value) {\n        name = 'value';\n      } else if (typeof props.defaultValue !== 'undefined' && min > props.defaultValue) {\n        name = 'defaultValue';\n      }\n\n      if (name) {\n        err = new Error('The \\'' + propName + '\\' prop must be less than or equal to the \\'' + name + '\\' prop for the \\'' + component + '\\' but ' + ('received: \\'min: ' + min + '\\' and \\'' + name + ': ' + props[name] + '\\''));\n      }\n    }\n\n    return err;\n  },\n\n  /**\n   * The max value for the slider. This value **must** be greater than the `min` value.\n   */\n  max: function max(props, propName, component) {\n    for (var _len3 = arguments.length, others = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n      others[_key3 - 3] = arguments[_key3];\n    }\n\n    var _PropTypes$number2;\n\n    var err = (_PropTypes$number2 = PropTypes.number).isRequired.apply(_PropTypes$number2, [props, propName, component].concat(others));\n\n    if (!err) {\n      var max = props[propName];\n      var name = void 0;\n\n      if (max < props.value) {\n        name = 'value';\n      } else if (max < props.defaultValue) {\n        name = 'defaultValue';\n      }\n\n      if (name) {\n        err = new Error('The \\'' + propName + '\\' prop must be greater than or equal to the \\'' + name + '\\' prop for the \\'' + component + '\\' but ' + ('received: \\'' + propName + ': ' + max + '\\' and \\'' + name + ': ' + props[name] + '\\''));\n      }\n    }\n\n    return err;\n  },\n\n  /**\n   * Boolean if the slider is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * An optional value for the slider. This will make the component controlled\n   * and require the `onChange` function.\n   */\n  value: controlled(PropTypes.number, 'onChange'),\n\n  /**\n   * This is called when the slider's value gets updated. The value can be updated\n   * by one of the following:\n   *\n   * - Clicking a section of the slider\n   * - Dragging the slider with the mouse\n   * - Touching a section of the slider.\n   * - Dragging the slider with touch\n   * - Using the text field to update the value either by typing or incrementing\n   * - Using the left or right arrow keys to increment/decrement the value.\n   *\n   * The callback for this function is as follows:\n   *\n   * ```js\n   * onChange(value, event);\n   * ```\n   *\n   * where the event can either be:\n   * - a touch start event\n   * - a touch move event\n   * - a touch end event\n   * - a mouse down event\n   * - a mouse move event\n   * - a mouse up event\n   * - a key up event\n   * - a key down event\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * This is only called when the user is dragging the slider with either\n   * the mouse or touch. Probably not really useful. It just includes the\n   * new drag percentage while the `onChange` does not.\n   *\n   * The callback for this function is defined as:\n   *\n   * ```js\n   * onDragChange(dragPercentage, value, (touchMove || mouseMove) event);\n   * ```\n   */\n  onDragChange: PropTypes.func,\n\n  /**\n   * An optional function to call when the slider's container has\n   * the mousedown event.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the slider's container has\n   * the touchstart event.\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * An optional icon or letter to place to the left of the slider.\n   * if you want to use a non-font icon or a letter, use the `md-slider-ind`\n   * className on your element.\n   */\n  leftIcon: PropTypes.element,\n\n  /**\n   * An optional icon or letter to place to the right of the slider.\n   * if you want to use a non-font icon or a letter, use the `md-slider-ind`\n   * className on your element.\n   *\n   * > NOTE: This can not be used if the `editable` prop is true.\n   */\n  rightIcon: PropTypes.element,\n\n  /**\n   * An optional label to display above the slider. If this prop\n   * is set, then an `id` must also be given.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The incremental amount when the user hits left or right with the\n   * keyboard arrows, or the user hits the up or down buttons in the\n   * editable number text field. This number must be a number between\n   * 0 and 1 or a whole number above 1.\n   */\n  step: function step(props, propName, component) {\n    for (var _len4 = arguments.length, others = Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n      others[_key4 - 3] = arguments[_key4];\n    }\n\n    var _PropTypes$number3;\n\n    var err = (_PropTypes$number3 = PropTypes.number).isRequired.apply(_PropTypes$number3, [props, propName, component].concat(others));\n\n    if (!err) {\n      var step = props[propName];\n\n      if (step <= 0) {\n        err = new Error('The \\'' + propName + '\\' for the \\'' + component + '\\' must be a number greater than 0. The ' + ('current value is \\'' + step + '\\'.'));\n      } else {\n        var valueDefined = typeof props.value !== 'undefined';\n        var defaultDefined = typeof props.defaultValue !== 'undefined';\n        var value = props.value;\n\n        if (!valueDefined) {\n          value = defaultDefined ? props.defaultValue : props.min;\n        }\n\n        var name = void 0;\n\n        if (!isWithinStep(value, step)) {\n          if (valueDefined) {\n            name = 'value';\n          } else if (defaultDefined) {\n            name = 'defaultValue';\n          } else {\n            name = 'min';\n          }\n        }\n\n        if (name) {\n          err = new Error('The \\'' + name + '\\' prop on \\'' + component + '\\' should be a number divisible by the ' + ('\\'' + propName + '\\' prop. The current value is \\'' + props[name] + '\\' and the \\'' + propName + '\\' ') + ('is \\'' + step + '\\'.'));\n        }\n      }\n    }\n\n    return err;\n  },\n\n  /**\n   * Boolean if the Slider should be editable. This will place a number text field\n   * to the right of the slider. If this prop is set to `true`, the `rightIcon`\n   * prop can not be set.\n   */\n  editable: function editable(props, propName, component) {\n    for (var _len5 = arguments.length, others = Array(_len5 > 3 ? _len5 - 3 : 0), _key5 = 3; _key5 < _len5; _key5++) {\n      others[_key5 - 3] = arguments[_key5];\n    }\n\n    var _PropTypes$bool;\n\n    if (typeof props[propName] === 'undefined') {\n      return null;\n    }\n\n    var err = (_PropTypes$bool = PropTypes.bool).isRequired.apply(_PropTypes$bool, [props, propName, component].concat(others));\n\n    if (!err && typeof props.rightIcon !== 'undefined') {\n      err = new Error('The \\'' + component + '\\' is unable to be \\'editable\\' and include a \\'rightIcon\\'.');\n    }\n\n    return err;\n  },\n\n  /**\n   * The width for the number text field when the Slider is editable.\n   */\n  inputWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * Boolean if the slider should be discrete. This will update the slider to include a\n   * _balloon_ with the current value inside. It will also not allow the `Slider` to be\n   * editable.\n   */\n  discrete: function discrete(props, propName, component) {\n    for (var _len6 = arguments.length, others = Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {\n      others[_key6 - 3] = arguments[_key6];\n    }\n\n    if (typeof props[propName] === 'undefined') {\n      return null;\n    }\n\n    var err = PropTypes.bool.apply(PropTypes, [props, propName, component].concat(others));\n\n    if (!err && typeof props.editable !== 'undefined') {\n      err = new Error('The \\'' + component + '\\' cannot be \\'discrete\\' and \\'editable\\'. Please choose one.');\n    }\n\n    return err;\n  },\n\n  /**\n   * The width of each tick for a discrete slider with ticks. This can either be a number\n   * which gets converted to `px`, or a valid CSS unit.\n   */\n  tickWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * This is number divisible by the total number of values included in the Slider. Every\n   * value that is divisible by this number will include a tick mark. It is common recommended\n   * to have this equal to the `step` prop.\n   *\n   * This prop is completely optional.\n   */\n  discreteTicks: function discreteTicks(props, propName, component) {\n    for (var _len7 = arguments.length, others = Array(_len7 > 3 ? _len7 - 3 : 0), _key7 = 3; _key7 < _len7; _key7++) {\n      others[_key7 - 3] = arguments[_key7];\n    }\n\n    if (typeof props[propName] === 'undefined') {\n      return null;\n    }\n\n    var err = PropTypes.number.apply(PropTypes, [props, propName, component].concat(others));\n\n    if (!err) {\n      var min = props.min,\n          max = props.max,\n          step = props.step;\n      var range = Math.abs(max - min);\n\n      if (range / props[propName] % 1 !== 0) {\n        err = new Error('The \\'' + propName + '\\' must be a number divisible by the range set by the \\'min\\' and ' + ('\\'max\\' props. The current range is \\'' + range + '\\' by including the min: \\'' + min + '\\' and ') + ('max: \\'' + max + '\\' values. The current value of \\'' + propName + '\\' is \\'' + props[propName] + '\\'.'));\n      } else if (props[propName] % step !== 0) {\n        err = new Error('The \\'step\\' prop must be a number divisible by the \\'' + propName + '\\'. It is common to have ' + ('them as the same value. The current \\'step\\' is \\'' + step + '\\' and the \\'' + propName + '\\' is \\'' + props[propName] + '\\'.'));\n      }\n    }\n\n    return err;\n  },\n\n  /**\n   * The transition time for a discrete Slider's keyboard focus ink. This should match the\n   * `md-slider-discrete-ink-transition-time` value in your SCSS. This is used because\n   * the ink is only visible temporarily for a discrete slider when keyboard focusing.\n   */\n  discreteInkTransitionTime: PropTypes.number.isRequired,\n\n  /**\n   * The precision that the value should be rounded to when the Slider is updated. This\n   * needs to be a whole number greater than or equal to 0.\n   */\n  valuePrecision: function valuePrecision(props, propName, component) {\n    for (var _len8 = arguments.length, others = Array(_len8 > 3 ? _len8 - 3 : 0), _key8 = 3; _key8 < _len8; _key8++) {\n      others[_key8 - 3] = arguments[_key8];\n    }\n\n    var _PropTypes$number4;\n\n    var err = (_PropTypes$number4 = PropTypes.number).isRequired.apply(_PropTypes$number4, [props, propName, component].concat(others));\n\n    if (!err) {\n      var precision = props[propName];\n\n      if (precision % 1 !== 0 || precision < 0) {\n        err = new Error('The \\'' + propName + '\\' must be a positive whole number or 0 on the \\'' + component + '\\'. ' + ('The current \\'' + propName + '\\' is \\'' + precision + '\\''));\n      }\n    }\n\n    return err;\n  },\n  stepPrecision: deprecated(PropTypes.number, 'Use `step` and `valuePrecision` instead')\n};\nSlider.defaultProps = {\n  min: 0,\n  max: 100,\n  step: 1,\n  inputWidth: 40,\n  tickWidth: 6,\n  discreteInkTransitionTime: 300,\n  valuePrecision: 0\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._isTextField = function (target) {\n    return _this2._field && _this2._field.contains(target);\n  };\n\n  this._updatePosition = function (e, normalize) {\n    var x = (e.changedTouches ? e.changedTouches[0] : e).clientX;\n    var scale = _this2.state.scale;\n    var _props3 = _this2.props,\n        onChange = _props3.onChange,\n        onDragChange = _props3.onDragChange,\n        min = _props3.min,\n        max = _props3.max,\n        step = _props3.step;\n\n    var _calculateValueDistan = calculateValueDistance(x, _this2._track.offsetWidth, _this2._track.getBoundingClientRect().left, scale, step, min, max, normalize),\n        value = _calculateValueDistan.value,\n        distance = _calculateValueDistan.distance;\n\n    var isNewValue = getField(_this2.props, _this2.state, 'value') !== value;\n\n    if (onChange && isNewValue) {\n      onChange(value, e);\n    }\n\n    if (!normalize && onDragChange && (isNewValue || _this2.state.distance !== distance)) {\n      onDragChange(distance, value, e);\n    }\n\n    var state = {\n      active: true,\n      distance: distance,\n      manualIncrement: false,\n      dragging: !normalize,\n      thumbLeft: _this2._calcLeft(distance),\n      trackFillWidth: distance + '%'\n    };\n\n    if (e.type === 'touchend' || e.type === 'mousedown') {\n      state.maskInked = false;\n    }\n\n    if (typeof _this2.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    _this2.setState(state);\n  };\n\n  this._handleDragStart = function (e) {\n    if (e.type === 'mousedown' && _this2.props.onMouseDown) {\n      _this2.props.onMouseDown(e);\n    } else if (e.type === 'touchstart' && _this2.props.onTouchStart) {\n      _this2.props.onTouchStart(e);\n    }\n\n    if (_this2.props.disabled || e.type === 'mousedown' && !isValidClick(e, 'mousedown') || _this2._isInTextField(e)) {\n      return;\n    }\n\n    var classList = e.target.classList;\n    var isDiscreteValue = classList.contains('md-slider-discrete-value');\n\n    if (classList.contains('md-slider-thumb') || isDiscreteValue) {\n      // Prevents text highlighting while dragging.\n      if (e.type.match(/mouse/)) {\n        e.preventDefault();\n      }\n\n      _this2.setState({\n        dragging: true,\n        active: true,\n        manualIncrement: false,\n        maskInked: false\n      });\n    } else if (!_this2._isTextField(e.target) && _this2._isValidClassList(classList)) {\n      _this2._updatePosition(e, true);\n    }\n  };\n\n  this._setNode = function (node) {\n    _this2._node = findDOMNode(node);\n  };\n\n  this._setTrack = function (track) {\n    _this2._track = findDOMNode(track);\n  };\n\n  this._setField = function (field) {\n    _this2._field = findDOMNode(field);\n\n    _this2._calcTrackWidth(_this2.props);\n  };\n\n  this._handleDragMove = function (e) {\n    if (_this2.props.disabled || !_this2.state.dragging) {\n      return;\n    } // Stops the text highlighting while dragging\n\n\n    if (e.type.match(/mouse/)) {\n      e.preventDefault();\n    }\n\n    _this2._updatePosition(e, false);\n  };\n\n  this._handleDragEnd = function (e) {\n    if (!_this2.state.dragging || _this2.props.disabled || e.type === 'mouseup' && !isValidClick(e)) {\n      return;\n    }\n\n    _this2._updatePosition(e, true);\n  };\n\n  this._blurOnOutsideClick = function (e) {\n    if (_this2.state.dragging && !_this2.state.manualIncrement || _this2.props.disabled) {\n      return;\n    }\n\n    if (!_this2._node.contains(e.target)) {\n      _this2.setState({\n        active: false,\n        maskInked: false\n      });\n    }\n  };\n\n  this._handleIncrement = function (incrementedValue, e, disableTransition) {\n    var _props4 = _this2.props,\n        onChange = _props4.onChange,\n        min = _props4.min,\n        max = _props4.max,\n        discrete = _props4.discrete;\n    var value = Math.max(min, Math.min(max, incrementedValue));\n\n    var distance = _this2._calcDistance(value, min, max);\n\n    if (onChange) {\n      onChange(value, e);\n    }\n\n    var state = {\n      distance: distance,\n      manualIncrement: true,\n      thumbLeft: _this2._calcLeft(distance),\n      trackFillWidth: distance + '%',\n      dragging: Math.abs(_this2.state.distance - distance) < 2 && disableTransition\n    };\n\n    if (typeof _this2.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    if (e.type === 'keydown' && !discrete) {\n      state.maskInked = true;\n    }\n\n    _this2.setState(state);\n  };\n\n  this._handleTextFieldChange = function (newValue, e) {\n    _this2._handleIncrement(newValue, e, false);\n  };\n\n  this._handleKeyDown = function (e) {\n    var key = e.which || e.keyCode;\n    var _props5 = _this2.props,\n        min = _props5.min,\n        max = _props5.max,\n        step = _props5.step,\n        disabled = _props5.disabled;\n\n    if (disabled) {\n      return;\n    }\n\n    if (key === TAB) {\n      _this2.setState({\n        active: false,\n        maskInked: false\n      });\n\n      return;\n    } else if (key !== LEFT && key !== RIGHT) {\n      return;\n    }\n\n    var nextValue = getField(_this2.props, _this2.state, 'value');\n    nextValue = Math.max(min, Math.min((key === LEFT ? -step : step) + nextValue, max));\n\n    _this2._handleIncrement(nextValue, e, true);\n  };\n\n  this._handleKeyUp = function (e) {\n    if ((e.which || e.keyCode) !== TAB) {\n      return;\n    }\n\n    if (_this2.props.discrete) {\n      _this2._animateDiscreteInk();\n    }\n\n    _this2.setState({\n      maskInked: true\n    });\n  };\n\n  this._handleFocus = function () {\n    _this2.setState({\n      active: true\n    });\n  };\n\n  this._calcTrackWidth = function (props) {\n    var editable = props.editable,\n        leftIcon = props.leftIcon,\n        rightIcon = props.rightIcon,\n        inputWidth = props.inputWidth,\n        label = props.label;\n\n    if (!label) {\n      _this2.setState({\n        trackWidth: null\n      });\n\n      return;\n    }\n\n    var trackWidth = null;\n\n    if (!leftIcon && !rightIcon && !editable) {\n      trackWidth = '100%';\n    } else if (_this2._field && editable && !leftIcon) {\n      var cs = window.getComputedStyle(_this2._field);\n      var pl = parseInt(cs.getPropertyValue('padding-left'), 10) || 0;\n      var ml = parseInt(cs.getPropertyValue('margin-left'), 10) || 0;\n      trackWidth = pl + ml + inputWidth;\n    }\n\n    if (trackWidth !== _this2.state.trackWidth) {\n      _this2.setState({\n        trackWidth: trackWidth\n      });\n    }\n  };\n\n  this._animateDiscreteInk = function () {\n    var wait = _this2.props.discreteInkTransitionTime;\n\n    if (_this2._inkTimeout) {\n      clearTimeout(_this2._inkTimeout);\n    }\n\n    _this2._inkTimeout = setTimeout(function () {\n      _this2.setState({\n        leaving: true,\n        maskInked: false\n      });\n\n      _this2._inkTimeout = setTimeout(function () {\n        _this2._inkTimeout = null;\n\n        _this2.setState({\n          leaving: false\n        });\n      }, wait);\n    }, wait);\n  };\n\n  this._focusThumb = function () {\n    if (_this2._focusTimeout) {\n      clearTimeout(_this2._focusTimeout);\n    }\n\n    _this2._focusTimeout = setTimeout(function () {\n      _this2._focusTimeout = null;\n\n      if (!_this2._thumb) {\n        _this2._thumb = _this2._node.querySelector('.md-slider-thumb');\n      }\n\n      _this2._thumb.focus();\n    }, 100);\n  };\n};\n\nexport default Slider;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Sliders/Slider.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","findDOMNode","cn","deprecated","isRequiredForA11y","LEFT","RIGHT","TAB","getField","isValidClick","setTouchEvent","removeTouchEvent","calculateValueDistance","isWithinStep","controlled","SliderLabel","Track","TextField","Slider","_PureComponent","props","_this","_initialiseProps","min","max","step","scale","Math","abs","defaultValue","distance","_calcDistance","thumbLeft","_calcLeft","trackFillWidth","undefined","trackWidth","label","editable","leftIcon","rightIcon","state","active","dragging","maskInked","_dragAdded","componentWillReceiveProps","nextProps","_props","setState","_calcTrackWidth","componentDidUpdate","prevProps","prevState","_state","manualIncrement","window","addEventListener","_blurOnOutsideClick","_focusThumb","removeEventListener","addDrag","_handleDragMove","_handleDragEnd","componentWillUnmount","_handleMouseMove","_handleMouseUp","_inkTimeout","clearTimeout","_focusTimeout","_isValidClassList","classList","invalid","some","cl","contains","_isInTextField","e","className","match","render","_state2","_props2","id","disabled","trackStyle","trackClassName","thumbStyle","thumbClassName","discreteValueStyle","discreteValueClassName","inputWidth","discrete","discreteTicks","tickWidth","valuePrecision","propValue","onChange","onDragChange","discreteInkTransitionTime","stepPrecision","rightChildren","createElement","ref","_setField","type","inputClassName","style","width","_handleTextFieldChange","_setNode","onMouseDown","_handleDragStart","onTouchStart","htmlFor","readOnly","_setTrack","on","off","onThumbKeyUp","_handleKeyUp","onThumbKeyDown","_handleKeyDown","onThumbFocus","_handleFocus","propTypes","propName","component","_len","others","Array","_key","string","apply","concat","oneOfType","number","object","trackFillStyle","trackFillClassName","_len2","_key2","_PropTypes$number","err","isRequired","name","Error","_len3","_key3","_PropTypes$number2","bool","func","element","node","_len4","_key4","_PropTypes$number3","valueDefined","defaultDefined","_len5","_key5","_PropTypes$bool","_len6","_key6","_len7","_key7","range","_len8","_key8","_PropTypes$number4","precision","defaultProps","_this2","_isTextField","_field","_updatePosition","normalize","x","changedTouches","clientX","_props3","_calculateValueDistan","_track","offsetWidth","getBoundingClientRect","left","isNewValue","isDiscreteValue","preventDefault","_node","track","field","_handleIncrement","incrementedValue","disableTransition","_props4","newValue","which","keyCode","_props5","nextValue","_animateDiscreteInk","cs","getComputedStyle","pl","parseInt","getPropertyValue","ml","wait","setTimeout","leaving","_thumb","querySelector","focus"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport { LEFT, RIGHT, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport isValidClick from '../utils/EventUtils/isValidClick';\nimport { setTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport calculateValueDistance from '../utils/NumberUtils/calculateValueDistance';\nimport isWithinStep from '../utils/NumberUtils/isWithinStep';\nimport controlled from '../utils/PropTypes/controlled';\nimport SliderLabel from './SliderLabel';\nimport Track from './Track';\nimport TextField from '../TextFields/TextField';\n\n/**\n * The `Slider` component is used to let users select a value from a continuous\n * or discrete range of values by moving the slider thumb.\n *\n * When the user has finished dragging the Slider or increments the value by using\n * the edit field/keyboard arrows, the value will be rounded to the nearest `step`.\n */\n\nvar Slider = function (_PureComponent) {\n  _inherits(Slider, _PureComponent);\n\n  function Slider(props) {\n    _classCallCheck(this, Slider);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var min = props.min,\n        max = props.max,\n        step = props.step;\n\n    var scale = Math.abs(max - min) / step;\n\n    var value = typeof props.value !== 'undefined' ? props.value : props.defaultValue;\n\n    if (typeof value === 'undefined') {\n      value = min;\n    }\n\n    var distance = _this._calcDistance(value, min, max);\n    var thumbLeft = _this._calcLeft(distance);\n    var trackFillWidth = distance + '%';\n\n    if (typeof props.value !== 'undefined') {\n      value = undefined;\n    }\n\n    var trackWidth = void 0;\n    if (props.label && !props.editable && !props.leftIcon && !props.rightIcon) {\n      trackWidth = '100%';\n    }\n\n    _this.state = {\n      value: value,\n      scale: scale,\n      distance: distance,\n      thumbLeft: thumbLeft,\n      trackWidth: trackWidth,\n      trackFillWidth: trackFillWidth,\n      active: false,\n      dragging: false,\n      maskInked: false\n    };\n    _this._dragAdded = false;\n    return _this;\n  }\n\n  Slider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        leftIcon = _props.leftIcon,\n        rightIcon = _props.rightIcon,\n        label = _props.label,\n        min = _props.min,\n        max = _props.max,\n        step = _props.step,\n        value = _props.value;\n\n    if (value !== nextProps.value) {\n      var distance = this._calcDistance(nextProps.value, nextProps.min, nextProps.max);\n      this.setState({ distance: distance, trackFillWidth: distance + '%', thumbLeft: this._calcLeft(distance) });\n    }\n\n    if (leftIcon !== nextProps.leftIcon || rightIcon !== nextProps.rightIcon || label !== nextProps.label) {\n      this._calcTrackWidth(nextProps);\n    }\n\n    if (min !== nextProps.min || max !== nextProps.max || step !== nextProps.step) {\n      this.setState({ scale: Math.abs(nextProps.max - nextProps.min) / nextProps.step });\n    }\n  };\n\n  Slider.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var _state = this.state,\n        active = _state.active,\n        manualIncrement = _state.manualIncrement;\n\n    if (active !== prevState.active) {\n      if (active) {\n        window.addEventListener('click', this._blurOnOutsideClick);\n        this._focusThumb();\n      } else {\n        window.removeEventListener('click', this._blurOnOutsideClick);\n      }\n    }\n\n    var addDrag = active && !manualIncrement;\n    if (this._dragAdded !== addDrag) {\n      if (addDrag) {\n        window.addEventListener('mousemove', this._handleDragMove);\n        window.addEventListener('mouseup', this._handleDragEnd);\n      } else {\n        window.removeEventListener('mousemove', this._handleDragMove);\n        window.removeEventListener('mouseup', this._handleDragEnd);\n      }\n      setTouchEvent(addDrag, window, 'move', this._handleDragMove);\n      setTouchEvent(addDrag, window, 'end', this._handleDragEnd);\n\n      this._dragAdded = addDrag;\n    }\n  };\n\n  Slider.prototype.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener('click', this._blurOnOutsideClick);\n    window.removeEventListener('mousemove', this._handleMouseMove);\n    window.removeEventListener('mouseup', this._handleMouseUp);\n    removeTouchEvent(window, 'move', this._handleDragMove);\n    removeTouchEvent(window, 'end', this._handleDragEnd);\n\n    if (this._inkTimeout) {\n      clearTimeout(this._inkTimeout);\n    }\n\n    if (this._focusTimeout) {\n      clearTimeout(this._focusTimeout);\n    }\n  };\n\n  /**\n   * Gets the `left` position for the thumb based on the value given.\n   *\n   * @param {number} value - The current value.\n   * @return {string} the `calc` string.\n   */\n\n\n  Slider.prototype._calcLeft = function _calcLeft(value) {\n    return 'calc(' + value + '% - 6px)';\n  };\n\n  Slider.prototype._calcDistance = function _calcDistance(value, min, max) {\n    return Math.max(0, Math.min(100, (value - min) / (max - min) * 100));\n  };\n\n  /**\n   * Checks if a classList does not contain all the *bad* class names.\n   *\n   * @param {function} classList - The classList to check.\n   * @return {Boolean} true if the classList does not contain any of the *bad* class names.\n   */\n\n\n  Slider.prototype._isValidClassList = function _isValidClassList(classList) {\n    var invalid = false;\n    ['md-slider-label', 'md-slider-ind', 'md-icon'].some(function (cl) {\n      invalid = classList.contains(cl);\n      return invalid;\n    });\n\n    return !invalid;\n  };\n\n  Slider.prototype._isInTextField = function _isInTextField(e) {\n    var className = e.target.className;\n\n    // SVG's className is an object instead of a string\n\n    return typeof className.match === 'function' && className.match(/text-field/);\n  };\n\n  /**\n   * Checks if the target is within the text field container.\n   *\n   * @param {Object} target - The event target.\n   * @return {Boolean} true if the target is in the text field.\n   */\n\n\n  /**\n   * Updates the slider's thumb position and the slider's track fill width based\n   * on the thumb's current x position on the screen.\n   *\n   * The slider distance will be *normalized* when:\n   *  - The user does a quick jump\n   *  - The user stops dragging with the mouse\n   *  - The user drops dragging with touch\n   *\n   * If the position is not *normalized*, the `onDragChange` prop will be called\n   * with the new distance percentage, the value, and the move event.\n   *\n   * The `onChange` function will always be called.\n   *\n   * @param {Object} e - The current event to extract an x location from\n   * @param {bool} normalize - Boolean if the distance should be normalized\n   *    to the current scale of the slider.\n   */\n\n\n  /**\n   * This will either allow a user to start dragging the slider or quickly\n   * jump to a new value on the slider if the slider is not disabled.\n   *\n   * This will handle the `touchstart` and `mousedown` events.\n   *\n   * @param {Object} e - The touchstart or mousedown event.\n   */\n\n\n  /**\n   * This will set the active state of the slider to false if the user\n   * clicks outside of the slider's container.\n   *\n   * @param {Object} e - The window's click event.\n   */\n\n\n  /**\n   * Updates the slider with the `step` prop and calls the `onChange`\n   * function with the new value.\n   *\n   * @param {number} incrementedValue - The newly incremented value of the slider.\n   * @param {Object} e - Either the text field's change event, mouse down event, or\n   *    touch start event.\n   * @param {bool} disableTransition - Boolean if the jump's transition should be disabled.\n   */\n\n\n  /**\n   * This will increment the Slider's value by the `step` prop. If the left or\n   * right key arrow is pressed.\n   *\n   * @param {Object} e - the keydown event.\n   */\n\n\n  /**\n   * This function will animate the discrete Slider's ink if it gains focus\n   * by a tab event.\n   *\n   * @param {Object} e - the key up event.\n   */\n\n\n  /**\n   * For some reason the width of the track gets set to 0 if the `Slider` has a label and\n   * does not include the `leftIcon`, `rightIcon`, and is not `editable` OR it is\n   * `editable` and does not include the `leftIcon`. All other cases the width works\n   * correctly.\n   *\n   * This function just checks these things, and sets the width accordingly.\n   */\n\n\n  /**\n   * The ink for a Discrete slider is only visible for a short time on initial\n   * focus. This function will handle the in/out transitions.\n   */\n\n\n  /**\n   * This is a helper function for focusing the Slider's thumb component. There\n   * is a short delay because the body sometimes gets focused immediately after\n   * if there is no timeout..\n   */\n\n\n  Slider.prototype.render = function render() {\n    var _state2 = this.state,\n        dragging = _state2.dragging,\n        active = _state2.active,\n        thumbLeft = _state2.thumbLeft,\n        trackFillWidth = _state2.trackFillWidth,\n        maskInked = _state2.maskInked,\n        trackWidth = _state2.trackWidth,\n        scale = _state2.scale,\n        distance = _state2.distance;\n\n    var _props2 = this.props,\n        id = _props2.id,\n        min = _props2.min,\n        max = _props2.max,\n        disabled = _props2.disabled,\n        className = _props2.className,\n        trackStyle = _props2.trackStyle,\n        trackClassName = _props2.trackClassName,\n        thumbStyle = _props2.thumbStyle,\n        thumbClassName = _props2.thumbClassName,\n        discreteValueStyle = _props2.discreteValueStyle,\n        discreteValueClassName = _props2.discreteValueClassName,\n        label = _props2.label,\n        editable = _props2.editable,\n        step = _props2.step,\n        inputWidth = _props2.inputWidth,\n        leftIcon = _props2.leftIcon,\n        rightIcon = _props2.rightIcon,\n        discrete = _props2.discrete,\n        discreteTicks = _props2.discreteTicks,\n        tickWidth = _props2.tickWidth,\n        valuePrecision = _props2.valuePrecision,\n        propValue = _props2.value,\n        onChange = _props2.onChange,\n        onDragChange = _props2.onDragChange,\n        discreteInkTransitionTime = _props2.discreteInkTransitionTime,\n        stepPrecision = _props2.stepPrecision,\n        props = _objectWithoutProperties(_props2, ['id', 'min', 'max', 'disabled', 'className', 'trackStyle', 'trackClassName', 'thumbStyle', 'thumbClassName', 'discreteValueStyle', 'discreteValueClassName', 'label', 'editable', 'step', 'inputWidth', 'leftIcon', 'rightIcon', 'discrete', 'discreteTicks', 'tickWidth', 'valuePrecision', 'value', 'onChange', 'onDragChange', 'discreteInkTransitionTime', 'stepPrecision']);\n\n    var value = getField(this.props, this.state);\n    var rightChildren = rightIcon;\n    if (editable) {\n      rightChildren = React.createElement(TextField, {\n        id: id + '-editor',\n        ref: this._setField,\n        type: 'number',\n        value: value,\n        inputClassName: 'md-slider-editor',\n        style: { width: inputWidth },\n        onChange: this._handleTextFieldChange,\n        step: step\n      });\n    }\n\n    return React.createElement(\n      'div',\n      _extends({}, props, {\n        ref: this._setNode,\n        className: cn('md-slider-container', className, {\n          'md-pointer--hover': !disabled\n        }),\n        onMouseDown: this._handleDragStart,\n        onTouchStart: this._handleDragStart\n      }),\n      React.createElement(\n        SliderLabel,\n        { htmlFor: id },\n        label\n      ),\n      React.createElement('input', {\n        id: id,\n        type: 'range',\n        className: 'md-slider-input',\n        readOnly: true,\n        min: min,\n        max: max,\n        value: value,\n        disabled: disabled\n      }),\n      leftIcon,\n      React.createElement(Track, {\n        ref: this._setTrack,\n        style: Object.assign({}, trackStyle, { width: trackWidth }),\n        className: cn(trackClassName, {\n          'md-slider-track--ind-left': leftIcon,\n          'md-slider-track--ind-right': rightIcon\n        }),\n        thumbStyle: thumbStyle,\n        thumbClassName: thumbClassName,\n        discreteValueStyle: discreteValueStyle,\n        discreteValueClassName: discreteValueClassName,\n        active: active,\n        dragging: dragging,\n        disabled: disabled,\n        thumbLeft: thumbLeft,\n        trackFillWidth: trackFillWidth,\n        on: !disabled && distance > 0,\n        off: distance === 0,\n        maskInked: maskInked,\n        onThumbKeyUp: this._handleKeyUp,\n        onThumbKeyDown: this._handleKeyDown,\n        onThumbFocus: this._handleFocus,\n        discrete: discrete,\n        tickWidth: tickWidth,\n        discreteTicks: discreteTicks,\n        valuePrecision: valuePrecision,\n        step: step,\n        scale: scale,\n        value: value\n      }),\n      rightChildren\n    );\n  };\n\n  return Slider;\n}(PureComponent);\n\nSlider.propTypes = {\n  /**\n   * An id to use for the `Slider`. This is required if the `label` prop\n   * is defined.\n   */\n  id: function id(props, propName, component) {\n    for (var _len = arguments.length, others = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      others[_key - 3] = arguments[_key];\n    }\n\n    if (typeof props.label === 'undefined') {\n      return PropTypes.string.apply(PropTypes, [props, propName, component].concat(others));\n    }\n\n    return isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])).apply(undefined, [props, propName, component].concat(others));\n  },\n\n  /**\n   * An optional style to apply to the slider's container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the slider's container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the slider's thumb.\n   */\n  thumbStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the slider's thumb.\n   */\n  thumbClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the slider's track.\n   */\n  trackStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the slider's track.\n   */\n  trackClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the slider's track fill.\n   */\n  trackFillStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the slider's track fill.\n   */\n  trackFillClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to a discrete slider's value.\n   */\n  discreteValueStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to a discrete slider's value.\n   */\n  discreteValueClassName: PropTypes.string,\n\n  /**\n   * The default value for the slider. This number must be between the min and max values if\n   * defined. If this is undefined, it's value will be set to the min value.\n   */\n  defaultValue: PropTypes.number,\n\n  /**\n   * The min value for the slider. This value **must** be less than the `max` value.\n   */\n  min: function min(props, propName, component) {\n    for (var _len2 = arguments.length, others = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      others[_key2 - 3] = arguments[_key2];\n    }\n\n    var _PropTypes$number;\n\n    var err = (_PropTypes$number = PropTypes.number).isRequired.apply(_PropTypes$number, [props, propName, component].concat(others));\n    if (!err) {\n      var min = props[propName];\n      var name = void 0;\n      if (min > props.value) {\n        name = 'value';\n      } else if (typeof props.defaultValue !== 'undefined' && min > props.defaultValue) {\n        name = 'defaultValue';\n      }\n\n      if (name) {\n        err = new Error('The \\'' + propName + '\\' prop must be less than or equal to the \\'' + name + '\\' prop for the \\'' + component + '\\' but ' + ('received: \\'min: ' + min + '\\' and \\'' + name + ': ' + props[name] + '\\''));\n      }\n    }\n\n    return err;\n  },\n\n  /**\n   * The max value for the slider. This value **must** be greater than the `min` value.\n   */\n  max: function max(props, propName, component) {\n    for (var _len3 = arguments.length, others = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n      others[_key3 - 3] = arguments[_key3];\n    }\n\n    var _PropTypes$number2;\n\n    var err = (_PropTypes$number2 = PropTypes.number).isRequired.apply(_PropTypes$number2, [props, propName, component].concat(others));\n    if (!err) {\n      var max = props[propName];\n      var name = void 0;\n      if (max < props.value) {\n        name = 'value';\n      } else if (max < props.defaultValue) {\n        name = 'defaultValue';\n      }\n\n      if (name) {\n        err = new Error('The \\'' + propName + '\\' prop must be greater than or equal to the \\'' + name + '\\' prop for the \\'' + component + '\\' but ' + ('received: \\'' + propName + ': ' + max + '\\' and \\'' + name + ': ' + props[name] + '\\''));\n      }\n    }\n\n    return err;\n  },\n\n  /**\n   * Boolean if the slider is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * An optional value for the slider. This will make the component controlled\n   * and require the `onChange` function.\n   */\n  value: controlled(PropTypes.number, 'onChange'),\n\n  /**\n   * This is called when the slider's value gets updated. The value can be updated\n   * by one of the following:\n   *\n   * - Clicking a section of the slider\n   * - Dragging the slider with the mouse\n   * - Touching a section of the slider.\n   * - Dragging the slider with touch\n   * - Using the text field to update the value either by typing or incrementing\n   * - Using the left or right arrow keys to increment/decrement the value.\n   *\n   * The callback for this function is as follows:\n   *\n   * ```js\n   * onChange(value, event);\n   * ```\n   *\n   * where the event can either be:\n   * - a touch start event\n   * - a touch move event\n   * - a touch end event\n   * - a mouse down event\n   * - a mouse move event\n   * - a mouse up event\n   * - a key up event\n   * - a key down event\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * This is only called when the user is dragging the slider with either\n   * the mouse or touch. Probably not really useful. It just includes the\n   * new drag percentage while the `onChange` does not.\n   *\n   * The callback for this function is defined as:\n   *\n   * ```js\n   * onDragChange(dragPercentage, value, (touchMove || mouseMove) event);\n   * ```\n   */\n  onDragChange: PropTypes.func,\n\n  /**\n   * An optional function to call when the slider's container has\n   * the mousedown event.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the slider's container has\n   * the touchstart event.\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * An optional icon or letter to place to the left of the slider.\n   * if you want to use a non-font icon or a letter, use the `md-slider-ind`\n   * className on your element.\n   */\n  leftIcon: PropTypes.element,\n\n  /**\n   * An optional icon or letter to place to the right of the slider.\n   * if you want to use a non-font icon or a letter, use the `md-slider-ind`\n   * className on your element.\n   *\n   * > NOTE: This can not be used if the `editable` prop is true.\n   */\n  rightIcon: PropTypes.element,\n\n  /**\n   * An optional label to display above the slider. If this prop\n   * is set, then an `id` must also be given.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The incremental amount when the user hits left or right with the\n   * keyboard arrows, or the user hits the up or down buttons in the\n   * editable number text field. This number must be a number between\n   * 0 and 1 or a whole number above 1.\n   */\n  step: function step(props, propName, component) {\n    for (var _len4 = arguments.length, others = Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n      others[_key4 - 3] = arguments[_key4];\n    }\n\n    var _PropTypes$number3;\n\n    var err = (_PropTypes$number3 = PropTypes.number).isRequired.apply(_PropTypes$number3, [props, propName, component].concat(others));\n    if (!err) {\n      var step = props[propName];\n      if (step <= 0) {\n        err = new Error('The \\'' + propName + '\\' for the \\'' + component + '\\' must be a number greater than 0. The ' + ('current value is \\'' + step + '\\'.'));\n      } else {\n        var valueDefined = typeof props.value !== 'undefined';\n        var defaultDefined = typeof props.defaultValue !== 'undefined';\n        var value = props.value;\n        if (!valueDefined) {\n          value = defaultDefined ? props.defaultValue : props.min;\n        }\n\n        var name = void 0;\n        if (!isWithinStep(value, step)) {\n          if (valueDefined) {\n            name = 'value';\n          } else if (defaultDefined) {\n            name = 'defaultValue';\n          } else {\n            name = 'min';\n          }\n        }\n\n        if (name) {\n          err = new Error('The \\'' + name + '\\' prop on \\'' + component + '\\' should be a number divisible by the ' + ('\\'' + propName + '\\' prop. The current value is \\'' + props[name] + '\\' and the \\'' + propName + '\\' ') + ('is \\'' + step + '\\'.'));\n        }\n      }\n    }\n\n    return err;\n  },\n\n  /**\n   * Boolean if the Slider should be editable. This will place a number text field\n   * to the right of the slider. If this prop is set to `true`, the `rightIcon`\n   * prop can not be set.\n   */\n  editable: function editable(props, propName, component) {\n    for (var _len5 = arguments.length, others = Array(_len5 > 3 ? _len5 - 3 : 0), _key5 = 3; _key5 < _len5; _key5++) {\n      others[_key5 - 3] = arguments[_key5];\n    }\n\n    var _PropTypes$bool;\n\n    if (typeof props[propName] === 'undefined') {\n      return null;\n    }\n\n    var err = (_PropTypes$bool = PropTypes.bool).isRequired.apply(_PropTypes$bool, [props, propName, component].concat(others));\n    if (!err && typeof props.rightIcon !== 'undefined') {\n      err = new Error('The \\'' + component + '\\' is unable to be \\'editable\\' and include a \\'rightIcon\\'.');\n    }\n\n    return err;\n  },\n\n  /**\n   * The width for the number text field when the Slider is editable.\n   */\n  inputWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * Boolean if the slider should be discrete. This will update the slider to include a\n   * _balloon_ with the current value inside. It will also not allow the `Slider` to be\n   * editable.\n   */\n  discrete: function discrete(props, propName, component) {\n    for (var _len6 = arguments.length, others = Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {\n      others[_key6 - 3] = arguments[_key6];\n    }\n\n    if (typeof props[propName] === 'undefined') {\n      return null;\n    }\n\n    var err = PropTypes.bool.apply(PropTypes, [props, propName, component].concat(others));\n    if (!err && typeof props.editable !== 'undefined') {\n      err = new Error('The \\'' + component + '\\' cannot be \\'discrete\\' and \\'editable\\'. Please choose one.');\n    }\n\n    return err;\n  },\n\n  /**\n   * The width of each tick for a discrete slider with ticks. This can either be a number\n   * which gets converted to `px`, or a valid CSS unit.\n   */\n  tickWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * This is number divisible by the total number of values included in the Slider. Every\n   * value that is divisible by this number will include a tick mark. It is common recommended\n   * to have this equal to the `step` prop.\n   *\n   * This prop is completely optional.\n   */\n  discreteTicks: function discreteTicks(props, propName, component) {\n    for (var _len7 = arguments.length, others = Array(_len7 > 3 ? _len7 - 3 : 0), _key7 = 3; _key7 < _len7; _key7++) {\n      others[_key7 - 3] = arguments[_key7];\n    }\n\n    if (typeof props[propName] === 'undefined') {\n      return null;\n    }\n\n    var err = PropTypes.number.apply(PropTypes, [props, propName, component].concat(others));\n    if (!err) {\n      var min = props.min,\n          max = props.max,\n          step = props.step;\n\n      var range = Math.abs(max - min);\n\n      if (range / props[propName] % 1 !== 0) {\n        err = new Error('The \\'' + propName + '\\' must be a number divisible by the range set by the \\'min\\' and ' + ('\\'max\\' props. The current range is \\'' + range + '\\' by including the min: \\'' + min + '\\' and ') + ('max: \\'' + max + '\\' values. The current value of \\'' + propName + '\\' is \\'' + props[propName] + '\\'.'));\n      } else if (props[propName] % step !== 0) {\n        err = new Error('The \\'step\\' prop must be a number divisible by the \\'' + propName + '\\'. It is common to have ' + ('them as the same value. The current \\'step\\' is \\'' + step + '\\' and the \\'' + propName + '\\' is \\'' + props[propName] + '\\'.'));\n      }\n    }\n\n    return err;\n  },\n\n  /**\n   * The transition time for a discrete Slider's keyboard focus ink. This should match the\n   * `md-slider-discrete-ink-transition-time` value in your SCSS. This is used because\n   * the ink is only visible temporarily for a discrete slider when keyboard focusing.\n   */\n  discreteInkTransitionTime: PropTypes.number.isRequired,\n\n  /**\n   * The precision that the value should be rounded to when the Slider is updated. This\n   * needs to be a whole number greater than or equal to 0.\n   */\n  valuePrecision: function valuePrecision(props, propName, component) {\n    for (var _len8 = arguments.length, others = Array(_len8 > 3 ? _len8 - 3 : 0), _key8 = 3; _key8 < _len8; _key8++) {\n      others[_key8 - 3] = arguments[_key8];\n    }\n\n    var _PropTypes$number4;\n\n    var err = (_PropTypes$number4 = PropTypes.number).isRequired.apply(_PropTypes$number4, [props, propName, component].concat(others));\n    if (!err) {\n      var precision = props[propName];\n\n      if (precision % 1 !== 0 || precision < 0) {\n        err = new Error('The \\'' + propName + '\\' must be a positive whole number or 0 on the \\'' + component + '\\'. ' + ('The current \\'' + propName + '\\' is \\'' + precision + '\\''));\n      }\n    }\n\n    return err;\n  },\n\n  stepPrecision: deprecated(PropTypes.number, 'Use `step` and `valuePrecision` instead')\n};\nSlider.defaultProps = {\n  min: 0,\n  max: 100,\n  step: 1,\n  inputWidth: 40,\n  tickWidth: 6,\n  discreteInkTransitionTime: 300,\n  valuePrecision: 0\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._isTextField = function (target) {\n    return _this2._field && _this2._field.contains(target);\n  };\n\n  this._updatePosition = function (e, normalize) {\n    var x = (e.changedTouches ? e.changedTouches[0] : e).clientX;\n    var scale = _this2.state.scale;\n    var _props3 = _this2.props,\n        onChange = _props3.onChange,\n        onDragChange = _props3.onDragChange,\n        min = _props3.min,\n        max = _props3.max,\n        step = _props3.step;\n\n    var _calculateValueDistan = calculateValueDistance(x, _this2._track.offsetWidth, _this2._track.getBoundingClientRect().left, scale, step, min, max, normalize),\n        value = _calculateValueDistan.value,\n        distance = _calculateValueDistan.distance;\n\n    var isNewValue = getField(_this2.props, _this2.state, 'value') !== value;\n    if (onChange && isNewValue) {\n      onChange(value, e);\n    }\n\n    if (!normalize && onDragChange && (isNewValue || _this2.state.distance !== distance)) {\n      onDragChange(distance, value, e);\n    }\n\n    var state = {\n      active: true,\n      distance: distance,\n      manualIncrement: false,\n      dragging: !normalize,\n      thumbLeft: _this2._calcLeft(distance),\n      trackFillWidth: distance + '%'\n    };\n\n    if (e.type === 'touchend' || e.type === 'mousedown') {\n      state.maskInked = false;\n    }\n\n    if (typeof _this2.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    _this2.setState(state);\n  };\n\n  this._handleDragStart = function (e) {\n    if (e.type === 'mousedown' && _this2.props.onMouseDown) {\n      _this2.props.onMouseDown(e);\n    } else if (e.type === 'touchstart' && _this2.props.onTouchStart) {\n      _this2.props.onTouchStart(e);\n    }\n\n    if (_this2.props.disabled || e.type === 'mousedown' && !isValidClick(e, 'mousedown') || _this2._isInTextField(e)) {\n      return;\n    }\n\n    var classList = e.target.classList;\n\n    var isDiscreteValue = classList.contains('md-slider-discrete-value');\n    if (classList.contains('md-slider-thumb') || isDiscreteValue) {\n      // Prevents text highlighting while dragging.\n      if (e.type.match(/mouse/)) {\n        e.preventDefault();\n      }\n      _this2.setState({ dragging: true, active: true, manualIncrement: false, maskInked: false });\n    } else if (!_this2._isTextField(e.target) && _this2._isValidClassList(classList)) {\n      _this2._updatePosition(e, true);\n    }\n  };\n\n  this._setNode = function (node) {\n    _this2._node = findDOMNode(node);\n  };\n\n  this._setTrack = function (track) {\n    _this2._track = findDOMNode(track);\n  };\n\n  this._setField = function (field) {\n    _this2._field = findDOMNode(field);\n    _this2._calcTrackWidth(_this2.props);\n  };\n\n  this._handleDragMove = function (e) {\n    if (_this2.props.disabled || !_this2.state.dragging) {\n      return;\n    }\n\n    // Stops the text highlighting while dragging\n    if (e.type.match(/mouse/)) {\n      e.preventDefault();\n    }\n\n    _this2._updatePosition(e, false);\n  };\n\n  this._handleDragEnd = function (e) {\n    if (!_this2.state.dragging || _this2.props.disabled || e.type === 'mouseup' && !isValidClick(e)) {\n      return;\n    }\n\n    _this2._updatePosition(e, true);\n  };\n\n  this._blurOnOutsideClick = function (e) {\n    if (_this2.state.dragging && !_this2.state.manualIncrement || _this2.props.disabled) {\n      return;\n    }\n\n    if (!_this2._node.contains(e.target)) {\n      _this2.setState({ active: false, maskInked: false });\n    }\n  };\n\n  this._handleIncrement = function (incrementedValue, e, disableTransition) {\n    var _props4 = _this2.props,\n        onChange = _props4.onChange,\n        min = _props4.min,\n        max = _props4.max,\n        discrete = _props4.discrete;\n\n\n    var value = Math.max(min, Math.min(max, incrementedValue));\n    var distance = _this2._calcDistance(value, min, max);\n\n    if (onChange) {\n      onChange(value, e);\n    }\n\n    var state = {\n      distance: distance,\n      manualIncrement: true,\n      thumbLeft: _this2._calcLeft(distance),\n      trackFillWidth: distance + '%',\n      dragging: Math.abs(_this2.state.distance - distance) < 2 && disableTransition\n    };\n\n    if (typeof _this2.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    if (e.type === 'keydown' && !discrete) {\n      state.maskInked = true;\n    }\n\n    _this2.setState(state);\n  };\n\n  this._handleTextFieldChange = function (newValue, e) {\n    _this2._handleIncrement(newValue, e, false);\n  };\n\n  this._handleKeyDown = function (e) {\n    var key = e.which || e.keyCode;\n    var _props5 = _this2.props,\n        min = _props5.min,\n        max = _props5.max,\n        step = _props5.step,\n        disabled = _props5.disabled;\n\n    if (disabled) {\n      return;\n    }\n\n    if (key === TAB) {\n      _this2.setState({ active: false, maskInked: false });\n      return;\n    } else if (key !== LEFT && key !== RIGHT) {\n      return;\n    }\n\n    var nextValue = getField(_this2.props, _this2.state, 'value');\n    nextValue = Math.max(min, Math.min((key === LEFT ? -step : step) + nextValue, max));\n\n    _this2._handleIncrement(nextValue, e, true);\n  };\n\n  this._handleKeyUp = function (e) {\n    if ((e.which || e.keyCode) !== TAB) {\n      return;\n    }\n\n    if (_this2.props.discrete) {\n      _this2._animateDiscreteInk();\n    }\n\n    _this2.setState({ maskInked: true });\n  };\n\n  this._handleFocus = function () {\n    _this2.setState({ active: true });\n  };\n\n  this._calcTrackWidth = function (props) {\n    var editable = props.editable,\n        leftIcon = props.leftIcon,\n        rightIcon = props.rightIcon,\n        inputWidth = props.inputWidth,\n        label = props.label;\n\n\n    if (!label) {\n      _this2.setState({ trackWidth: null });\n      return;\n    }\n\n    var trackWidth = null;\n    if (!leftIcon && !rightIcon && !editable) {\n      trackWidth = '100%';\n    } else if (_this2._field && editable && !leftIcon) {\n      var cs = window.getComputedStyle(_this2._field);\n      var pl = parseInt(cs.getPropertyValue('padding-left'), 10) || 0;\n      var ml = parseInt(cs.getPropertyValue('margin-left'), 10) || 0;\n\n      trackWidth = pl + ml + inputWidth;\n    }\n\n    if (trackWidth !== _this2.state.trackWidth) {\n      _this2.setState({ trackWidth: trackWidth });\n    }\n  };\n\n  this._animateDiscreteInk = function () {\n    var wait = _this2.props.discreteInkTransitionTime;\n    if (_this2._inkTimeout) {\n      clearTimeout(_this2._inkTimeout);\n    }\n\n    _this2._inkTimeout = setTimeout(function () {\n      _this2.setState({ leaving: true, maskInked: false });\n\n      _this2._inkTimeout = setTimeout(function () {\n        _this2._inkTimeout = null;\n        _this2.setState({ leaving: false });\n      }, wait);\n    }, wait);\n  };\n\n  this._focusThumb = function () {\n    if (_this2._focusTimeout) {\n      clearTimeout(_this2._focusTimeout);\n    }\n\n    _this2._focusTimeout = setTimeout(function () {\n      _this2._focusTimeout = null;\n      if (!_this2._thumb) {\n        _this2._thumb = _this2._node.querySelector('.md-slider-thumb');\n      }\n\n      _this2._thumb.focus();\n    }, 100);\n  };\n};\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}