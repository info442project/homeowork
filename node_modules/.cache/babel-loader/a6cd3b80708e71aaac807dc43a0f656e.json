{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React, { PureComponent, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport Button from '../Buttons/Button';\nimport Drawer from '../Drawers/Drawer';\nimport List from '../Lists/List';\nimport Toolbar from '../Toolbars/Toolbar';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nvar DrawerTypes = Drawer.DrawerTypes;\nimport { isTemporary, isPersistent, isPermanent, isMini } from '../Drawers/isType';\nimport JumpToContentLink from './JumpToContentLink';\nimport CloseButton from './CloseButton';\nimport MiniListItem from './MiniListItem';\n\nfunction getNonMiniType(type) {\n  var pMini = DrawerTypes.PERSISTENT_MINI,\n      tMini = DrawerTypes.TEMPORARY_MINI;\n\n  if ([pMini, tMini].indexOf(type) === -1) {\n    return type;\n  }\n\n  return pMini === type ? DrawerTypes.PERSISTENT : DrawerTypes.TEMPORARY;\n}\n\nfunction toMiniListItem(item, index) {\n  if (isValidElement(item)) {\n    return item;\n  }\n\n  var divider = item.divider,\n      subheader = item.subheader,\n      key = item.key,\n      itemProps = _objectWithoutProperties(item, ['divider', 'subheader', 'key']);\n\n  if (divider || subheader) {\n    return null;\n  }\n\n  return React.createElement(MiniListItem, _extends({\n    key: key || index\n  }, itemProps));\n}\n/**\n * The `NavigationDrawer` is used when you want a full layout configuration. It is a combination\n * of the `Toolbar` component and the `Drawer` component. Any props that are not specifically\n * listed below will be provided to the `Drawer` component. So if there are props on the `Drawer`\n * that are not listed here, they will be passed along.\n *\n * The main benefit of using this component is that it will manage adding respective offset\n * classes automatically for you to the content and the drawer. It will also manage using\n * a mini drawer type for you.\n */\n\n\nvar NavigationDrawer = function (_PureComponent) {\n  _inherits(NavigationDrawer, _PureComponent);\n  /**\n   * Determines the current media and returns an object containing matches for `mobile`, `tablet`, `desktop`,\n   * and the current drawer type. This expects a `props` object of the drawer.\n   *\n   * If this is used server side, it will default to only matching mobile.\n   *\n   * @param {Object=} props - The current drawer's prop shape to extract the mobile, tablet, and desktop type/min\n   *    widths. This defaults to the drawer's default props.\n   * @return {Object} an object containing the media matches and the current type to use for the drawer.\n   */\n\n\n  NavigationDrawer.getCurrentMedia = function getCurrentMedia() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NavigationDrawer.defaultProps;\n\n    var mobileType = props.mobileDrawerType,\n        tabletType = props.tabletDrawerType,\n        desktopType = props.desktopDrawerType,\n        constantType = props.constantDrawerType,\n        others = _objectWithoutProperties(props, ['mobileDrawerType', 'tabletDrawerType', 'desktopDrawerType', 'constantDrawerType']);\n\n    return Drawer.getCurrentMedia(_extends({\n      mobileType: mobileType,\n      tabletType: tabletType,\n      desktopType: desktopType,\n      constantType: constantType\n    }, others));\n  };\n\n  function NavigationDrawer(props) {\n    _classCallCheck(this, NavigationDrawer);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var defaultMedia = props.defaultMedia,\n        defaultVisible = props.defaultVisible,\n        initialDrawerType = props.initialDrawerType;\n    _this.state = {\n      mobile: initialDrawerType || defaultMedia === 'mobile',\n      tablet: initialDrawerType || defaultMedia === 'tablet',\n      desktop: initialDrawerType || defaultMedia === 'desktop'\n    };\n\n    if (typeof props.drawerType === 'undefined') {\n      _this.state.drawerType = props[(initialDrawerType || defaultMedia) + 'DrawerType'];\n    }\n\n    var type = getField(props, _this.state, 'drawerType');\n\n    if (typeof props.visible === 'undefined') {\n      // The logic for determining the visibility is handled by the created mini drawer\n      _this.state.visible = isPermanent(type);\n\n      if (!_this.state.visible && typeof defaultVisible !== 'undefined') {\n        _this.state.visible = defaultVisible;\n      }\n    }\n\n    return _this;\n  }\n\n  NavigationDrawer.prototype.getChildContext = function getChildContext() {\n    var _props = this.props,\n        persistentIcon = _props.persistentIcon,\n        id = _props.contentId,\n        label = _props.jumpLabel,\n        persistentIconChildren = _props.persistentIconChildren,\n        persistentIconClassName = _props.persistentIconClassName,\n        closeIconChildren = _props.closeIconChildren,\n        closeIconClassName = _props.closeIconClassName;\n    return {\n      id: id,\n      label: label,\n      closeIcon: getDeprecatedIcon(closeIconClassName || persistentIconClassName, closeIconChildren || persistentIconChildren, persistentIcon),\n      onCloseClick: this._toggleVisibility,\n      renderNode: this.context.renderNode\n    };\n  };\n\n  NavigationDrawer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var visible = getField(this.props, this.state, 'visible');\n    var nVisible = getField(nextProps, this.state, 'visible');\n\n    if (visible !== nVisible) {\n      this._animate(nextProps);\n    }\n  };\n\n  NavigationDrawer.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  };\n\n  NavigationDrawer.prototype.render = function render() {\n    var _props2 = this.props,\n        id = _props2.id,\n        style = _props2.style,\n        className = _props2.className,\n        toolbarStyle = _props2.toolbarStyle,\n        toolbarClassName = _props2.toolbarClassName,\n        drawerStyle = _props2.drawerStyle,\n        drawerClassName = _props2.drawerClassName,\n        contentStyle = _props2.contentStyle,\n        contentClassName = _props2.contentClassName,\n        Content = _props2.contentComponent,\n        miniDrawerStyle = _props2.miniDrawerStyle,\n        miniDrawerClassName = _props2.miniDrawerClassName,\n        miniNavStyle = _props2.miniNavStyle,\n        miniNavClassName = _props2.miniNavClassName,\n        miniDrawerId = _props2.miniDrawerId,\n        miniNavItemsId = _props2.miniNavItemsId,\n        navItems = _props2.navItems,\n        children = _props2.children,\n        drawerId = _props2.drawerId,\n        drawerTitle = _props2.drawerTitle,\n        drawerZDepth = _props2.drawerZDepth,\n        drawerChildren = _props2.drawerChildren,\n        drawerHeaderChildren = _props2.drawerHeaderChildren,\n        drawerTransitionDuration = _props2.drawerTransitionDuration,\n        toolbarId = _props2.toolbarId,\n        toolbarTitle = _props2.toolbarTitle,\n        toolbarTitleMenu = _props2.toolbarTitleMenu,\n        toolbarTitleStyle = _props2.toolbarTitleStyle,\n        toolbarTitleClassName = _props2.toolbarTitleClassName,\n        toolbarActions = _props2.toolbarActions,\n        toolbarProminent = _props2.toolbarProminent,\n        toolbarProminentTitle = _props2.toolbarProminentTitle,\n        toolbarThemeType = _props2.toolbarThemeType,\n        toolbarSingleColor = _props2.toolbarSingleColor,\n        toolbarChildren = _props2.toolbarChildren,\n        toolbarZDepth = _props2.toolbarZDepth,\n        mobileType = _props2.mobileDrawerType,\n        tabletType = _props2.tabletDrawerType,\n        desktopType = _props2.desktopDrawerType,\n        transitionName = _props2.transitionName,\n        transitionEnterTimeout = _props2.transitionEnterTimeout,\n        transitionLeaveTimeout = _props2.transitionLeaveTimeout,\n        extractMini = _props2.extractMini,\n        miniDrawerHeader = _props2.miniDrawerHeader,\n        miniDrawerChildren = _props2.miniDrawerChildren,\n        footer = _props2.footer,\n        includeDrawerHeader = _props2.includeDrawerHeader,\n        contentId = _props2.contentId,\n        contentProps = _props2.contentProps,\n        constantDrawerType = _props2.constantDrawerType,\n        temporaryIcon = _props2.temporaryIcon,\n        temporaryIconChildren = _props2.temporaryIconChildren,\n        temporaryIconClassName = _props2.temporaryIconClassName,\n        menuIconChildren = _props2.menuIconChildren,\n        menuIconClassName = _props2.menuIconClassName,\n        propDrawerType = _props2.drawerType,\n        propDrawerHeader = _props2.drawerHeader,\n        propRenderNode = _props2.renderNode,\n        jumpLabel = _props2.jumpLabel,\n        persistentIcon = _props2.persistentIcon,\n        onDrawerChange = _props2.onDrawerChange,\n        closeIconChildren = _props2.closeIconChildren,\n        closeIconClassName = _props2.closeIconClassName,\n        persistentIconChildren = _props2.persistentIconChildren,\n        persistentIconClassName = _props2.persistentIconClassName,\n        props = _objectWithoutProperties(_props2, ['id', 'style', 'className', 'toolbarStyle', 'toolbarClassName', 'drawerStyle', 'drawerClassName', 'contentStyle', 'contentClassName', 'contentComponent', 'miniDrawerStyle', 'miniDrawerClassName', 'miniNavStyle', 'miniNavClassName', 'miniDrawerId', 'miniNavItemsId', 'navItems', 'children', 'drawerId', 'drawerTitle', 'drawerZDepth', 'drawerChildren', 'drawerHeaderChildren', 'drawerTransitionDuration', 'toolbarId', 'toolbarTitle', 'toolbarTitleMenu', 'toolbarTitleStyle', 'toolbarTitleClassName', 'toolbarActions', 'toolbarProminent', 'toolbarProminentTitle', 'toolbarThemeType', 'toolbarSingleColor', 'toolbarChildren', 'toolbarZDepth', 'mobileDrawerType', 'tabletDrawerType', 'desktopDrawerType', 'transitionName', 'transitionEnterTimeout', 'transitionLeaveTimeout', 'extractMini', 'miniDrawerHeader', 'miniDrawerChildren', 'footer', 'includeDrawerHeader', 'contentId', 'contentProps', 'constantDrawerType', 'temporaryIcon', 'temporaryIconChildren', 'temporaryIconClassName', 'menuIconChildren', 'menuIconClassName', 'drawerType', 'drawerHeader', 'renderNode', 'jumpLabel', 'persistentIcon', 'onDrawerChange', 'closeIconChildren', 'closeIconClassName', 'persistentIconChildren', 'persistentIconClassName']);\n\n    var drawerHeader = this.props.drawerHeader;\n    var _state = this.state,\n        desktop = _state.desktop,\n        tablet = _state.tablet,\n        contentActive = _state.contentActive;\n    var drawerType = getField(this.props, this.state, 'drawerType');\n    var visible = getField(this.props, this.state, 'visible');\n    var renderNode = getField(this.props, this.context, 'renderNode');\n    var mini = isMini(drawerType);\n    var temporary = isTemporary(drawerType);\n    var persistent = isPersistent(drawerType);\n    var clipped = drawerType === DrawerTypes.CLIPPED;\n    var floating = drawerType === DrawerTypes.FLOATING;\n    var offset = desktop || tablet ? !temporary && visible : visible;\n    var toolbarRelative = cn({\n      'md-toolbar-relative': !toolbarProminent && !toolbarProminentTitle,\n      'md-toolbar-relative--prominent': toolbarProminent || toolbarProminentTitle\n    });\n    var nav = void 0;\n\n    if (temporary || persistent) {\n      nav = React.createElement(Button, {\n        key: 'nav',\n        onClick: this._toggleVisibility,\n        disabled: persistent && visible,\n        icon: true,\n        iconEl: getDeprecatedIcon(menuIconClassName || temporaryIconClassName, menuIconChildren || temporaryIconChildren, temporaryIcon)\n      });\n    }\n\n    var closeButton = void 0;\n\n    if (persistent) {\n      closeButton = React.createElement(CloseButton, null);\n    }\n\n    if (!drawerHeader && includeDrawerHeader) {\n      var _cn;\n\n      drawerHeader = React.createElement(Toolbar, {\n        key: 'drawer-header',\n        title: drawerTitle,\n        actions: visible && nav ? closeButton : null,\n        className: cn('md-divider-border md-divider-border--bottom', (_cn = {}, _cn[toolbarRelative] = clipped || floating, _cn))\n      }, drawerHeaderChildren, React.createElement(JumpToContentLink, null));\n    }\n\n    var miniDrawer = void 0;\n\n    if (mini) {\n      var miniList = void 0;\n\n      if (extractMini) {\n        miniList = React.createElement(List, {\n          id: miniNavItemsId,\n          key: 'mini-nav-items',\n          style: miniNavStyle,\n          className: cn(miniNavClassName, toolbarRelative)\n        }, navItems.map(toMiniListItem));\n      }\n\n      miniDrawer = React.createElement(Drawer, {\n        id: miniDrawerId,\n        key: 'mini-drawer',\n        type: drawerType,\n        renderNode: renderNode,\n        'aria-hidden': visible,\n        style: miniDrawerStyle,\n        className: miniDrawerClassName\n      }, miniDrawerHeader, miniList, miniDrawerChildren);\n    }\n\n    var desktopOffset = !clipped && !floating && offset;\n    return React.createElement('div', {\n      id: id,\n      style: style,\n      className: className\n    }, React.createElement(Toolbar, {\n      id: toolbarId,\n      colored: toolbarThemeType === 'colored',\n      themed: toolbarThemeType === 'themed',\n      singleColor: toolbarSingleColor,\n      style: toolbarStyle,\n      className: cn({\n        'md-toolbar--over-drawer': clipped || floating || mini && !visible\n      }, toolbarClassName),\n      title: toolbarTitle,\n      titleMenu: toolbarTitleMenu,\n      prominent: toolbarProminent,\n      prominentTitle: toolbarProminentTitle,\n      titleStyle: toolbarTitleStyle,\n      titleClassName: cn({\n        'md-title--drawer-active': contentActive,\n        'md-transition--deceleration': offset && visible,\n        'md-transition--acceleration': offset && !visible,\n        'md-title--permanent-offset': desktopOffset && isPermanent(drawerType),\n        'md-title--persistent-offset': desktopOffset && persistent\n      }, toolbarTitleClassName),\n      nav: nav,\n      actions: toolbarActions,\n      fixed: true,\n      zDepth: toolbarZDepth\n    }, toolbarChildren), miniDrawer, React.createElement(Drawer, _extends({}, props, {\n      id: drawerId,\n      constantType: constantDrawerType,\n      transitionDuration: drawerTransitionDuration,\n      header: drawerHeader,\n      style: drawerStyle,\n      className: drawerClassName,\n      navItems: navItems,\n      renderNode: renderNode,\n      mobileType: mobileType,\n      tabletType: tabletType,\n      desktopType: desktopType,\n      type: getNonMiniType(drawerType),\n      visible: visible,\n      zDepth: drawerZDepth,\n      onVisibilityChange: this._handleVisibility,\n      onMediaTypeChange: this._handleTypeChange\n    }), drawerChildren), React.createElement(CSSTransitionGroup, _extends({}, contentProps, {\n      id: contentId,\n      component: Content,\n      transitionName: transitionName,\n      transitionEnter: !!transitionEnterTimeout,\n      transitionEnterTimeout: transitionEnterTimeout,\n      transitionLeave: !!transitionLeaveTimeout,\n      transitionLeaveTimeout: transitionLeaveTimeout,\n      tabIndex: -1,\n      style: contentStyle,\n      className: cn('md-navigation-drawer-content', {\n        'md-navigation-drawer-content--active': contentActive,\n        'md-navigation-drawer-content--inactive': !visible,\n        'md-navigation-drawer-content--prominent-offset': toolbarProminent || toolbarProminentTitle,\n        'md-transition--deceleration': visible,\n        'md-transition--acceleration': !visible,\n        'md-drawer-relative': offset,\n        'md-drawer-relative--mini': mini && (!visible || temporary)\n      }, toolbarRelative, contentClassName)\n    }), children), footer);\n  };\n\n  return NavigationDrawer;\n}(PureComponent);\n\nNavigationDrawer.DrawerType = {\n  // deprecated\n\n  /* eslint-disable no-console */\n  _warned: false,\n  _msg: 'Invalid use of `NavigationDrawer.DrawerType.{{TYPE}}`. The `NavigationDrawer.DrawerType` ' + 'has been deprecated and will be removed in the next major release. Please use the ' + '`NavigationDrawer.DrawerTypes.{{TYPE}}` instead.',\n\n  get FULL_HEIGHT() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'FULL_HEIGHT'));\n    }\n\n    this._warned = true;\n    return DrawerTypes.FULL_HEIGHT;\n  },\n\n  get CLIPPED() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'CLIPPED'));\n    }\n\n    this._warned = true;\n    return DrawerTypes.CLIPPED;\n  },\n\n  get FLOATING() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'FLOATING'));\n    }\n\n    this._warned = true;\n    return DrawerTypes.FLOATING;\n  },\n\n  get PERSISTENT() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT'));\n    }\n\n    this._warned = true;\n    return DrawerTypes.PERSISTENT;\n  },\n\n  get PERSISTENT_MINI() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT_MINI'));\n    }\n\n    this._warned = true;\n    return DrawerTypes.PERSISTENT_MINI;\n  },\n\n  get TEMPORARY() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY'));\n    }\n\n    this._warned = true;\n    return DrawerTypes.TEMPORARY;\n  },\n\n  get TEMPORARY_MINI() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY_MINI'));\n    }\n\n    this._warned = true;\n    return DrawerTypes.TEMPORARY_MINI;\n  }\n\n};\nNavigationDrawer.DrawerTypes = DrawerTypes;\nNavigationDrawer.propTypes = {\n  /**\n   * An optional id to provide to the entire div wrapper.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the drawer. This is generally a good idea to provide if\n   * there are any `navItems` defined.\n   *\n   * @see {@link #navItemsId}\n   * @see {@link #miniDrawerId}\n   */\n  drawerId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the navItems list. If this is omitted and the `drawerId` prop is\n   * defined, it will be defaulted to `${drawerId}-nav-items`.\n   *\n   * @see {@link #drawerId}\n   * @see {@link Drawer#navItemsId}\n   */\n  navItemsId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to apply to mini drawer that gets created when the `drawerType` is set to\n   * one of the mini types.\n   *\n   * @see {@link #drawerId}\n   * @see {@link #miniNavItemsId}\n   */\n  miniDrawerId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to apply to mini drawer's navigation list that gets created when the `drawerType`\n   * is set to one of the mini types.\n   *\n   * @see {@link #navItemsId}\n   * @see {@link #miniDrawerId}\n   */\n  miniNavItemsId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the main toolbar.\n   */\n  toolbarId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An id to give the main content. A hidden link is created in the main drawer's header that links to the main\n   * content. This is used for keyboard only users to jump the navigation and jump straight to the content.\n   *\n   * If you provide your own `drawerHeader`, it is suggested to include the link yourself.\n   */\n  contentId: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n\n  /**\n   * An optional style to apply to the surrounding container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the surrounding container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the main toolbar.\n   */\n  toolbarStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the toolbar.\n   */\n  toolbarClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the main toolbar's title.\n   */\n  toolbarTitleStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the main toolbar's title.\n   */\n  toolbarTitleClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the drawer.\n   */\n  drawerStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the drawer.\n   */\n  drawerClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the `List` surrounding the `navItems`.\n   */\n  navStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the `List` surrounding the `navItems`.\n   */\n  navClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the mini drawer that gets created when the `drawerType` is set\n   * to one of the mini types.\n   *\n   * @see {@link #miniDrawerClassName}\n   * @see {@link #miniNavStyle}\n   * @see {@link #miniNavClassName}\n   */\n  miniDrawerStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the mini drawer that gets created when the `drawerType` is set\n   * to one of the mini types.\n   *\n   * @see {@link #miniDrawerStyle}\n   * @see {@link #miniNavStyle}\n   * @see {@link #miniNavClassName}\n   */\n  miniDrawerClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the mini drawer's navigation list when the `drawerType` is set\n   * to one of the mini types.\n   *\n   * @see {@link #miniDrawerStyle}\n   * @see {@link #miniDrawerClassName}\n   * @see {@link #miniNavClassName}\n   */\n  miniNavStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the mini drawer's navigation list when the `drawerType` is set\n   * to one of the mini types.\n   *\n   * @see {@link #miniDrawerStyle}\n   * @see {@link #miniDrawerClassName}\n   * @see {@link #miniNavStyle}\n   */\n  miniNavClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the content. This is the container surrounding whatever\n   * `children` are passed in.\n   */\n  contentStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the content. This is the container surrounding whatever\n   * `children` are passed in.\n   */\n  contentClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the overlay.\n   */\n  overlayStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the overlay.\n   */\n  overlayClassName: PropTypes.string,\n\n  /**\n   * The children to display in the main content.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Boolean if the `drawerHeader` component should be built if the `drawerHeader` prop is not\n   * passed in.\n   */\n  includeDrawerHeader: PropTypes.bool,\n\n  /**\n   * An optional header to display in the drawer. This will normally be the `Toolbar` component\n   * or any other type of header. You can either use this prop with the `CloseButton` component\n   * when displaying a persistent drawer, or use the `drawerTitle` and `drawerHeaderChildren` prop\n   * to build a toolbar.\n   */\n  drawerHeader: PropTypes.node,\n\n  /**\n   * An optional title to use for the drawer's header toolbar. If the `drawerHeader` prop is defined,\n   * this is invalid.\n   */\n  drawerTitle: invalidIf(PropTypes.node, 'drawerHeader'),\n\n  /**\n   * An optional zDepth to apply to the drawer. If this is omitted, the value will be set as follows:\n   * - floating || inline = 1\n   * - temporary = 5\n   * - all others = 1\n   *\n   * @see {@link Papers/Paper#zDepth}\n   */\n  drawerZDepth: PropTypes.number,\n\n  /**\n   * Any additional children to display after the `drawerHeader` and `navItems` list in the drawer.\n   */\n  drawerChildren: PropTypes.node,\n\n  /**\n   * Any additional children to display in the drawer's header `Toolbar`. If the `drawerHeader` prop is defined,\n   * this is invalid.\n   */\n  drawerHeaderChildren: invalidIf(PropTypes.node, 'drawerHeader'),\n\n  /**\n   * The position for the drawer to be displayed.\n   */\n  position: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * An optional list of elements or props to use to build a navigational list in the drawer.\n   * When the item is an object of props, it will build a `ListItem` component unless a key of\n   * `divider` or `subheader` is set to true. It will then create the Divider or Subheader component\n   * with any other remaining keys.\n   */\n  navItems: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.element, PropTypes.shape({\n    divider: PropTypes.bool,\n    subheader: PropTypes.bool,\n    primaryText: PropTypes.node\n  })])),\n\n  /**\n   * The drawer type to use for mobile devices.\n   */\n  mobileDrawerType: PropTypes.oneOf([DrawerTypes.TEMPORARY, DrawerTypes.TEMPORARY_MINI]).isRequired,\n\n  /**\n   * The drawer type to use for tablets.\n   */\n  tabletDrawerType: PropTypes.oneOf([DrawerTypes.FULL_HEIGHT, DrawerTypes.CLIPPED, DrawerTypes.FLOATING, DrawerTypes.PERSISTENT, DrawerTypes.PERSISTENT_MINI, DrawerTypes.TEMPORARY, DrawerTypes.TEMPORARY_MINI]).isRequired,\n\n  /**\n   * The drawer type to use for desktop displays.\n   */\n  desktopDrawerType: PropTypes.oneOf([DrawerTypes.FULL_HEIGHT, DrawerTypes.CLIPPED, DrawerTypes.FLOATING, DrawerTypes.PERSISTENT, DrawerTypes.PERSISTENT_MINI, DrawerTypes.TEMPORARY, DrawerTypes.TEMPORARY_MINI]).isRequired,\n\n  /**\n   * An optional drawer type to enforce on all screen sizes. If the drawer type is not\n   * `temporary`, you are required to define the `onMediaTypeChange` prop to handle switching\n   * to temporary when the media matches a mobile device.\n   * ```\n   */\n  drawerType: PropTypes.oneOf([DrawerTypes.FULL_HEIGHT, DrawerTypes.CLIPPED, DrawerTypes.FLOATING, DrawerTypes.PERSISTENT, DrawerTypes.PERSISTENT_MINI, DrawerTypes.TEMPORARY, DrawerTypes.TEMPORARY_MINI]),\n\n  /**\n   * The default media match for the drawer. This will be what is displayed on first render.\n   * The component will adjust itself to the current media after it has mounted, but this\n   * is mostly used for server side rendering.\n   */\n  defaultMedia: PropTypes.oneOf(['mobile', 'tablet', 'desktop']),\n\n  /**\n   * The min width to use for a mobile media query. This prop should match the `md-mobile-min-width`\n   * variable.\n   *\n   * The media query for a mobile device will be:\n   *\n   * ```js\n   * window.matchMedia(\n   *   `screen and (min-width: ${mobileMinWidth}px) and (max-width: ${tabletMinWidth - 1}px`\n   * ).matches;\n   * ```\n   */\n  mobileMinWidth: PropTypes.number.isRequired,\n\n  /**\n   * The min width to use for a tablet media query. This prop should match the `md-tablet-min-width`\n   * variable.\n   *\n   * The media query for a tablet device will be:\n   *\n   * ```js\n   * window.matchMedia(\n   *   `screen and (min-width: ${tabletMinWidth}px) and (max-width: ${desktopWidth - 1}px`\n   * ).matches;\n   * ```\n   */\n  tabletMinWidth: PropTypes.number.isRequired,\n\n  /**\n   * The min width to use for a desktop media query. This prop should match the `md-desktop-min-width`\n   * variable.\n   *\n   * The media query for a tablet device will be:\n   *\n   * ```js\n   * window.matchMedia(`screen and (min-width: ${tabletMinWidth}px)`).matches;\n   * ```\n   */\n  desktopMinWidth: PropTypes.number.isRequired,\n\n  /**\n   * An optional function to call when the type of the drawer changes because of the\n   * new media queries. The callback will include the newly selected drawer type\n   * and an object containing the media matches of `mobile`, `tablet`, and `desktop`.\n   *\n   * ```js\n   * this.props.onMediaTypeChange(NavigationDrawer.DrawerTypes.TEMPORARY, {\n   *   mobile: true,\n   *   tablet: false,\n   *   desktop: false,\n   * });\n   * ```\n   */\n  onMediaTypeChange: PropTypes.func,\n\n  /**\n   * Boolean if the temporary or persistent drawers are visible by default.\n   */\n  defaultVisible: PropTypes.bool,\n\n  /**\n   * Boolean if the temporary or persistent drawers are visible. If this is defined,\n   * it will make the component controlled and require the `onVisibilityChange` prop\n   * to be defined.\n   */\n  visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n  /**\n   * An optional function to call when the visibility of the drawer changes. The callback\n   * will include the new visibility.\n   *\n   * ```js\n   * onVisibilityChange(false);\n   * ```\n   */\n  onVisibilityChange: PropTypes.func,\n\n  /**\n   * A boolean if the mini drawer's list should be generated from the `navItems` prop. When building\n   * the list, it will extract the `leftIcon` or `leftAvatar` from the `navItem` and then create a\n   * mini `ListItem` containing only that icon or image. Any other event listeners will also be applied.\n   *\n   *\n   * @see {@link #miniDrawerHeader}\n   * @see {@link #miniDrawerChildren}\n   */\n  extractMini: PropTypes.bool,\n\n  /**\n   * An optional header to display in the mini drawer. This will be displayed above the optional\n   * mini nav list that get generated if the `extractMini` prop is `true` and the `miniDrawerChildren`.\n   *\n   * @see {@link #extractMini}\n   */\n  miniDrawerHeader: PropTypes.node,\n\n  /**\n   * Any additional children to display in the mini drawer. This will be displayed after the `miniDrawerHeader`\n   * and the optional mini nav list that gets generated if the `extractMini` prop is `true`.\n   *\n   * @see {@link #extractMini}\n   */\n  miniDrawerChildren: PropTypes.node,\n\n  /**\n   * Boolean if the drawer should automatically close after a nav item has been clicked for `temporary` drawers.\n   */\n  autoclose: PropTypes.bool,\n\n  /**\n   * An optional title to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\n   * may be defined, not both.\n   */\n  toolbarTitle: invalidIf(PropTypes.node, 'toolbarTitleMenu'),\n\n  /**\n   * An optional select field menu to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\n   * may be defined, not both.\n   */\n  toolbarTitleMenu: PropTypes.element,\n\n  /**\n   * The theme style for the main toolbar.\n   *\n   * @see {@link Toolbars/Toolbar}\n   */\n  toolbarThemeType: PropTypes.oneOf(['default', 'colored', 'themed']).isRequired,\n\n  /**\n   * Boolean if the toolbar's nav, actions, and title should share the same color.\n   */\n  toolbarSingleColor: PropTypes.bool,\n\n  /**\n   * A boolean if the toolbar should be prominent.\n   */\n  toolbarProminent: PropTypes.bool,\n\n  /**\n   * A boolean if the toolbar's title should be prominent.\n   */\n  toolbarProminentTitle: PropTypes.bool,\n\n  /**\n   * A list of elements or a single element to display to the right of the\n   * toolbar's nav, title, and children.\n   *\n   * @see {@link Toolbars/Toolbar#actions}\n   */\n  toolbarActions: Toolbar.propTypes.actions,\n\n  /**\n   * Any children to display in the toolbar. This will be displayed between the optional title and\n   * actions.\n   */\n  toolbarChildren: Toolbar.propTypes.children,\n\n  /**\n   * An optional zDepth to apply to the toolbar.\n   *\n   * @see {@link Toolbars/Toolbar#zDepth}\n   */\n  toolbarZDepth: PropTypes.number,\n\n  /**\n   * The component to render the content in.\n   */\n  contentComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * An optional footer display after the main content.\n   */\n  footer: PropTypes.node,\n\n  /**\n   * The icon to use to render the button that will toggle the visibility of the\n   * navigation drawer for `temporary` and `persistent` drawers. This is normally a\n   * hamburger menu.\n   */\n  temporaryIcon: PropTypes.element,\n\n  /**\n   * The icon to use to render the button that appears on a persistent drawer's open\n   * header. This is used to create the `CloseButton` for drawers. When a persistent\n   * drawer is closed, the `temporaryIcon` will be used to create a button to open the drawer.\n   *\n   * If the `drawerHeader` prop is defined, you will have to either include the `CloseButton`\n   * in your header manually, or create your own controlled button to close the drawer.\n   */\n  persistentIcon: PropTypes.element,\n\n  /**\n   * The transition name to use when the page's content changes. If you want to disable\n   * transitions, set both the `transitionEnterTimeout` and `transitionLeaveTimeout` props\n   * to a false-ish value. (`null`, `undefined`, or `0`).\n   */\n  transitionName: PropTypes.string.isRequired,\n\n  /**\n   * The transition enter timeout when the page's content changes. If you want to disable\n   * the enter transition, set this to a false-ish value (`null`, `undefined`, or `0`).\n   */\n  transitionEnterTimeout: PropTypes.number,\n\n  /**\n   * The transition leave timeout when the page's content changes. If you want to disable\n   * the leave transition, set this to a false-ish value (`null`, `undefined`, or `0`).\n   */\n  transitionLeaveTimeout: PropTypes.number,\n\n  /**\n   * The transition duration for the drawer when sliding in and out of view.\n   */\n  drawerTransitionDuration: PropTypes.number.isRequired,\n\n  /**\n   * Any additional props to provide to the main content. This will be applied before any of the generated props,\n   * so this should not include `style`, `className`, or `component`.\n   */\n  contentProps: PropTypes.object,\n\n  /**\n   * The label to use for a keyboard accessibility link that jumps all the navigation and allows a user to focus\n   * the main content. This is created in the drawer's header.\n   */\n  jumpLabel: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n   * to the drawer. The overlay that appears for temporary type drawers will still appear in the\n   * separate subtree.\n   *\n   * @see {@link Helpers/Portal}\n   */\n  portal: PropTypes.bool,\n\n  /**\n   * An optional DOM Node to render the drawer into. The default is to render as\n   * the first child in the `body`.\n   *\n   * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n   * since the `Portal` component will not be used.\n   */\n  renderNode: PropTypes.object,\n\n  /**\n   * Boolean if the drawer should be rendered as the last child instead of the first child\n   * in the `renderNode` or `body`.\n   *\n   * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n   * since the `Portal` component will not be used.\n   */\n  lastChild: PropTypes.bool,\n\n  /**\n   * Boolean if the `drawerType` should remain constant across all media. This is really only valid\n   * if the `drawerType` is one of the temporary types.\n   */\n  constantDrawerType: PropTypes.bool,\n  menuIconChildren: deprecated(PropTypes.node, 'Use `temporaryIcon` instead'),\n  menuIconClassName: deprecated(PropTypes.string, 'Use `temporaryIcon` instead'),\n  closeIconChildren: deprecated(PropTypes.node, 'Use `persistentIcon` instead'),\n  closeIconClassName: deprecated(PropTypes.string, 'Use `persistentIcon` instead'),\n  temporaryIconChildren: deprecated(PropTypes.node, 'Use the `temporaryIcon` instead'),\n  temporaryIconClassName: deprecated(PropTypes.string, 'Use the `temporaryIcon` instead'),\n  persistentIconChildren: deprecated(PropTypes.node, 'Use the `persistentIcon` instead'),\n  persistentIconClassName: deprecated(PropTypes.string, 'Use the `persistentIcon` prop instead'),\n  onDrawerChange: deprecated(PropTypes.func, 'Use `onVisibilityChange` or `onMediaTypeChange` instead'),\n  onVisibilityToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\n  contentTransitionName: deprecated(PropTypes.string, 'Use `transitionName` instead'),\n  contentTransitionEnterTimeout: deprecated(PropTypes.number, 'Use `transtionEnterTimeout` instead'),\n  contentTransitionLeaveTimeout: deprecated(PropTypes.number, 'Use `transtionLeaveTimeout` instead'),\n  initialDrawerType: deprecated(PropTypes.oneOf(['mobile', 'tablet', 'desktop']), 'Use `defaultMedia` instead')\n};\nNavigationDrawer.contextTypes = {\n  renderNode: PropTypes.object\n};\nNavigationDrawer.childContextTypes = {\n  closeIcon: PropTypes.element,\n  onCloseClick: PropTypes.func,\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  label: PropTypes.node.isRequired,\n  renderNode: PropTypes.object\n};\nNavigationDrawer.defaultProps = {\n  autoclose: Drawer.defaultProps.autoclose,\n  contentId: 'main-content',\n  // Defaults to false since it keeps the state of the drawerType in sync and makes the Drawer\n  // controlled. On initial mount without any defaultMedia updates, it would always be considered\n  // temporary\n  constantDrawerType: false,\n  jumpLabel: 'Jump to content',\n  extractMini: true,\n  position: Drawer.defaultProps.position,\n  defaultMedia: Drawer.defaultProps.defaultMedia,\n  mobileDrawerType: Drawer.defaultProps.mobileType,\n  tabletDrawerType: Drawer.defaultProps.tabletType,\n  desktopDrawerType: Drawer.defaultProps.desktopType,\n  mobileMinWidth: Drawer.defaultProps.mobileMinWidth,\n  tabletMinWidth: Drawer.defaultProps.tabletMinWidth,\n  desktopMinWidth: Drawer.defaultProps.desktopMinWidth,\n  includeDrawerHeader: true,\n  contentComponent: 'main',\n  temporaryIcon: React.createElement(FontIcon, null, 'menu'),\n  toolbarThemeType: 'colored',\n  persistentIcon: React.createElement(FontIcon, null, 'arrow_back'),\n  transitionName: 'md-cross-fade',\n  transitionEnterTimeout: 300,\n  drawerTransitionDuration: Drawer.defaultProps.transitionDuration\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._animate = function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this2.props;\n    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this2.state;\n\n    if (isTemporary(getField(props, state, 'drawerType'))) {\n      return;\n    }\n\n    if (_this2._timeout) {\n      clearTimeout(_this2._timeout);\n    }\n\n    _this2._timeout = setTimeout(function () {\n      _this2.setState({\n        contentActive: false\n      });\n    }, props.drawerTransitionDuration);\n\n    _this2.setState({\n      contentActive: true\n    });\n  };\n\n  this._toggleVisibility = function (e) {\n    var _props3 = _this2.props,\n        onVisibilityToggle = _props3.onVisibilityToggle,\n        onVisibilityChange = _props3.onVisibilityChange,\n        onDrawerChange = _props3.onDrawerChange;\n    var visible = !getField(_this2.props, _this2.state, 'visible');\n    var callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\n\n    if (callback) {\n      callback(visible, e);\n    }\n\n    if (typeof _this2.props.visible === 'undefined') {\n      _this2.setState({\n        visible: visible\n      });\n\n      _this2._animate(_this2.props);\n    }\n  };\n\n  this._handleVisibility = function (visible) {\n    var _props4 = _this2.props,\n        onVisibilityToggle = _props4.onVisibilityToggle,\n        onVisibilityChange = _props4.onVisibilityChange,\n        onDrawerChange = _props4.onDrawerChange;\n    var callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\n\n    if (callback) {\n      callback(visible);\n    }\n\n    if (typeof _this2.props.visible === 'undefined') {\n      _this2.setState({\n        visible: visible\n      });\n\n      _this2._animate(_this2.props);\n    }\n  };\n\n  this._handleTypeChange = function (drawerType, mediaState) {\n    var onMediaTypeChange = _this2.props.onMediaTypeChange;\n    var state = mediaState;\n\n    if (onMediaTypeChange) {\n      onMediaTypeChange(drawerType, mediaState);\n    }\n\n    if (typeof _this2.props.drawerType === 'undefined') {\n      state = _extends({}, mediaState, {\n        drawerType: drawerType\n      });\n    }\n\n    _this2.setState(state);\n  };\n};\n\nexport default NavigationDrawer;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/NavigationDrawers/NavigationDrawer.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_objectWithoutProperties","obj","keys","indexOf","React","PureComponent","isValidElement","PropTypes","cn","CSSTransitionGroup","deprecated","isRequiredForA11y","getField","controlled","invalidIf","Button","Drawer","List","Toolbar","FontIcon","getDeprecatedIcon","DrawerTypes","isTemporary","isPersistent","isPermanent","isMini","JumpToContentLink","CloseButton","MiniListItem","getNonMiniType","type","pMini","PERSISTENT_MINI","tMini","TEMPORARY_MINI","PERSISTENT","TEMPORARY","toMiniListItem","item","index","divider","subheader","itemProps","createElement","NavigationDrawer","_PureComponent","getCurrentMedia","props","undefined","defaultProps","mobileType","mobileDrawerType","tabletType","tabletDrawerType","desktopType","desktopDrawerType","constantType","constantDrawerType","others","_this","_initialiseProps","defaultMedia","defaultVisible","initialDrawerType","state","mobile","tablet","desktop","drawerType","visible","getChildContext","_props","persistentIcon","id","contentId","label","jumpLabel","persistentIconChildren","persistentIconClassName","closeIconChildren","closeIconClassName","closeIcon","onCloseClick","_toggleVisibility","renderNode","context","componentWillReceiveProps","nextProps","nVisible","_animate","componentWillUnmount","_timeout","clearTimeout","render","_props2","style","className","toolbarStyle","toolbarClassName","drawerStyle","drawerClassName","contentStyle","contentClassName","Content","contentComponent","miniDrawerStyle","miniDrawerClassName","miniNavStyle","miniNavClassName","miniDrawerId","miniNavItemsId","navItems","children","drawerId","drawerTitle","drawerZDepth","drawerChildren","drawerHeaderChildren","drawerTransitionDuration","toolbarId","toolbarTitle","toolbarTitleMenu","toolbarTitleStyle","toolbarTitleClassName","toolbarActions","toolbarProminent","toolbarProminentTitle","toolbarThemeType","toolbarSingleColor","toolbarChildren","toolbarZDepth","transitionName","transitionEnterTimeout","transitionLeaveTimeout","extractMini","miniDrawerHeader","miniDrawerChildren","footer","includeDrawerHeader","contentProps","temporaryIcon","temporaryIconChildren","temporaryIconClassName","menuIconChildren","menuIconClassName","propDrawerType","propDrawerHeader","drawerHeader","propRenderNode","onDrawerChange","_state","contentActive","mini","temporary","persistent","clipped","CLIPPED","floating","FLOATING","offset","toolbarRelative","nav","onClick","disabled","icon","iconEl","closeButton","_cn","title","actions","miniDrawer","miniList","map","desktopOffset","colored","themed","singleColor","titleMenu","prominent","prominentTitle","titleStyle","titleClassName","fixed","zDepth","transitionDuration","header","onVisibilityChange","_handleVisibility","onMediaTypeChange","_handleTypeChange","component","transitionEnter","transitionLeave","tabIndex","DrawerType","_warned","_msg","FULL_HEIGHT","console","error","replace","propTypes","oneOfType","number","string","navItemsId","object","navStyle","navClassName","overlayStyle","overlayClassName","node","bool","position","oneOf","isRequired","arrayOf","element","shape","primaryText","mobileMinWidth","tabletMinWidth","desktopMinWidth","func","autoclose","portal","lastChild","onVisibilityToggle","contentTransitionName","contentTransitionEnterTimeout","contentTransitionLeaveTimeout","contextTypes","childContextTypes","_this2","setTimeout","setState","e","_props3","callback","_props4","mediaState"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React, { PureComponent, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport Button from '../Buttons/Button';\nimport Drawer from '../Drawers/Drawer';\nimport List from '../Lists/List';\nimport Toolbar from '../Toolbars/Toolbar';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\n\nvar DrawerTypes = Drawer.DrawerTypes;\n\nimport { isTemporary, isPersistent, isPermanent, isMini } from '../Drawers/isType';\nimport JumpToContentLink from './JumpToContentLink';\nimport CloseButton from './CloseButton';\nimport MiniListItem from './MiniListItem';\n\nfunction getNonMiniType(type) {\n  var pMini = DrawerTypes.PERSISTENT_MINI,\n      tMini = DrawerTypes.TEMPORARY_MINI;\n\n  if ([pMini, tMini].indexOf(type) === -1) {\n    return type;\n  }\n\n  return pMini === type ? DrawerTypes.PERSISTENT : DrawerTypes.TEMPORARY;\n}\n\nfunction toMiniListItem(item, index) {\n  if (isValidElement(item)) {\n    return item;\n  }\n\n  var divider = item.divider,\n      subheader = item.subheader,\n      key = item.key,\n      itemProps = _objectWithoutProperties(item, ['divider', 'subheader', 'key']);\n\n  if (divider || subheader) {\n    return null;\n  }\n\n  return React.createElement(MiniListItem, _extends({ key: key || index }, itemProps));\n}\n\n/**\n * The `NavigationDrawer` is used when you want a full layout configuration. It is a combination\n * of the `Toolbar` component and the `Drawer` component. Any props that are not specifically\n * listed below will be provided to the `Drawer` component. So if there are props on the `Drawer`\n * that are not listed here, they will be passed along.\n *\n * The main benefit of using this component is that it will manage adding respective offset\n * classes automatically for you to the content and the drawer. It will also manage using\n * a mini drawer type for you.\n */\n\nvar NavigationDrawer = function (_PureComponent) {\n  _inherits(NavigationDrawer, _PureComponent);\n\n  /**\n   * Determines the current media and returns an object containing matches for `mobile`, `tablet`, `desktop`,\n   * and the current drawer type. This expects a `props` object of the drawer.\n   *\n   * If this is used server side, it will default to only matching mobile.\n   *\n   * @param {Object=} props - The current drawer's prop shape to extract the mobile, tablet, and desktop type/min\n   *    widths. This defaults to the drawer's default props.\n   * @return {Object} an object containing the media matches and the current type to use for the drawer.\n   */\n  NavigationDrawer.getCurrentMedia = function getCurrentMedia() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NavigationDrawer.defaultProps;\n\n    var mobileType = props.mobileDrawerType,\n        tabletType = props.tabletDrawerType,\n        desktopType = props.desktopDrawerType,\n        constantType = props.constantDrawerType,\n        others = _objectWithoutProperties(props, ['mobileDrawerType', 'tabletDrawerType', 'desktopDrawerType', 'constantDrawerType']);\n\n    return Drawer.getCurrentMedia(_extends({ mobileType: mobileType, tabletType: tabletType, desktopType: desktopType, constantType: constantType }, others));\n  };\n\n  function NavigationDrawer(props) {\n    _classCallCheck(this, NavigationDrawer);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var defaultMedia = props.defaultMedia,\n        defaultVisible = props.defaultVisible,\n        initialDrawerType = props.initialDrawerType;\n\n\n    _this.state = {\n      mobile: initialDrawerType || defaultMedia === 'mobile',\n      tablet: initialDrawerType || defaultMedia === 'tablet',\n      desktop: initialDrawerType || defaultMedia === 'desktop'\n    };\n\n    if (typeof props.drawerType === 'undefined') {\n      _this.state.drawerType = props[(initialDrawerType || defaultMedia) + 'DrawerType'];\n    }\n\n    var type = getField(props, _this.state, 'drawerType');\n\n    if (typeof props.visible === 'undefined') {\n      // The logic for determining the visibility is handled by the created mini drawer\n      _this.state.visible = isPermanent(type);\n      if (!_this.state.visible && typeof defaultVisible !== 'undefined') {\n        _this.state.visible = defaultVisible;\n      }\n    }\n    return _this;\n  }\n\n  NavigationDrawer.prototype.getChildContext = function getChildContext() {\n    var _props = this.props,\n        persistentIcon = _props.persistentIcon,\n        id = _props.contentId,\n        label = _props.jumpLabel,\n        persistentIconChildren = _props.persistentIconChildren,\n        persistentIconClassName = _props.persistentIconClassName,\n        closeIconChildren = _props.closeIconChildren,\n        closeIconClassName = _props.closeIconClassName;\n\n\n    return {\n      id: id,\n      label: label,\n      closeIcon: getDeprecatedIcon(closeIconClassName || persistentIconClassName, closeIconChildren || persistentIconChildren, persistentIcon),\n      onCloseClick: this._toggleVisibility,\n      renderNode: this.context.renderNode\n    };\n  };\n\n  NavigationDrawer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var visible = getField(this.props, this.state, 'visible');\n    var nVisible = getField(nextProps, this.state, 'visible');\n    if (visible !== nVisible) {\n      this._animate(nextProps);\n    }\n  };\n\n  NavigationDrawer.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  };\n\n  NavigationDrawer.prototype.render = function render() {\n    var _props2 = this.props,\n        id = _props2.id,\n        style = _props2.style,\n        className = _props2.className,\n        toolbarStyle = _props2.toolbarStyle,\n        toolbarClassName = _props2.toolbarClassName,\n        drawerStyle = _props2.drawerStyle,\n        drawerClassName = _props2.drawerClassName,\n        contentStyle = _props2.contentStyle,\n        contentClassName = _props2.contentClassName,\n        Content = _props2.contentComponent,\n        miniDrawerStyle = _props2.miniDrawerStyle,\n        miniDrawerClassName = _props2.miniDrawerClassName,\n        miniNavStyle = _props2.miniNavStyle,\n        miniNavClassName = _props2.miniNavClassName,\n        miniDrawerId = _props2.miniDrawerId,\n        miniNavItemsId = _props2.miniNavItemsId,\n        navItems = _props2.navItems,\n        children = _props2.children,\n        drawerId = _props2.drawerId,\n        drawerTitle = _props2.drawerTitle,\n        drawerZDepth = _props2.drawerZDepth,\n        drawerChildren = _props2.drawerChildren,\n        drawerHeaderChildren = _props2.drawerHeaderChildren,\n        drawerTransitionDuration = _props2.drawerTransitionDuration,\n        toolbarId = _props2.toolbarId,\n        toolbarTitle = _props2.toolbarTitle,\n        toolbarTitleMenu = _props2.toolbarTitleMenu,\n        toolbarTitleStyle = _props2.toolbarTitleStyle,\n        toolbarTitleClassName = _props2.toolbarTitleClassName,\n        toolbarActions = _props2.toolbarActions,\n        toolbarProminent = _props2.toolbarProminent,\n        toolbarProminentTitle = _props2.toolbarProminentTitle,\n        toolbarThemeType = _props2.toolbarThemeType,\n        toolbarSingleColor = _props2.toolbarSingleColor,\n        toolbarChildren = _props2.toolbarChildren,\n        toolbarZDepth = _props2.toolbarZDepth,\n        mobileType = _props2.mobileDrawerType,\n        tabletType = _props2.tabletDrawerType,\n        desktopType = _props2.desktopDrawerType,\n        transitionName = _props2.transitionName,\n        transitionEnterTimeout = _props2.transitionEnterTimeout,\n        transitionLeaveTimeout = _props2.transitionLeaveTimeout,\n        extractMini = _props2.extractMini,\n        miniDrawerHeader = _props2.miniDrawerHeader,\n        miniDrawerChildren = _props2.miniDrawerChildren,\n        footer = _props2.footer,\n        includeDrawerHeader = _props2.includeDrawerHeader,\n        contentId = _props2.contentId,\n        contentProps = _props2.contentProps,\n        constantDrawerType = _props2.constantDrawerType,\n        temporaryIcon = _props2.temporaryIcon,\n        temporaryIconChildren = _props2.temporaryIconChildren,\n        temporaryIconClassName = _props2.temporaryIconClassName,\n        menuIconChildren = _props2.menuIconChildren,\n        menuIconClassName = _props2.menuIconClassName,\n        propDrawerType = _props2.drawerType,\n        propDrawerHeader = _props2.drawerHeader,\n        propRenderNode = _props2.renderNode,\n        jumpLabel = _props2.jumpLabel,\n        persistentIcon = _props2.persistentIcon,\n        onDrawerChange = _props2.onDrawerChange,\n        closeIconChildren = _props2.closeIconChildren,\n        closeIconClassName = _props2.closeIconClassName,\n        persistentIconChildren = _props2.persistentIconChildren,\n        persistentIconClassName = _props2.persistentIconClassName,\n        props = _objectWithoutProperties(_props2, ['id', 'style', 'className', 'toolbarStyle', 'toolbarClassName', 'drawerStyle', 'drawerClassName', 'contentStyle', 'contentClassName', 'contentComponent', 'miniDrawerStyle', 'miniDrawerClassName', 'miniNavStyle', 'miniNavClassName', 'miniDrawerId', 'miniNavItemsId', 'navItems', 'children', 'drawerId', 'drawerTitle', 'drawerZDepth', 'drawerChildren', 'drawerHeaderChildren', 'drawerTransitionDuration', 'toolbarId', 'toolbarTitle', 'toolbarTitleMenu', 'toolbarTitleStyle', 'toolbarTitleClassName', 'toolbarActions', 'toolbarProminent', 'toolbarProminentTitle', 'toolbarThemeType', 'toolbarSingleColor', 'toolbarChildren', 'toolbarZDepth', 'mobileDrawerType', 'tabletDrawerType', 'desktopDrawerType', 'transitionName', 'transitionEnterTimeout', 'transitionLeaveTimeout', 'extractMini', 'miniDrawerHeader', 'miniDrawerChildren', 'footer', 'includeDrawerHeader', 'contentId', 'contentProps', 'constantDrawerType', 'temporaryIcon', 'temporaryIconChildren', 'temporaryIconClassName', 'menuIconChildren', 'menuIconClassName', 'drawerType', 'drawerHeader', 'renderNode', 'jumpLabel', 'persistentIcon', 'onDrawerChange', 'closeIconChildren', 'closeIconClassName', 'persistentIconChildren', 'persistentIconClassName']);\n\n    var drawerHeader = this.props.drawerHeader;\n    var _state = this.state,\n        desktop = _state.desktop,\n        tablet = _state.tablet,\n        contentActive = _state.contentActive;\n\n\n    var drawerType = getField(this.props, this.state, 'drawerType');\n    var visible = getField(this.props, this.state, 'visible');\n    var renderNode = getField(this.props, this.context, 'renderNode');\n    var mini = isMini(drawerType);\n    var temporary = isTemporary(drawerType);\n    var persistent = isPersistent(drawerType);\n    var clipped = drawerType === DrawerTypes.CLIPPED;\n    var floating = drawerType === DrawerTypes.FLOATING;\n\n    var offset = desktop || tablet ? !temporary && visible : visible;\n    var toolbarRelative = cn({\n      'md-toolbar-relative': !toolbarProminent && !toolbarProminentTitle,\n      'md-toolbar-relative--prominent': toolbarProminent || toolbarProminentTitle\n    });\n\n    var nav = void 0;\n    if (temporary || persistent) {\n      nav = React.createElement(Button, {\n        key: 'nav',\n        onClick: this._toggleVisibility,\n        disabled: persistent && visible,\n        icon: true,\n        iconEl: getDeprecatedIcon(menuIconClassName || temporaryIconClassName, menuIconChildren || temporaryIconChildren, temporaryIcon)\n      });\n    }\n\n    var closeButton = void 0;\n    if (persistent) {\n      closeButton = React.createElement(CloseButton, null);\n    }\n\n    if (!drawerHeader && includeDrawerHeader) {\n      var _cn;\n\n      drawerHeader = React.createElement(\n        Toolbar,\n        {\n          key: 'drawer-header',\n          title: drawerTitle,\n          actions: visible && nav ? closeButton : null,\n          className: cn('md-divider-border md-divider-border--bottom', (_cn = {}, _cn[toolbarRelative] = clipped || floating, _cn))\n        },\n        drawerHeaderChildren,\n        React.createElement(JumpToContentLink, null)\n      );\n    }\n    var miniDrawer = void 0;\n    if (mini) {\n      var miniList = void 0;\n      if (extractMini) {\n        miniList = React.createElement(\n          List,\n          {\n            id: miniNavItemsId,\n            key: 'mini-nav-items',\n            style: miniNavStyle,\n            className: cn(miniNavClassName, toolbarRelative)\n          },\n          navItems.map(toMiniListItem)\n        );\n      }\n\n      miniDrawer = React.createElement(\n        Drawer,\n        {\n          id: miniDrawerId,\n          key: 'mini-drawer',\n          type: drawerType,\n          renderNode: renderNode,\n          'aria-hidden': visible,\n          style: miniDrawerStyle,\n          className: miniDrawerClassName\n        },\n        miniDrawerHeader,\n        miniList,\n        miniDrawerChildren\n      );\n    }\n\n    var desktopOffset = !clipped && !floating && offset;\n\n    return React.createElement(\n      'div',\n      { id: id, style: style, className: className },\n      React.createElement(\n        Toolbar,\n        {\n          id: toolbarId,\n          colored: toolbarThemeType === 'colored',\n          themed: toolbarThemeType === 'themed',\n          singleColor: toolbarSingleColor,\n          style: toolbarStyle,\n          className: cn({\n            'md-toolbar--over-drawer': clipped || floating || mini && !visible\n          }, toolbarClassName),\n          title: toolbarTitle,\n          titleMenu: toolbarTitleMenu,\n          prominent: toolbarProminent,\n          prominentTitle: toolbarProminentTitle,\n          titleStyle: toolbarTitleStyle,\n          titleClassName: cn({\n            'md-title--drawer-active': contentActive,\n            'md-transition--deceleration': offset && visible,\n            'md-transition--acceleration': offset && !visible,\n            'md-title--permanent-offset': desktopOffset && isPermanent(drawerType),\n            'md-title--persistent-offset': desktopOffset && persistent\n          }, toolbarTitleClassName),\n          nav: nav,\n          actions: toolbarActions,\n          fixed: true,\n          zDepth: toolbarZDepth\n        },\n        toolbarChildren\n      ),\n      miniDrawer,\n      React.createElement(\n        Drawer,\n        _extends({}, props, {\n          id: drawerId,\n          constantType: constantDrawerType,\n          transitionDuration: drawerTransitionDuration,\n          header: drawerHeader,\n          style: drawerStyle,\n          className: drawerClassName,\n          navItems: navItems,\n          renderNode: renderNode,\n          mobileType: mobileType,\n          tabletType: tabletType,\n          desktopType: desktopType,\n          type: getNonMiniType(drawerType),\n          visible: visible,\n          zDepth: drawerZDepth,\n          onVisibilityChange: this._handleVisibility,\n          onMediaTypeChange: this._handleTypeChange\n        }),\n        drawerChildren\n      ),\n      React.createElement(\n        CSSTransitionGroup,\n        _extends({}, contentProps, {\n          id: contentId,\n          component: Content,\n          transitionName: transitionName,\n          transitionEnter: !!transitionEnterTimeout,\n          transitionEnterTimeout: transitionEnterTimeout,\n          transitionLeave: !!transitionLeaveTimeout,\n          transitionLeaveTimeout: transitionLeaveTimeout,\n          tabIndex: -1,\n          style: contentStyle,\n          className: cn('md-navigation-drawer-content', {\n            'md-navigation-drawer-content--active': contentActive,\n            'md-navigation-drawer-content--inactive': !visible,\n            'md-navigation-drawer-content--prominent-offset': toolbarProminent || toolbarProminentTitle,\n            'md-transition--deceleration': visible,\n            'md-transition--acceleration': !visible,\n            'md-drawer-relative': offset,\n            'md-drawer-relative--mini': mini && (!visible || temporary)\n          }, toolbarRelative, contentClassName)\n        }),\n        children\n      ),\n      footer\n    );\n  };\n\n  return NavigationDrawer;\n}(PureComponent);\n\nNavigationDrawer.DrawerType = { // deprecated\n  /* eslint-disable no-console */\n  _warned: false,\n  _msg: 'Invalid use of `NavigationDrawer.DrawerType.{{TYPE}}`. The `NavigationDrawer.DrawerType` ' + 'has been deprecated and will be removed in the next major release. Please use the ' + '`NavigationDrawer.DrawerTypes.{{TYPE}}` instead.',\n\n  get FULL_HEIGHT() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'FULL_HEIGHT'));\n    }\n    this._warned = true;\n\n    return DrawerTypes.FULL_HEIGHT;\n  },\n\n  get CLIPPED() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'CLIPPED'));\n    }\n    this._warned = true;\n\n    return DrawerTypes.CLIPPED;\n  },\n\n  get FLOATING() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'FLOATING'));\n    }\n    this._warned = true;\n\n    return DrawerTypes.FLOATING;\n  },\n\n  get PERSISTENT() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT'));\n    }\n    this._warned = true;\n\n    return DrawerTypes.PERSISTENT;\n  },\n\n  get PERSISTENT_MINI() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT_MINI'));\n    }\n    this._warned = true;\n\n    return DrawerTypes.PERSISTENT_MINI;\n  },\n\n  get TEMPORARY() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY'));\n    }\n    this._warned = true;\n\n    return DrawerTypes.TEMPORARY;\n  },\n\n  get TEMPORARY_MINI() {\n    if (!this._warned) {\n      console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY_MINI'));\n    }\n    this._warned = true;\n\n    return DrawerTypes.TEMPORARY_MINI;\n  }\n};\nNavigationDrawer.DrawerTypes = DrawerTypes;\nNavigationDrawer.propTypes = {\n  /**\n   * An optional id to provide to the entire div wrapper.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the drawer. This is generally a good idea to provide if\n   * there are any `navItems` defined.\n   *\n   * @see {@link #navItemsId}\n   * @see {@link #miniDrawerId}\n   */\n  drawerId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the navItems list. If this is omitted and the `drawerId` prop is\n   * defined, it will be defaulted to `${drawerId}-nav-items`.\n   *\n   * @see {@link #drawerId}\n   * @see {@link Drawer#navItemsId}\n   */\n  navItemsId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to apply to mini drawer that gets created when the `drawerType` is set to\n   * one of the mini types.\n   *\n   * @see {@link #drawerId}\n   * @see {@link #miniNavItemsId}\n   */\n  miniDrawerId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to apply to mini drawer's navigation list that gets created when the `drawerType`\n   * is set to one of the mini types.\n   *\n   * @see {@link #navItemsId}\n   * @see {@link #miniDrawerId}\n   */\n  miniNavItemsId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the main toolbar.\n   */\n  toolbarId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An id to give the main content. A hidden link is created in the main drawer's header that links to the main\n   * content. This is used for keyboard only users to jump the navigation and jump straight to the content.\n   *\n   * If you provide your own `drawerHeader`, it is suggested to include the link yourself.\n   */\n  contentId: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n\n  /**\n   * An optional style to apply to the surrounding container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the surrounding container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the main toolbar.\n   */\n  toolbarStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the toolbar.\n   */\n  toolbarClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the main toolbar's title.\n   */\n  toolbarTitleStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the main toolbar's title.\n   */\n  toolbarTitleClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the drawer.\n   */\n  drawerStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the drawer.\n   */\n  drawerClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the `List` surrounding the `navItems`.\n   */\n  navStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the `List` surrounding the `navItems`.\n   */\n  navClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the mini drawer that gets created when the `drawerType` is set\n   * to one of the mini types.\n   *\n   * @see {@link #miniDrawerClassName}\n   * @see {@link #miniNavStyle}\n   * @see {@link #miniNavClassName}\n   */\n  miniDrawerStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the mini drawer that gets created when the `drawerType` is set\n   * to one of the mini types.\n   *\n   * @see {@link #miniDrawerStyle}\n   * @see {@link #miniNavStyle}\n   * @see {@link #miniNavClassName}\n   */\n  miniDrawerClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the mini drawer's navigation list when the `drawerType` is set\n   * to one of the mini types.\n   *\n   * @see {@link #miniDrawerStyle}\n   * @see {@link #miniDrawerClassName}\n   * @see {@link #miniNavClassName}\n   */\n  miniNavStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the mini drawer's navigation list when the `drawerType` is set\n   * to one of the mini types.\n   *\n   * @see {@link #miniDrawerStyle}\n   * @see {@link #miniDrawerClassName}\n   * @see {@link #miniNavStyle}\n   */\n  miniNavClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the content. This is the container surrounding whatever\n   * `children` are passed in.\n   */\n  contentStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the content. This is the container surrounding whatever\n   * `children` are passed in.\n   */\n  contentClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the overlay.\n   */\n  overlayStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the overlay.\n   */\n  overlayClassName: PropTypes.string,\n\n  /**\n   * The children to display in the main content.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Boolean if the `drawerHeader` component should be built if the `drawerHeader` prop is not\n   * passed in.\n   */\n  includeDrawerHeader: PropTypes.bool,\n\n  /**\n   * An optional header to display in the drawer. This will normally be the `Toolbar` component\n   * or any other type of header. You can either use this prop with the `CloseButton` component\n   * when displaying a persistent drawer, or use the `drawerTitle` and `drawerHeaderChildren` prop\n   * to build a toolbar.\n   */\n  drawerHeader: PropTypes.node,\n\n  /**\n   * An optional title to use for the drawer's header toolbar. If the `drawerHeader` prop is defined,\n   * this is invalid.\n   */\n  drawerTitle: invalidIf(PropTypes.node, 'drawerHeader'),\n\n  /**\n   * An optional zDepth to apply to the drawer. If this is omitted, the value will be set as follows:\n   * - floating || inline = 1\n   * - temporary = 5\n   * - all others = 1\n   *\n   * @see {@link Papers/Paper#zDepth}\n   */\n  drawerZDepth: PropTypes.number,\n\n  /**\n   * Any additional children to display after the `drawerHeader` and `navItems` list in the drawer.\n   */\n  drawerChildren: PropTypes.node,\n\n  /**\n   * Any additional children to display in the drawer's header `Toolbar`. If the `drawerHeader` prop is defined,\n   * this is invalid.\n   */\n  drawerHeaderChildren: invalidIf(PropTypes.node, 'drawerHeader'),\n\n  /**\n   * The position for the drawer to be displayed.\n   */\n  position: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * An optional list of elements or props to use to build a navigational list in the drawer.\n   * When the item is an object of props, it will build a `ListItem` component unless a key of\n   * `divider` or `subheader` is set to true. It will then create the Divider or Subheader component\n   * with any other remaining keys.\n   */\n  navItems: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.element, PropTypes.shape({\n    divider: PropTypes.bool,\n    subheader: PropTypes.bool,\n    primaryText: PropTypes.node\n  })])),\n\n  /**\n   * The drawer type to use for mobile devices.\n   */\n  mobileDrawerType: PropTypes.oneOf([DrawerTypes.TEMPORARY, DrawerTypes.TEMPORARY_MINI]).isRequired,\n\n  /**\n   * The drawer type to use for tablets.\n   */\n  tabletDrawerType: PropTypes.oneOf([DrawerTypes.FULL_HEIGHT, DrawerTypes.CLIPPED, DrawerTypes.FLOATING, DrawerTypes.PERSISTENT, DrawerTypes.PERSISTENT_MINI, DrawerTypes.TEMPORARY, DrawerTypes.TEMPORARY_MINI]).isRequired,\n\n  /**\n   * The drawer type to use for desktop displays.\n   */\n  desktopDrawerType: PropTypes.oneOf([DrawerTypes.FULL_HEIGHT, DrawerTypes.CLIPPED, DrawerTypes.FLOATING, DrawerTypes.PERSISTENT, DrawerTypes.PERSISTENT_MINI, DrawerTypes.TEMPORARY, DrawerTypes.TEMPORARY_MINI]).isRequired,\n\n  /**\n   * An optional drawer type to enforce on all screen sizes. If the drawer type is not\n   * `temporary`, you are required to define the `onMediaTypeChange` prop to handle switching\n   * to temporary when the media matches a mobile device.\n   * ```\n   */\n  drawerType: PropTypes.oneOf([DrawerTypes.FULL_HEIGHT, DrawerTypes.CLIPPED, DrawerTypes.FLOATING, DrawerTypes.PERSISTENT, DrawerTypes.PERSISTENT_MINI, DrawerTypes.TEMPORARY, DrawerTypes.TEMPORARY_MINI]),\n\n  /**\n   * The default media match for the drawer. This will be what is displayed on first render.\n   * The component will adjust itself to the current media after it has mounted, but this\n   * is mostly used for server side rendering.\n   */\n  defaultMedia: PropTypes.oneOf(['mobile', 'tablet', 'desktop']),\n\n  /**\n   * The min width to use for a mobile media query. This prop should match the `md-mobile-min-width`\n   * variable.\n   *\n   * The media query for a mobile device will be:\n   *\n   * ```js\n   * window.matchMedia(\n   *   `screen and (min-width: ${mobileMinWidth}px) and (max-width: ${tabletMinWidth - 1}px`\n   * ).matches;\n   * ```\n   */\n  mobileMinWidth: PropTypes.number.isRequired,\n\n  /**\n   * The min width to use for a tablet media query. This prop should match the `md-tablet-min-width`\n   * variable.\n   *\n   * The media query for a tablet device will be:\n   *\n   * ```js\n   * window.matchMedia(\n   *   `screen and (min-width: ${tabletMinWidth}px) and (max-width: ${desktopWidth - 1}px`\n   * ).matches;\n   * ```\n   */\n  tabletMinWidth: PropTypes.number.isRequired,\n\n  /**\n   * The min width to use for a desktop media query. This prop should match the `md-desktop-min-width`\n   * variable.\n   *\n   * The media query for a tablet device will be:\n   *\n   * ```js\n   * window.matchMedia(`screen and (min-width: ${tabletMinWidth}px)`).matches;\n   * ```\n   */\n  desktopMinWidth: PropTypes.number.isRequired,\n\n  /**\n   * An optional function to call when the type of the drawer changes because of the\n   * new media queries. The callback will include the newly selected drawer type\n   * and an object containing the media matches of `mobile`, `tablet`, and `desktop`.\n   *\n   * ```js\n   * this.props.onMediaTypeChange(NavigationDrawer.DrawerTypes.TEMPORARY, {\n   *   mobile: true,\n   *   tablet: false,\n   *   desktop: false,\n   * });\n   * ```\n   */\n  onMediaTypeChange: PropTypes.func,\n\n  /**\n   * Boolean if the temporary or persistent drawers are visible by default.\n   */\n  defaultVisible: PropTypes.bool,\n\n  /**\n   * Boolean if the temporary or persistent drawers are visible. If this is defined,\n   * it will make the component controlled and require the `onVisibilityChange` prop\n   * to be defined.\n   */\n  visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n  /**\n   * An optional function to call when the visibility of the drawer changes. The callback\n   * will include the new visibility.\n   *\n   * ```js\n   * onVisibilityChange(false);\n   * ```\n   */\n  onVisibilityChange: PropTypes.func,\n\n  /**\n   * A boolean if the mini drawer's list should be generated from the `navItems` prop. When building\n   * the list, it will extract the `leftIcon` or `leftAvatar` from the `navItem` and then create a\n   * mini `ListItem` containing only that icon or image. Any other event listeners will also be applied.\n   *\n   *\n   * @see {@link #miniDrawerHeader}\n   * @see {@link #miniDrawerChildren}\n   */\n  extractMini: PropTypes.bool,\n\n  /**\n   * An optional header to display in the mini drawer. This will be displayed above the optional\n   * mini nav list that get generated if the `extractMini` prop is `true` and the `miniDrawerChildren`.\n   *\n   * @see {@link #extractMini}\n   */\n  miniDrawerHeader: PropTypes.node,\n\n  /**\n   * Any additional children to display in the mini drawer. This will be displayed after the `miniDrawerHeader`\n   * and the optional mini nav list that gets generated if the `extractMini` prop is `true`.\n   *\n   * @see {@link #extractMini}\n   */\n  miniDrawerChildren: PropTypes.node,\n\n  /**\n   * Boolean if the drawer should automatically close after a nav item has been clicked for `temporary` drawers.\n   */\n  autoclose: PropTypes.bool,\n\n  /**\n   * An optional title to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\n   * may be defined, not both.\n   */\n  toolbarTitle: invalidIf(PropTypes.node, 'toolbarTitleMenu'),\n\n  /**\n   * An optional select field menu to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\n   * may be defined, not both.\n   */\n  toolbarTitleMenu: PropTypes.element,\n\n  /**\n   * The theme style for the main toolbar.\n   *\n   * @see {@link Toolbars/Toolbar}\n   */\n  toolbarThemeType: PropTypes.oneOf(['default', 'colored', 'themed']).isRequired,\n\n  /**\n   * Boolean if the toolbar's nav, actions, and title should share the same color.\n   */\n  toolbarSingleColor: PropTypes.bool,\n\n  /**\n   * A boolean if the toolbar should be prominent.\n   */\n  toolbarProminent: PropTypes.bool,\n\n  /**\n   * A boolean if the toolbar's title should be prominent.\n   */\n  toolbarProminentTitle: PropTypes.bool,\n\n  /**\n   * A list of elements or a single element to display to the right of the\n   * toolbar's nav, title, and children.\n   *\n   * @see {@link Toolbars/Toolbar#actions}\n   */\n  toolbarActions: Toolbar.propTypes.actions,\n\n  /**\n   * Any children to display in the toolbar. This will be displayed between the optional title and\n   * actions.\n   */\n  toolbarChildren: Toolbar.propTypes.children,\n\n  /**\n   * An optional zDepth to apply to the toolbar.\n   *\n   * @see {@link Toolbars/Toolbar#zDepth}\n   */\n  toolbarZDepth: PropTypes.number,\n\n  /**\n   * The component to render the content in.\n   */\n  contentComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * An optional footer display after the main content.\n   */\n  footer: PropTypes.node,\n\n  /**\n   * The icon to use to render the button that will toggle the visibility of the\n   * navigation drawer for `temporary` and `persistent` drawers. This is normally a\n   * hamburger menu.\n   */\n  temporaryIcon: PropTypes.element,\n\n  /**\n   * The icon to use to render the button that appears on a persistent drawer's open\n   * header. This is used to create the `CloseButton` for drawers. When a persistent\n   * drawer is closed, the `temporaryIcon` will be used to create a button to open the drawer.\n   *\n   * If the `drawerHeader` prop is defined, you will have to either include the `CloseButton`\n   * in your header manually, or create your own controlled button to close the drawer.\n   */\n  persistentIcon: PropTypes.element,\n\n  /**\n   * The transition name to use when the page's content changes. If you want to disable\n   * transitions, set both the `transitionEnterTimeout` and `transitionLeaveTimeout` props\n   * to a false-ish value. (`null`, `undefined`, or `0`).\n   */\n  transitionName: PropTypes.string.isRequired,\n\n  /**\n   * The transition enter timeout when the page's content changes. If you want to disable\n   * the enter transition, set this to a false-ish value (`null`, `undefined`, or `0`).\n   */\n  transitionEnterTimeout: PropTypes.number,\n\n  /**\n   * The transition leave timeout when the page's content changes. If you want to disable\n   * the leave transition, set this to a false-ish value (`null`, `undefined`, or `0`).\n   */\n  transitionLeaveTimeout: PropTypes.number,\n\n  /**\n   * The transition duration for the drawer when sliding in and out of view.\n   */\n  drawerTransitionDuration: PropTypes.number.isRequired,\n\n  /**\n   * Any additional props to provide to the main content. This will be applied before any of the generated props,\n   * so this should not include `style`, `className`, or `component`.\n   */\n  contentProps: PropTypes.object,\n\n  /**\n   * The label to use for a keyboard accessibility link that jumps all the navigation and allows a user to focus\n   * the main content. This is created in the drawer's header.\n   */\n  jumpLabel: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n   * to the drawer. The overlay that appears for temporary type drawers will still appear in the\n   * separate subtree.\n   *\n   * @see {@link Helpers/Portal}\n   */\n  portal: PropTypes.bool,\n\n  /**\n   * An optional DOM Node to render the drawer into. The default is to render as\n   * the first child in the `body`.\n   *\n   * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n   * since the `Portal` component will not be used.\n   */\n  renderNode: PropTypes.object,\n\n  /**\n   * Boolean if the drawer should be rendered as the last child instead of the first child\n   * in the `renderNode` or `body`.\n   *\n   * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n   * since the `Portal` component will not be used.\n   */\n  lastChild: PropTypes.bool,\n\n  /**\n   * Boolean if the `drawerType` should remain constant across all media. This is really only valid\n   * if the `drawerType` is one of the temporary types.\n   */\n  constantDrawerType: PropTypes.bool,\n\n  menuIconChildren: deprecated(PropTypes.node, 'Use `temporaryIcon` instead'),\n  menuIconClassName: deprecated(PropTypes.string, 'Use `temporaryIcon` instead'),\n  closeIconChildren: deprecated(PropTypes.node, 'Use `persistentIcon` instead'),\n  closeIconClassName: deprecated(PropTypes.string, 'Use `persistentIcon` instead'),\n  temporaryIconChildren: deprecated(PropTypes.node, 'Use the `temporaryIcon` instead'),\n  temporaryIconClassName: deprecated(PropTypes.string, 'Use the `temporaryIcon` instead'),\n  persistentIconChildren: deprecated(PropTypes.node, 'Use the `persistentIcon` instead'),\n  persistentIconClassName: deprecated(PropTypes.string, 'Use the `persistentIcon` prop instead'),\n  onDrawerChange: deprecated(PropTypes.func, 'Use `onVisibilityChange` or `onMediaTypeChange` instead'),\n  onVisibilityToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\n  contentTransitionName: deprecated(PropTypes.string, 'Use `transitionName` instead'),\n  contentTransitionEnterTimeout: deprecated(PropTypes.number, 'Use `transtionEnterTimeout` instead'),\n  contentTransitionLeaveTimeout: deprecated(PropTypes.number, 'Use `transtionLeaveTimeout` instead'),\n  initialDrawerType: deprecated(PropTypes.oneOf(['mobile', 'tablet', 'desktop']), 'Use `defaultMedia` instead')\n};\nNavigationDrawer.contextTypes = {\n  renderNode: PropTypes.object\n};\nNavigationDrawer.childContextTypes = {\n  closeIcon: PropTypes.element,\n  onCloseClick: PropTypes.func,\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  label: PropTypes.node.isRequired,\n  renderNode: PropTypes.object\n};\nNavigationDrawer.defaultProps = {\n  autoclose: Drawer.defaultProps.autoclose,\n  contentId: 'main-content',\n  // Defaults to false since it keeps the state of the drawerType in sync and makes the Drawer\n  // controlled. On initial mount without any defaultMedia updates, it would always be considered\n  // temporary\n  constantDrawerType: false,\n  jumpLabel: 'Jump to content',\n  extractMini: true,\n  position: Drawer.defaultProps.position,\n  defaultMedia: Drawer.defaultProps.defaultMedia,\n  mobileDrawerType: Drawer.defaultProps.mobileType,\n  tabletDrawerType: Drawer.defaultProps.tabletType,\n  desktopDrawerType: Drawer.defaultProps.desktopType,\n  mobileMinWidth: Drawer.defaultProps.mobileMinWidth,\n  tabletMinWidth: Drawer.defaultProps.tabletMinWidth,\n  desktopMinWidth: Drawer.defaultProps.desktopMinWidth,\n  includeDrawerHeader: true,\n  contentComponent: 'main',\n  temporaryIcon: React.createElement(\n    FontIcon,\n    null,\n    'menu'\n  ),\n  toolbarThemeType: 'colored',\n  persistentIcon: React.createElement(\n    FontIcon,\n    null,\n    'arrow_back'\n  ),\n  transitionName: 'md-cross-fade',\n  transitionEnterTimeout: 300,\n  drawerTransitionDuration: Drawer.defaultProps.transitionDuration\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._animate = function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this2.props;\n    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this2.state;\n\n    if (isTemporary(getField(props, state, 'drawerType'))) {\n      return;\n    }\n\n    if (_this2._timeout) {\n      clearTimeout(_this2._timeout);\n    }\n\n    _this2._timeout = setTimeout(function () {\n      _this2.setState({ contentActive: false });\n    }, props.drawerTransitionDuration);\n\n    _this2.setState({ contentActive: true });\n  };\n\n  this._toggleVisibility = function (e) {\n    var _props3 = _this2.props,\n        onVisibilityToggle = _props3.onVisibilityToggle,\n        onVisibilityChange = _props3.onVisibilityChange,\n        onDrawerChange = _props3.onDrawerChange;\n\n    var visible = !getField(_this2.props, _this2.state, 'visible');\n    var callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\n    if (callback) {\n      callback(visible, e);\n    }\n\n    if (typeof _this2.props.visible === 'undefined') {\n      _this2.setState({ visible: visible });\n      _this2._animate(_this2.props);\n    }\n  };\n\n  this._handleVisibility = function (visible) {\n    var _props4 = _this2.props,\n        onVisibilityToggle = _props4.onVisibilityToggle,\n        onVisibilityChange = _props4.onVisibilityChange,\n        onDrawerChange = _props4.onDrawerChange;\n\n    var callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\n    if (callback) {\n      callback(visible);\n    }\n\n    if (typeof _this2.props.visible === 'undefined') {\n      _this2.setState({ visible: visible });\n      _this2._animate(_this2.props);\n    }\n  };\n\n  this._handleTypeChange = function (drawerType, mediaState) {\n    var onMediaTypeChange = _this2.props.onMediaTypeChange;\n\n    var state = mediaState;\n    if (onMediaTypeChange) {\n      onMediaTypeChange(drawerType, mediaState);\n    }\n\n    if (typeof _this2.props.drawerType === 'undefined') {\n      state = _extends({}, mediaState, { drawerType: drawerType });\n    }\n\n    _this2.setState(state);\n  };\n};\n\nexport default NavigationDrawer;"]},"metadata":{},"sourceType":"module"}