{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n/**\n * The `ClockHand` component is just used to display the hand of the clock\n * and a ball to surround the selected time.\n */\n\nvar ClockHand = function (_PureComponent) {\n  _inherits(ClockHand, _PureComponent);\n\n  function ClockHand(props) {\n    _classCallCheck(this, ClockHand);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.state = {\n      active: false\n    };\n    return _this;\n  }\n\n  ClockHand.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    if (this.props.minutes !== nextProps.minutes) {\n      if (this.state.timeout) {\n        clearTimeout(this.state.timeout);\n      }\n\n      this.setState({\n        active: true,\n        timeout: setTimeout(function () {\n          return _this2.setState({\n            active: false,\n            timeout: null\n          });\n        }, 150)\n      });\n    }\n  };\n\n  ClockHand.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.timeout) {\n      clearTimeout(this.state.timeout);\n    }\n  };\n\n  ClockHand.prototype._calcCurrentDegrees = function _calcCurrentDegrees(_ref) {\n    var time = _ref.time,\n        minutes = _ref.minutes;\n    var timeAt0Deg = minutes ? 15 : 3;\n    var sectors = minutes ? 60 : 12;\n    return (time % sectors - timeAt0Deg) * (360 / sectors);\n  };\n\n  ClockHand.prototype.render = function render() {\n    var _props = this.props,\n        coords = _props.coords,\n        time = _props.time,\n        minutes = _props.minutes;\n\n    var degrees = this._calcCurrentDegrees(this.props);\n\n    var invisibleMinute = false;\n\n    if (minutes) {\n      invisibleMinute = degrees % (360 / 12) !== 0;\n    }\n\n    var rotateTransform = 'rotate3d(0, 0, 1, ' + degrees + 'deg)';\n    return React.createElement('div', {\n      className: cn('md-clock-hand md-background--primary', {\n        'md-clock-hand--active': this.state.active,\n        'md-clock-hand--minute-hover': invisibleMinute,\n        'md-clock-hand--inner': !minutes && (time > 12 || time === 0)\n      }),\n      style: {\n        left: coords,\n        top: coords,\n        WebkitTransform: rotateTransform,\n        MozTransform: rotateTransform,\n        msTransform: rotateTransform,\n        transform: rotateTransform\n      }\n    });\n  };\n\n  return ClockHand;\n}(PureComponent);\n\nClockHand.propTypes = {\n  /**\n   * This is the x and y coordinate to use for the center of the `ClockFace`.\n   * This should really be whatever the radius of the `ClockFace` is.\n   */\n  coords: PropTypes.number,\n\n  /**\n   * The current time of the clock.\n   */\n  time: PropTypes.number.isRequired,\n\n  /**\n   * Boolean if the clock is displaying minutes instead of hours.\n   */\n  minutes: PropTypes.bool.isRequired\n};\nexport default ClockHand;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Pickers/ClockHand.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","cn","ClockHand","_PureComponent","props","_this","state","active","componentWillReceiveProps","nextProps","_this2","minutes","timeout","clearTimeout","setState","setTimeout","componentWillUnmount","_calcCurrentDegrees","_ref","time","timeAt0Deg","sectors","render","_props","coords","degrees","invisibleMinute","rotateTransform","createElement","className","style","left","top","WebkitTransform","MozTransform","msTransform","transform","propTypes","number","isRequired","bool"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `ClockHand` component is just used to display the hand of the clock\n * and a ball to surround the selected time.\n */\n\nvar ClockHand = function (_PureComponent) {\n  _inherits(ClockHand, _PureComponent);\n\n  function ClockHand(props) {\n    _classCallCheck(this, ClockHand);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.state = { active: false };\n    return _this;\n  }\n\n  ClockHand.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    if (this.props.minutes !== nextProps.minutes) {\n      if (this.state.timeout) {\n        clearTimeout(this.state.timeout);\n      }\n\n      this.setState({\n        active: true,\n        timeout: setTimeout(function () {\n          return _this2.setState({ active: false, timeout: null });\n        }, 150)\n      });\n    }\n  };\n\n  ClockHand.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.state.timeout) {\n      clearTimeout(this.state.timeout);\n    }\n  };\n\n  ClockHand.prototype._calcCurrentDegrees = function _calcCurrentDegrees(_ref) {\n    var time = _ref.time,\n        minutes = _ref.minutes;\n\n    var timeAt0Deg = minutes ? 15 : 3;\n    var sectors = minutes ? 60 : 12;\n\n    return (time % sectors - timeAt0Deg) * (360 / sectors);\n  };\n\n  ClockHand.prototype.render = function render() {\n    var _props = this.props,\n        coords = _props.coords,\n        time = _props.time,\n        minutes = _props.minutes;\n\n\n    var degrees = this._calcCurrentDegrees(this.props);\n    var invisibleMinute = false;\n    if (minutes) {\n      invisibleMinute = degrees % (360 / 12) !== 0;\n    }\n\n    var rotateTransform = 'rotate3d(0, 0, 1, ' + degrees + 'deg)';\n    return React.createElement('div', {\n      className: cn('md-clock-hand md-background--primary', {\n        'md-clock-hand--active': this.state.active,\n        'md-clock-hand--minute-hover': invisibleMinute,\n        'md-clock-hand--inner': !minutes && (time > 12 || time === 0)\n      }),\n      style: {\n        left: coords,\n        top: coords,\n        WebkitTransform: rotateTransform,\n        MozTransform: rotateTransform,\n        msTransform: rotateTransform,\n        transform: rotateTransform\n      }\n    });\n  };\n\n  return ClockHand;\n}(PureComponent);\n\nClockHand.propTypes = {\n  /**\n   * This is the x and y coordinate to use for the center of the `ClockFace`.\n   * This should really be whatever the radius of the `ClockFace` is.\n   */\n  coords: PropTypes.number,\n\n  /**\n   * The current time of the clock.\n   */\n  time: PropTypes.number.isRequired,\n\n  /**\n   * Boolean if the clock is displaying minutes instead of hours.\n   */\n  minutes: PropTypes.bool.isRequired\n};\nexport default ClockHand;"]},"metadata":{},"sourceType":"module"}