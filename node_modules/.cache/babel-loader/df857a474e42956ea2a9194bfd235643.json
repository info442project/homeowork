{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport getField from '../utils/getField';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport SelectField from '../SelectFields/SelectField';\nimport Button from '../Buttons/Button';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport findTable from './findTable';\nimport TableFooter from './TableFooter';\nimport TableColumn from './TableColumn';\n/**\n * The `TablePagination` component is used to generate the table footer that helps\n * pagination through a large dataset by limiting the number of rows per page.\n * The pagination will always be placed persistently at the bottom of the table\n * so that when a user scrolls to the right, they will always be able to use the\n * pagination.\n */\n\nvar TablePagination = function (_PureComponent) {\n  _inherits(TablePagination, _PureComponent);\n\n  function TablePagination(props, context) {\n    _classCallCheck(this, TablePagination);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    var controlledPage = typeof props.page !== 'undefined';\n    var controlledRowsPerPage = typeof props.rowsPerPage !== 'undefined';\n    var rowsPerPage = controlledRowsPerPage ? props.rowsPerPage : props.defaultRowsPerPage;\n    var page = controlledPage ? props.page : props.defaultPage;\n    _this.state = {\n      start: (page - 1) * rowsPerPage,\n      controlsMarginLeft: 0\n    };\n\n    if (!controlledPage) {\n      _this.state.page = page;\n    }\n\n    if (!controlledRowsPerPage) {\n      _this.state.rowsPerPage = props.defaultRowsPerPage;\n    }\n\n    _this._table = null;\n    _this._ticking = false;\n    return _this;\n  }\n\n  TablePagination.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        rowsPerPage = _props.rowsPerPage,\n        page = _props.page;\n\n    if (page !== nextProps.page || rowsPerPage !== nextProps.rowsPerPage) {\n      var rpp = getField(nextProps, this.state, 'rowsPerPage');\n      var p = getField(nextProps, this.state, 'page');\n      this.setState({\n        start: (p - 1) * rpp\n      });\n    }\n  };\n\n  TablePagination.prototype.render = function render() {\n    var _state = this.state,\n        controlsMarginLeft = _state.controlsMarginLeft,\n        start = _state.start;\n\n    var _props2 = this.props,\n        className = _props2.className,\n        selectFieldStyle = _props2.selectFieldStyle,\n        selectFieldClassName = _props2.selectFieldClassName,\n        selectFieldInputStyle = _props2.selectFieldInputStyle,\n        selectFieldInputClassName = _props2.selectFieldInputClassName,\n        rows = _props2.rows,\n        rowsPerPageLabel = _props2.rowsPerPageLabel,\n        rowsPerPageItems = _props2.rowsPerPageItems,\n        incrementIcon = _props2.incrementIcon,\n        decrementIcon = _props2.decrementIcon,\n        simplifiedMenu = _props2.simplifiedMenu,\n        paginationLabel = _props2.paginationLabel,\n        incrementIconChildren = _props2.incrementIconChildren,\n        incrementIconClassName = _props2.incrementIconClassName,\n        decrementIconChildren = _props2.decrementIconChildren,\n        decrementIconClassName = _props2.decrementIconClassName,\n        propId = _props2.id,\n        propIncrementId = _props2.incrementId,\n        propDecrementId = _props2.decrementId,\n        onPagination = _props2.onPagination,\n        propRowsPerPage = _props2.rowsPerPage,\n        propPage = _props2.page,\n        defaultPage = _props2.defaultPage,\n        defaultRowsPerPage = _props2.defaultRowsPerPage,\n        props = _objectWithoutProperties(_props2, ['className', 'selectFieldStyle', 'selectFieldClassName', 'selectFieldInputStyle', 'selectFieldInputClassName', 'rows', 'rowsPerPageLabel', 'rowsPerPageItems', 'incrementIcon', 'decrementIcon', 'simplifiedMenu', 'paginationLabel', 'incrementIconChildren', 'incrementIconClassName', 'decrementIconChildren', 'decrementIconClassName', 'id', 'incrementId', 'decrementId', 'onPagination', 'rowsPerPage', 'page', 'defaultPage', 'defaultRowsPerPage']);\n\n    var baseId = this.context.baseId;\n    var rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    var _props3 = this.props,\n        id = _props3.id,\n        incrementId = _props3.incrementId,\n        decrementId = _props3.decrementId;\n\n    if (!id) {\n      id = baseId + '-pagination';\n    }\n\n    if (!incrementId) {\n      incrementId = id + '-increment-btn';\n    }\n\n    if (!decrementId) {\n      decrementId = id + '-decrement-btn';\n    }\n\n    var pagination = paginationLabel(start + 1, Math.min(rows, start + rowsPerPage), rows);\n    return React.createElement(TableFooter, _extends({}, props, {\n      className: cn('md-table-footer--pagination', className)\n    }), React.createElement(ResizeObserver, {\n      watchWidth: true,\n      component: 'tr',\n      onResize: this._throttledPosition\n    }), React.createElement(ResizeObserver, {\n      watchWidth: true,\n      component: 'tr',\n      target: this._table,\n      onResize: this._throttledPosition\n    }), React.createElement('tr', null, React.createElement(TableColumn, {\n      colSpan: '100%'\n    }, React.createElement('div', {\n      ref: this._setControls,\n      className: 'md-table-pagination md-table-pagination--controls md-text',\n      style: {\n        marginLeft: controlsMarginLeft\n      }\n    }, React.createElement('span', {\n      className: 'md-table-pagination__label'\n    }, rowsPerPageLabel), React.createElement(SelectField, {\n      id: id,\n      menuItems: rowsPerPageItems,\n      position: SelectField.Positions.BELOW,\n      style: selectFieldStyle,\n      className: selectFieldClassName,\n      inputStyle: selectFieldInputStyle,\n      inputClassName: cn('md-select-field--pagination', selectFieldInputClassName),\n      value: rowsPerPage,\n      onChange: this._setRowsPerPage,\n      simplifiedMenu: simplifiedMenu\n    }), React.createElement('span', {\n      className: 'md-table-pagination--label'\n    }, pagination), React.createElement(Button, {\n      id: decrementId,\n      icon: true,\n      onClick: this._decrement,\n      disabled: start === 0,\n      iconEl: getDeprecatedIcon(decrementIconClassName, decrementIconChildren, decrementIcon)\n    }), React.createElement(Button, {\n      id: incrementId,\n      icon: true,\n      onClick: this._increment,\n      disabled: start + rowsPerPage >= rows,\n      iconEl: getDeprecatedIcon(incrementIconClassName, incrementIconChildren, incrementIcon)\n    })), React.createElement('div', {\n      className: 'md-table-pagination'\n    }))));\n  };\n\n  return TablePagination;\n}(PureComponent);\n\nTablePagination.propTypes = {\n  /**\n   * An optional id to provide to the select field. If this is omitted, it will be\n   * the `DataTable`'s `baseId` with '-pagination'.\n   *\n   * @see {@link DataTables/DataTable#baseId}\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the increment icon button. If this is omitted, it will be\n   * the `id` with '-increment-btn'.\n   *\n   * @see {@link #id}\n   */\n  incrementId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the decrement icon button. If this is omitted, it will be\n   * the `id` with '-decrement-btn'.\n   *\n   * @see {@link #id}\n   */\n  decrementId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional style to apply to the `tfoot` tag.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the `tfoot` tag.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the select field.\n   *\n   * @see {@link SelectFields/SelectField#style}\n   */\n  selectFieldStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the select field.\n   *\n   * @see {@link SelectFields/SelectField#className}\n   */\n  selectFieldClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the select field's input.\n   *\n   * @see {@link SelectFields/SelectField#inputStyle}\n   */\n  selectFieldInputStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the select field's input.\n   *\n   * @see {@link SelectFields/SelectField#inputClassName}\n   */\n  selectFieldInputClassName: PropTypes.string,\n\n  /**\n   * Boolean if the select field should use the simplified menu logic.\n   *\n   * @see {@link Helpers/Layover#simplified}\n   */\n  simplifiedMenu: PropTypes.bool,\n\n  /**\n   * A function to call when a user clicks the increment or decrement pagination\n   * icon button. This function will be given the new start index and the number\n   * or rows per page as well as the current page.\n   *\n   * ```js\n   * onPagination(newStart, rowsPerPage, currentPage);\n   * ```\n   */\n  onPagination: PropTypes.func.isRequired,\n\n  /**\n   * The current value for the select field holding the number of rows per page.\n   */\n  rowsPerPage: PropTypes.number,\n\n  /**\n   * The current page for the pagination. This will make the component controlled, so the only way to get pagination\n   * is making sure you are updating this prop after the `onPagination` callback is called.\n   *\n   * Pages start from 1 instead of 0.\n   */\n  page: PropTypes.number,\n\n  /**\n   * The default page to start from for the pagination. Pages start from 1 instead of 0.\n   */\n  defaultPage: PropTypes.number.isRequired,\n\n  /**\n   * The default number of rows per page to display. This will be the value for the\n   * `SelectField`.\n   */\n  defaultRowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * The label to use for the rows per page `SelectField`.\n   */\n  rowsPerPageLabel: PropTypes.node.isRequired,\n\n  /**\n   * A list of numbers for the amount of rows per page to display at a time.\n   * This will be rendered into the `SelectField`.\n   */\n  rowsPerPageItems: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n  /**\n   * The total number of rows that can be displayed. This is the unfiltered/non-subset\n   * number of rows. This is used to help calculate the increment/decrement values to\n   * display and determine if the user can increment/decrement again.\n   */\n  rows: PropTypes.number.isRequired,\n\n  /**\n   * The icon to use for the increment icon button.\n   */\n  incrementIcon: PropTypes.element,\n\n  /**\n   * The icon to use for the decrement icon button.\n   */\n  decrementIcon: PropTypes.element,\n\n  /**\n   * Function to return the label text (or node) used to display start row and last row\n   * of the current page and total rows. The function has to accept three number parameters\n   * i.e.: (startRow, lastRow, totalRows) => `${startRow}-${lastRow} of ${totalRows}`\n   * and to return a string (or node) to display the label. If you do not return pure text\n   * make sure, the node is allowed to mount inside a <span> node to avoid DOM warnings or\n   * defective layout.\n   */\n  paginationLabel: PropTypes.func,\n  incrementIconChildren: deprecated(PropTypes.node, 'Use the `incrementIcon` prop instead'),\n  incrementIconClassName: deprecated(PropTypes.string, 'Use the `incrementIcon` prop instead'),\n  decrementIconChildren: deprecated(PropTypes.node, 'Use the `decrementIcon` prop instead'),\n  decrementIconClassName: deprecated(PropTypes.string, 'Use the `decrementIcon` prop instead')\n};\nTablePagination.contextTypes = {\n  baseId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  fixedFooter: PropTypes.bool\n};\nTablePagination.defaultProps = {\n  defaultPage: 1,\n  defaultRowsPerPage: 10,\n  rowsPerPageLabel: 'Rows per page:',\n  rowsPerPageItems: [10, 20, 30, 40, 50, 100],\n  incrementIcon: React.createElement(FontIcon, null, 'keyboard_arrow_right'),\n  decrementIcon: React.createElement(FontIcon, null, 'keyboard_arrow_left'),\n  simplifiedMenu: false,\n  paginationLabel: function paginationLabel(startRow, lastRow, totalRows) {\n    return startRow + '-' + lastRow + ' of ' + totalRows;\n  }\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setControls = function (controls) {\n    _this2._controls = controls;\n    _this2._table = findTable(controls);\n\n    if (_this2._table && _this2.context.fixedFooter) {\n      _this2._table.addEventListener('scroll', _this2._throttledPosition);\n    }\n  };\n\n  this._position = function () {\n    if (_this2._table) {\n      var fixedFooter = _this2.context.fixedFooter;\n      var _table = _this2._table,\n          offsetWidth = _table.offsetWidth,\n          scrollLeft = _table.scrollLeft;\n      var controlsMarginLeft = offsetWidth - _this2._controls.offsetWidth;\n\n      if (fixedFooter) {\n        controlsMarginLeft += scrollLeft;\n      }\n\n      _this2.setState({\n        controlsMarginLeft: Math.max(24, controlsMarginLeft)\n      });\n    }\n  };\n\n  this._throttledPosition = function () {\n    if (!_this2._ticking) {\n      requestAnimationFrame(function () {\n        _this2._ticking = false;\n\n        _this2._position();\n      });\n    }\n\n    _this2._ticking = true;\n  };\n\n  this._increment = function () {\n    var _props4 = _this2.props,\n        rows = _props4.rows,\n        onPagination = _props4.onPagination;\n    var start = _this2.state.start;\n    var rowsPerPage = getField(_this2.props, _this2.state, 'rowsPerPage');\n    var page = getField(_this2.props, _this2.state, 'page'); // Only correct multiple of rows per page\n\n    var max = rows - rows % rowsPerPage;\n    var newStart = Math.min(start + rowsPerPage, max);\n    var nextPage = page + 1;\n    onPagination(newStart, rowsPerPage, nextPage);\n\n    if (typeof _this2.props.page === 'undefined') {\n      _this2.setState({\n        start: newStart,\n        page: nextPage\n      });\n    }\n  };\n\n  this._decrement = function () {\n    var start = _this2.state.start;\n    var page = getField(_this2.props, _this2.state, 'page');\n    var rowsPerPage = getField(_this2.props, _this2.state, 'rowsPerPage');\n    var newStart = Math.max(0, start - rowsPerPage);\n    var nextPage = page - 1;\n\n    _this2.props.onPagination(newStart, rowsPerPage, nextPage);\n\n    if (typeof _this2.props.page === 'undefined') {\n      _this2.setState({\n        start: newStart,\n        page: nextPage\n      });\n    }\n  };\n\n  this._setRowsPerPage = function (rowsPerPage) {\n    var page = 1;\n    var newStart = 0;\n\n    _this2.props.onPagination(newStart, rowsPerPage, page);\n\n    var nextState = void 0;\n\n    if (typeof _this2.props.rowsPerPage === 'undefined') {\n      nextState = {\n        rowsPerPage: rowsPerPage\n      };\n    }\n\n    if (typeof _this2.props.page === 'undefined') {\n      nextState = nextState || {};\n      nextState.start = newStart;\n    }\n\n    if (nextState) {\n      _this2.setState(nextState);\n    }\n  };\n};\n\nexport default TablePagination;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/DataTables/TablePagination.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","cn","deprecated","getField","ResizeObserver","SelectField","Button","FontIcon","getDeprecatedIcon","findTable","TableFooter","TableColumn","TablePagination","_PureComponent","props","context","_this","_initialiseProps","controlledPage","page","controlledRowsPerPage","rowsPerPage","defaultRowsPerPage","defaultPage","state","start","controlsMarginLeft","_table","_ticking","componentWillReceiveProps","nextProps","_props","rpp","p","setState","render","_state","_props2","className","selectFieldStyle","selectFieldClassName","selectFieldInputStyle","selectFieldInputClassName","rows","rowsPerPageLabel","rowsPerPageItems","incrementIcon","decrementIcon","simplifiedMenu","paginationLabel","incrementIconChildren","incrementIconClassName","decrementIconChildren","decrementIconClassName","propId","id","propIncrementId","incrementId","propDecrementId","decrementId","onPagination","propRowsPerPage","propPage","baseId","_props3","pagination","Math","min","createElement","watchWidth","component","onResize","_throttledPosition","colSpan","ref","_setControls","style","marginLeft","menuItems","position","Positions","BELOW","inputStyle","inputClassName","onChange","_setRowsPerPage","icon","onClick","_decrement","disabled","iconEl","_increment","propTypes","oneOfType","number","string","object","bool","func","isRequired","node","arrayOf","element","contextTypes","fixedFooter","defaultProps","startRow","lastRow","totalRows","_this2","controls","_controls","addEventListener","_position","offsetWidth","scrollLeft","max","requestAnimationFrame","_props4","newStart","nextPage","nextState"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport SelectField from '../SelectFields/SelectField';\nimport Button from '../Buttons/Button';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport findTable from './findTable';\nimport TableFooter from './TableFooter';\nimport TableColumn from './TableColumn';\n\n/**\n * The `TablePagination` component is used to generate the table footer that helps\n * pagination through a large dataset by limiting the number of rows per page.\n * The pagination will always be placed persistently at the bottom of the table\n * so that when a user scrolls to the right, they will always be able to use the\n * pagination.\n */\n\nvar TablePagination = function (_PureComponent) {\n  _inherits(TablePagination, _PureComponent);\n\n  function TablePagination(props, context) {\n    _classCallCheck(this, TablePagination);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    var controlledPage = typeof props.page !== 'undefined';\n    var controlledRowsPerPage = typeof props.rowsPerPage !== 'undefined';\n    var rowsPerPage = controlledRowsPerPage ? props.rowsPerPage : props.defaultRowsPerPage;\n    var page = controlledPage ? props.page : props.defaultPage;\n    _this.state = {\n      start: (page - 1) * rowsPerPage,\n      controlsMarginLeft: 0\n    };\n\n    if (!controlledPage) {\n      _this.state.page = page;\n    }\n\n    if (!controlledRowsPerPage) {\n      _this.state.rowsPerPage = props.defaultRowsPerPage;\n    }\n\n    _this._table = null;\n    _this._ticking = false;\n    return _this;\n  }\n\n  TablePagination.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        rowsPerPage = _props.rowsPerPage,\n        page = _props.page;\n\n    if (page !== nextProps.page || rowsPerPage !== nextProps.rowsPerPage) {\n      var rpp = getField(nextProps, this.state, 'rowsPerPage');\n      var p = getField(nextProps, this.state, 'page');\n\n      this.setState({ start: (p - 1) * rpp });\n    }\n  };\n\n  TablePagination.prototype.render = function render() {\n    var _state = this.state,\n        controlsMarginLeft = _state.controlsMarginLeft,\n        start = _state.start;\n\n    var _props2 = this.props,\n        className = _props2.className,\n        selectFieldStyle = _props2.selectFieldStyle,\n        selectFieldClassName = _props2.selectFieldClassName,\n        selectFieldInputStyle = _props2.selectFieldInputStyle,\n        selectFieldInputClassName = _props2.selectFieldInputClassName,\n        rows = _props2.rows,\n        rowsPerPageLabel = _props2.rowsPerPageLabel,\n        rowsPerPageItems = _props2.rowsPerPageItems,\n        incrementIcon = _props2.incrementIcon,\n        decrementIcon = _props2.decrementIcon,\n        simplifiedMenu = _props2.simplifiedMenu,\n        paginationLabel = _props2.paginationLabel,\n        incrementIconChildren = _props2.incrementIconChildren,\n        incrementIconClassName = _props2.incrementIconClassName,\n        decrementIconChildren = _props2.decrementIconChildren,\n        decrementIconClassName = _props2.decrementIconClassName,\n        propId = _props2.id,\n        propIncrementId = _props2.incrementId,\n        propDecrementId = _props2.decrementId,\n        onPagination = _props2.onPagination,\n        propRowsPerPage = _props2.rowsPerPage,\n        propPage = _props2.page,\n        defaultPage = _props2.defaultPage,\n        defaultRowsPerPage = _props2.defaultRowsPerPage,\n        props = _objectWithoutProperties(_props2, ['className', 'selectFieldStyle', 'selectFieldClassName', 'selectFieldInputStyle', 'selectFieldInputClassName', 'rows', 'rowsPerPageLabel', 'rowsPerPageItems', 'incrementIcon', 'decrementIcon', 'simplifiedMenu', 'paginationLabel', 'incrementIconChildren', 'incrementIconClassName', 'decrementIconChildren', 'decrementIconClassName', 'id', 'incrementId', 'decrementId', 'onPagination', 'rowsPerPage', 'page', 'defaultPage', 'defaultRowsPerPage']);\n\n    var baseId = this.context.baseId;\n\n    var rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    var _props3 = this.props,\n        id = _props3.id,\n        incrementId = _props3.incrementId,\n        decrementId = _props3.decrementId;\n\n    if (!id) {\n      id = baseId + '-pagination';\n    }\n\n    if (!incrementId) {\n      incrementId = id + '-increment-btn';\n    }\n\n    if (!decrementId) {\n      decrementId = id + '-decrement-btn';\n    }\n\n    var pagination = paginationLabel(start + 1, Math.min(rows, start + rowsPerPage), rows);\n    return React.createElement(\n      TableFooter,\n      _extends({}, props, { className: cn('md-table-footer--pagination', className) }),\n      React.createElement(ResizeObserver, { watchWidth: true, component: 'tr', onResize: this._throttledPosition }),\n      React.createElement(ResizeObserver, { watchWidth: true, component: 'tr', target: this._table, onResize: this._throttledPosition }),\n      React.createElement(\n        'tr',\n        null,\n        React.createElement(\n          TableColumn,\n          { colSpan: '100%' },\n          React.createElement(\n            'div',\n            {\n              ref: this._setControls,\n              className: 'md-table-pagination md-table-pagination--controls md-text',\n              style: { marginLeft: controlsMarginLeft }\n            },\n            React.createElement(\n              'span',\n              { className: 'md-table-pagination__label' },\n              rowsPerPageLabel\n            ),\n            React.createElement(SelectField, {\n              id: id,\n              menuItems: rowsPerPageItems,\n              position: SelectField.Positions.BELOW,\n              style: selectFieldStyle,\n              className: selectFieldClassName,\n              inputStyle: selectFieldInputStyle,\n              inputClassName: cn('md-select-field--pagination', selectFieldInputClassName),\n              value: rowsPerPage,\n              onChange: this._setRowsPerPage,\n              simplifiedMenu: simplifiedMenu\n            }),\n            React.createElement(\n              'span',\n              { className: 'md-table-pagination--label' },\n              pagination\n            ),\n            React.createElement(Button, {\n              id: decrementId,\n              icon: true,\n              onClick: this._decrement,\n              disabled: start === 0,\n              iconEl: getDeprecatedIcon(decrementIconClassName, decrementIconChildren, decrementIcon)\n            }),\n            React.createElement(Button, {\n              id: incrementId,\n              icon: true,\n              onClick: this._increment,\n              disabled: start + rowsPerPage >= rows,\n              iconEl: getDeprecatedIcon(incrementIconClassName, incrementIconChildren, incrementIcon)\n            })\n          ),\n          React.createElement('div', { className: 'md-table-pagination' })\n        )\n      )\n    );\n  };\n\n  return TablePagination;\n}(PureComponent);\n\nTablePagination.propTypes = {\n  /**\n   * An optional id to provide to the select field. If this is omitted, it will be\n   * the `DataTable`'s `baseId` with '-pagination'.\n   *\n   * @see {@link DataTables/DataTable#baseId}\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the increment icon button. If this is omitted, it will be\n   * the `id` with '-increment-btn'.\n   *\n   * @see {@link #id}\n   */\n  incrementId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the decrement icon button. If this is omitted, it will be\n   * the `id` with '-decrement-btn'.\n   *\n   * @see {@link #id}\n   */\n  decrementId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional style to apply to the `tfoot` tag.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the `tfoot` tag.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the select field.\n   *\n   * @see {@link SelectFields/SelectField#style}\n   */\n  selectFieldStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the select field.\n   *\n   * @see {@link SelectFields/SelectField#className}\n   */\n  selectFieldClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the select field's input.\n   *\n   * @see {@link SelectFields/SelectField#inputStyle}\n   */\n  selectFieldInputStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the select field's input.\n   *\n   * @see {@link SelectFields/SelectField#inputClassName}\n   */\n  selectFieldInputClassName: PropTypes.string,\n\n  /**\n   * Boolean if the select field should use the simplified menu logic.\n   *\n   * @see {@link Helpers/Layover#simplified}\n   */\n  simplifiedMenu: PropTypes.bool,\n\n  /**\n   * A function to call when a user clicks the increment or decrement pagination\n   * icon button. This function will be given the new start index and the number\n   * or rows per page as well as the current page.\n   *\n   * ```js\n   * onPagination(newStart, rowsPerPage, currentPage);\n   * ```\n   */\n  onPagination: PropTypes.func.isRequired,\n\n  /**\n   * The current value for the select field holding the number of rows per page.\n   */\n  rowsPerPage: PropTypes.number,\n\n  /**\n   * The current page for the pagination. This will make the component controlled, so the only way to get pagination\n   * is making sure you are updating this prop after the `onPagination` callback is called.\n   *\n   * Pages start from 1 instead of 0.\n   */\n  page: PropTypes.number,\n\n  /**\n   * The default page to start from for the pagination. Pages start from 1 instead of 0.\n   */\n  defaultPage: PropTypes.number.isRequired,\n\n  /**\n   * The default number of rows per page to display. This will be the value for the\n   * `SelectField`.\n   */\n  defaultRowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * The label to use for the rows per page `SelectField`.\n   */\n  rowsPerPageLabel: PropTypes.node.isRequired,\n\n  /**\n   * A list of numbers for the amount of rows per page to display at a time.\n   * This will be rendered into the `SelectField`.\n   */\n  rowsPerPageItems: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n  /**\n   * The total number of rows that can be displayed. This is the unfiltered/non-subset\n   * number of rows. This is used to help calculate the increment/decrement values to\n   * display and determine if the user can increment/decrement again.\n   */\n  rows: PropTypes.number.isRequired,\n\n  /**\n   * The icon to use for the increment icon button.\n   */\n  incrementIcon: PropTypes.element,\n\n  /**\n   * The icon to use for the decrement icon button.\n   */\n  decrementIcon: PropTypes.element,\n\n  /**\n   * Function to return the label text (or node) used to display start row and last row\n   * of the current page and total rows. The function has to accept three number parameters\n   * i.e.: (startRow, lastRow, totalRows) => `${startRow}-${lastRow} of ${totalRows}`\n   * and to return a string (or node) to display the label. If you do not return pure text\n   * make sure, the node is allowed to mount inside a <span> node to avoid DOM warnings or\n   * defective layout.\n   */\n  paginationLabel: PropTypes.func,\n\n  incrementIconChildren: deprecated(PropTypes.node, 'Use the `incrementIcon` prop instead'),\n  incrementIconClassName: deprecated(PropTypes.string, 'Use the `incrementIcon` prop instead'),\n  decrementIconChildren: deprecated(PropTypes.node, 'Use the `decrementIcon` prop instead'),\n  decrementIconClassName: deprecated(PropTypes.string, 'Use the `decrementIcon` prop instead')\n};\nTablePagination.contextTypes = {\n  baseId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  fixedFooter: PropTypes.bool\n};\nTablePagination.defaultProps = {\n  defaultPage: 1,\n  defaultRowsPerPage: 10,\n  rowsPerPageLabel: 'Rows per page:',\n  rowsPerPageItems: [10, 20, 30, 40, 50, 100],\n  incrementIcon: React.createElement(\n    FontIcon,\n    null,\n    'keyboard_arrow_right'\n  ),\n  decrementIcon: React.createElement(\n    FontIcon,\n    null,\n    'keyboard_arrow_left'\n  ),\n  simplifiedMenu: false,\n  paginationLabel: function paginationLabel(startRow, lastRow, totalRows) {\n    return startRow + '-' + lastRow + ' of ' + totalRows;\n  }\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setControls = function (controls) {\n    _this2._controls = controls;\n    _this2._table = findTable(controls);\n\n    if (_this2._table && _this2.context.fixedFooter) {\n      _this2._table.addEventListener('scroll', _this2._throttledPosition);\n    }\n  };\n\n  this._position = function () {\n    if (_this2._table) {\n      var fixedFooter = _this2.context.fixedFooter;\n      var _table = _this2._table,\n          offsetWidth = _table.offsetWidth,\n          scrollLeft = _table.scrollLeft;\n\n\n      var controlsMarginLeft = offsetWidth - _this2._controls.offsetWidth;\n      if (fixedFooter) {\n        controlsMarginLeft += scrollLeft;\n      }\n\n      _this2.setState({\n        controlsMarginLeft: Math.max(24, controlsMarginLeft)\n      });\n    }\n  };\n\n  this._throttledPosition = function () {\n    if (!_this2._ticking) {\n      requestAnimationFrame(function () {\n        _this2._ticking = false;\n        _this2._position();\n      });\n    }\n\n    _this2._ticking = true;\n  };\n\n  this._increment = function () {\n    var _props4 = _this2.props,\n        rows = _props4.rows,\n        onPagination = _props4.onPagination;\n    var start = _this2.state.start;\n\n    var rowsPerPage = getField(_this2.props, _this2.state, 'rowsPerPage');\n    var page = getField(_this2.props, _this2.state, 'page');\n\n    // Only correct multiple of rows per page\n    var max = rows - rows % rowsPerPage;\n\n    var newStart = Math.min(start + rowsPerPage, max);\n    var nextPage = page + 1;\n\n    onPagination(newStart, rowsPerPage, nextPage);\n    if (typeof _this2.props.page === 'undefined') {\n      _this2.setState({ start: newStart, page: nextPage });\n    }\n  };\n\n  this._decrement = function () {\n    var start = _this2.state.start;\n\n    var page = getField(_this2.props, _this2.state, 'page');\n    var rowsPerPage = getField(_this2.props, _this2.state, 'rowsPerPage');\n    var newStart = Math.max(0, start - rowsPerPage);\n    var nextPage = page - 1;\n\n    _this2.props.onPagination(newStart, rowsPerPage, nextPage);\n    if (typeof _this2.props.page === 'undefined') {\n      _this2.setState({ start: newStart, page: nextPage });\n    }\n  };\n\n  this._setRowsPerPage = function (rowsPerPage) {\n    var page = 1;\n    var newStart = 0;\n    _this2.props.onPagination(newStart, rowsPerPage, page);\n    var nextState = void 0;\n    if (typeof _this2.props.rowsPerPage === 'undefined') {\n      nextState = { rowsPerPage: rowsPerPage };\n    }\n\n    if (typeof _this2.props.page === 'undefined') {\n      nextState = nextState || {};\n      nextState.start = newStart;\n    }\n\n    if (nextState) {\n      _this2.setState(nextState);\n    }\n  };\n};\n\nexport default TablePagination;"]},"metadata":{},"sourceType":"module"}