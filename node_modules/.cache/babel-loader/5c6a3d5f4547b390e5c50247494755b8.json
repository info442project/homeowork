{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { TAB } from '../constants/keyCodes';\nimport themeColors from '../utils/themeColors';\nvar CLOCK_PADDING = 4;\n/**\n * The `ClockTime` component is used for positioning hours or minutes\n * in a clock. The time will be positioned based on it's given index\n * and the radius of the clock.\n */\n\nvar ClockTime = function (_PureComponent) {\n  _inherits(ClockTime, _PureComponent);\n\n  function ClockTime(props) {\n    _classCallCheck(this, ClockTime);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this._handleKeyUp = function (e) {\n      if ((e.which || e.keyCode) === TAB) {\n        _this.props.onKeyboardFocus(_this.props.time);\n      }\n    };\n\n    _this._setTime = function (time) {\n      _this._time = time;\n\n      if (time !== null) {\n        _this._setPosition(_this.props, time);\n\n        if (_this.props.active) {\n          time.focus();\n        }\n      }\n    };\n\n    _this._setPosition = function (_ref, time) {\n      var radius = _ref.radius,\n          index = _ref.index; // 36 is default size for the time\n\n      var size = (time.offsetWidth || 36) / 2;\n      var timeRadians = Math.PI / 2 - index * (Math.PI / 6);\n      var innerCircle = index > 12;\n      var outerRadius = radius - size;\n      var innerRadius = outerRadius - CLOCK_PADDING - (innerCircle ? size * 2 : 0);\n\n      _this.setState({\n        style: {\n          top: outerRadius - innerRadius * Math.sin(timeRadians),\n          left: outerRadius + innerRadius * Math.cos(timeRadians)\n        }\n      });\n    };\n\n    _this.state = {\n      // default size in scss\n      size: 18\n    };\n    return _this;\n  }\n\n  ClockTime.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.radius !== nextProps.radius || this.props.index !== nextProps.index) {\n      this._setPosition(nextProps, this._time);\n    }\n  };\n\n  ClockTime.prototype.render = function render() {\n    var _props = this.props,\n        time = _props.time,\n        active = _props.active;\n    return React.createElement('div', {\n      ref: this._setTime,\n      tabIndex: 0,\n      className: cn('md-clock-time md-text-no-select md-pointer--none', {\n        'md-picker-text--active': active\n      }, themeColors({\n        text: !active\n      })),\n      style: this.state.style,\n      onKeyUp: this._handleKeyUp\n    }, React.createElement('span', {\n      className: 'md-clock-time-value'\n    }, time));\n  };\n\n  return ClockTime;\n}(PureComponent);\n\nClockTime.propTypes = {\n  /**\n   * The index of the current time to be displayed. This\n   * should be a number between 1 and 24.\n   */\n  index: PropTypes.number.isRequired,\n\n  /**\n   * The time number to display.\n   */\n  time: PropTypes.number.isRequired,\n\n  /**\n   * Boolean if this time is currently selected.\n   */\n  active: PropTypes.bool.isRequired,\n\n  /**\n   * The radius of the clock.\n   */\n  radius: PropTypes.number.isRequired,\n  onKeyboardFocus: PropTypes.func.isRequired\n};\nexport default ClockTime;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Pickers/ClockTime.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","cn","TAB","themeColors","CLOCK_PADDING","ClockTime","_PureComponent","props","_this","_handleKeyUp","e","which","keyCode","onKeyboardFocus","time","_setTime","_time","_setPosition","active","focus","_ref","radius","index","size","offsetWidth","timeRadians","Math","PI","innerCircle","outerRadius","innerRadius","setState","style","top","sin","left","cos","state","componentWillReceiveProps","nextProps","render","_props","createElement","ref","tabIndex","className","text","onKeyUp","propTypes","number","isRequired","bool","func"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { TAB } from '../constants/keyCodes';\nimport themeColors from '../utils/themeColors';\n\nvar CLOCK_PADDING = 4;\n\n/**\n * The `ClockTime` component is used for positioning hours or minutes\n * in a clock. The time will be positioned based on it's given index\n * and the radius of the clock.\n */\n\nvar ClockTime = function (_PureComponent) {\n  _inherits(ClockTime, _PureComponent);\n\n  function ClockTime(props) {\n    _classCallCheck(this, ClockTime);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this._handleKeyUp = function (e) {\n      if ((e.which || e.keyCode) === TAB) {\n        _this.props.onKeyboardFocus(_this.props.time);\n      }\n    };\n\n    _this._setTime = function (time) {\n      _this._time = time;\n      if (time !== null) {\n        _this._setPosition(_this.props, time);\n\n        if (_this.props.active) {\n          time.focus();\n        }\n      }\n    };\n\n    _this._setPosition = function (_ref, time) {\n      var radius = _ref.radius,\n          index = _ref.index;\n\n      // 36 is default size for the time\n      var size = (time.offsetWidth || 36) / 2;\n      var timeRadians = Math.PI / 2 - index * (Math.PI / 6);\n      var innerCircle = index > 12;\n\n      var outerRadius = radius - size;\n      var innerRadius = outerRadius - CLOCK_PADDING - (innerCircle ? size * 2 : 0);\n\n      _this.setState({\n        style: {\n          top: outerRadius - innerRadius * Math.sin(timeRadians),\n          left: outerRadius + innerRadius * Math.cos(timeRadians)\n        }\n      });\n    };\n\n    _this.state = {\n      // default size in scss\n      size: 18\n    };\n    return _this;\n  }\n\n  ClockTime.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.radius !== nextProps.radius || this.props.index !== nextProps.index) {\n      this._setPosition(nextProps, this._time);\n    }\n  };\n\n  ClockTime.prototype.render = function render() {\n    var _props = this.props,\n        time = _props.time,\n        active = _props.active;\n\n    return React.createElement(\n      'div',\n      {\n        ref: this._setTime,\n        tabIndex: 0,\n        className: cn('md-clock-time md-text-no-select md-pointer--none', {\n          'md-picker-text--active': active\n        }, themeColors({ text: !active })),\n        style: this.state.style,\n        onKeyUp: this._handleKeyUp\n      },\n      React.createElement(\n        'span',\n        { className: 'md-clock-time-value' },\n        time\n      )\n    );\n  };\n\n  return ClockTime;\n}(PureComponent);\n\nClockTime.propTypes = {\n  /**\n   * The index of the current time to be displayed. This\n   * should be a number between 1 and 24.\n   */\n  index: PropTypes.number.isRequired,\n\n  /**\n   * The time number to display.\n   */\n  time: PropTypes.number.isRequired,\n\n  /**\n   * Boolean if this time is currently selected.\n   */\n  active: PropTypes.bool.isRequired,\n\n  /**\n   * The radius of the clock.\n   */\n  radius: PropTypes.number.isRequired,\n\n  onKeyboardFocus: PropTypes.func.isRequired\n};\nexport default ClockTime;"]},"metadata":{},"sourceType":"module"}