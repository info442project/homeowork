{"ast":null,"code":"/** @module utils/PropTypes/between */\nimport isBetween from '../NumberUtils/isBetween';\n/**\n * Validates that a number is between a min and max value.\n *\n * @param {function} validator - The number validator to use.\n * @param {number} min - The min number to use.\n * @param {number} max - The max number to use.\n * @return {Error} the prop type error or null\n */\n\nexport default function between(validator, min, max) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    var err = validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n    var value = props[propName];\n\n    if (!err && typeof value !== 'undefined' && !isBetween(value, min, max)) {\n      err = new Error('You provided a `' + propFullNameSafe + '` ' + location + ' to the ' + componentNameSafe + ' that was ' + ('not within the range from \\'' + min + ' - ' + max + '\\'. `' + propFullNameSafe + '`: ' + value + '.'));\n    }\n\n    return err;\n  };\n}","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/utils/PropTypes/between.js"],"names":["isBetween","between","validator","min","max","validate","props","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","_len","arguments","length","args","Array","_key","err","apply","undefined","concat","value","Error"],"mappings":"AAAA;AAEA,OAAOA,SAAP,MAAsB,0BAAtB;AAEA;;;;;;;;;AAQA,eAAe,SAASC,OAAT,CAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsC;AACnD,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCC,aAAnC,EAAkDC,QAAlD,EAA4DC,YAA5D,EAA0E;AAC/E,QAAIC,iBAAiB,GAAGH,aAAa,IAAI,eAAzC;AACA,QAAII,gBAAgB,GAAGF,YAAY,IAAIH,QAAvC;;AAEA,SAAK,IAAIM,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAvB,CAAzC,EAAoEK,IAAI,GAAG,CAAhF,EAAmFA,IAAI,GAAGL,IAA1F,EAAgGK,IAAI,EAApG,EAAwG;AACtGF,MAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAED,QAAIC,GAAG,GAAGjB,SAAS,CAACkB,KAAV,CAAgBC,SAAhB,EAA2B,CAACf,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyDY,MAAzD,CAAgEN,IAAhE,CAA3B,CAAV;AACA,QAAIO,KAAK,GAAGjB,KAAK,CAACC,QAAD,CAAjB;;AACA,QAAI,CAACY,GAAD,IAAQ,OAAOI,KAAP,KAAiB,WAAzB,IAAwC,CAACvB,SAAS,CAACuB,KAAD,EAAQpB,GAAR,EAAaC,GAAb,CAAtD,EAAyE;AACvEe,MAAAA,GAAG,GAAG,IAAIK,KAAJ,CAAU,qBAAqBZ,gBAArB,GAAwC,IAAxC,GAA+CH,QAA/C,GAA0D,UAA1D,GAAuEE,iBAAvE,GAA2F,YAA3F,IAA2G,iCAAiCR,GAAjC,GAAuC,KAAvC,GAA+CC,GAA/C,GAAqD,OAArD,GAA+DQ,gBAA/D,GAAkF,KAAlF,GAA0FW,KAA1F,GAAkG,GAA7M,CAAV,CAAN;AACD;;AAED,WAAOJ,GAAP;AACD,GAfD;AAgBD","sourcesContent":["/** @module utils/PropTypes/between */\n\nimport isBetween from '../NumberUtils/isBetween';\n\n/**\n * Validates that a number is between a min and max value.\n *\n * @param {function} validator - The number validator to use.\n * @param {number} min - The min number to use.\n * @param {number} max - The max number to use.\n * @return {Error} the prop type error or null\n */\nexport default function between(validator, min, max) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    var err = validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n    var value = props[propName];\n    if (!err && typeof value !== 'undefined' && !isBetween(value, min, max)) {\n      err = new Error('You provided a `' + propFullNameSafe + '` ' + location + ' to the ' + componentNameSafe + ' that was ' + ('not within the range from \\'' + min + ' - ' + max + '\\'. `' + propFullNameSafe + '`: ' + value + '.'));\n    }\n\n    return err;\n  };\n}"]},"metadata":{},"sourceType":"module"}