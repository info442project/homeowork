{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport { ESC } from '../constants/keyCodes';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getField from '../utils/getField';\nimport toggleScroll from '../utils/toggleScroll';\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport Dialog from './Dialog';\nimport Portal from '../Helpers/Portal';\n/**\n * The `DialogContainer` component is used for dynamically creating the `Dialog` with\n * transitions.\n */\n\nvar DialogContainer = function (_PureComponent) {\n  _inherits(DialogContainer, _PureComponent);\n\n  function DialogContainer(props) {\n    _classCallCheck(this, DialogContainer);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var visible = typeof props.isOpen !== 'undefined' ? props.isOpen : props.visible;\n    var dialogVisible = visible && !props.defaultVisibleTransitionable;\n    _this.state = {\n      active: visible && !props.fullPage,\n      portalVisible: visible,\n      dialogVisible: dialogVisible\n    };\n    return _this;\n  }\n  /* eslint-disable max-len */\n\n\n  DialogContainer.prototype.componentDidMount = function componentDidMount() {\n    if (!this.props.isOpen && !this.props.visible) {\n      return;\n    }\n\n    this._mountDialog(this.props);\n  };\n\n  DialogContainer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var visible = typeof nextProps.isOpen !== 'undefined' ? nextProps.isOpen : nextProps.visible;\n\n    if (this.props.isOpen === visible || this.props.visible === visible) {\n      return;\n    }\n\n    var el = getField(this.props, this.context, 'renderNode') || window;\n    var pageX = el.scrollX,\n        pageY = el.scrollY;\n\n    if (typeof el.scrollTop !== 'undefined' && typeof el.scrollLeft !== 'undefined') {\n      pageX = el.scrollLeft;\n      pageY = el.scrollTop;\n    } else if (typeof el.scrollY !== 'undefined' && typeof el.scrollX !== 'undefined') {\n      pageX = el.scrollX;\n      pageY = el.scrollY;\n    }\n\n    this._pageX = pageX;\n    this._pageY = pageY;\n\n    if (this._inTimeout) {\n      clearTimeout(this._inTimeout);\n      this._inTimeout = null;\n    }\n\n    if (visible) {\n      this._activeElement = document.activeElement;\n\n      this._mountPortal(nextProps);\n    } else {\n      this.setState({\n        dialogVisible: false,\n        active: false\n      });\n    }\n  };\n\n  DialogContainer.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _props = this.props,\n        visible = _props.visible,\n        closeOnEsc = _props.closeOnEsc; // Only going to support visible here since it was not implemented before.\n\n    if (visible === prevProps.visible && closeOnEsc === prevProps.closeOnEsc) {\n      return;\n    }\n\n    var add = false;\n    var remove = false;\n\n    if (closeOnEsc !== prevProps.closeOnEsc) {\n      add = visible && closeOnEsc;\n      remove = !visible || prevProps.closeOnEsc && !closeOnEsc;\n    } else if (closeOnEsc) {\n      add = visible;\n      remove = !visible;\n    }\n\n    if (add) {\n      window.addEventListener('keydown', this._handleEscClose);\n    } else if (remove) {\n      window.removeEventListener('keydown', this._handleEscClose);\n    }\n  };\n\n  DialogContainer.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.isOpen || this.props.visible) {\n      toggleScroll(false);\n    }\n\n    if (this.props.visible && this.props.closeOnEsc) {\n      window.removeEventListener('keydown', this._handleEscClose);\n    }\n\n    if (this._inTimeout) {\n      clearTimeout(this._inTimeout);\n    }\n  };\n\n  DialogContainer.prototype.render = function render() {\n    var _state = this.state,\n        active = _state.active,\n        dialogVisible = _state.dialogVisible,\n        portalVisible = _state.portalVisible;\n\n    var _props2 = this.props,\n        style = _props2.style,\n        className = _props2.className,\n        dialogStyle = _props2.dialogStyle,\n        dialogClassName = _props2.dialogClassName,\n        modal = _props2.modal,\n        fullPage = _props2.fullPage,\n        component = _props2.component,\n        transitionEnterTimeout = _props2.transitionEnterTimeout,\n        transitionLeaveTimeout = _props2.transitionLeaveTimeout,\n        lastChild = _props2.lastChild,\n        portal = _props2.portal,\n        propVisible = _props2.visible,\n        propRenderNode = _props2.renderNode,\n        closeOnEsc = _props2.closeOnEsc,\n        onShow = _props2.onShow,\n        onHide = _props2.onHide,\n        disableScrollLocking = _props2.disableScrollLocking,\n        defaultVisibleTransitionable = _props2.defaultVisibleTransitionable,\n        activeElementFocus = _props2.activeElementFocus,\n        close = _props2.close,\n        isOpen = _props2.isOpen,\n        actionLeft = _props2.actionLeft,\n        actionRight = _props2.actionRight,\n        transitionName = _props2.transitionName,\n        transitionEnter = _props2.transitionEnter,\n        transitionLeave = _props2.transitionLeave,\n        props = _objectWithoutProperties(_props2, ['style', 'className', 'dialogStyle', 'dialogClassName', 'modal', 'fullPage', 'component', 'transitionEnterTimeout', 'transitionLeaveTimeout', 'lastChild', 'portal', 'visible', 'renderNode', 'closeOnEsc', 'onShow', 'onHide', 'disableScrollLocking', 'defaultVisibleTransitionable', 'activeElementFocus', 'close', 'isOpen', 'actionLeft', 'actionRight', 'transitionName', 'transitionEnter', 'transitionLeave']);\n\n    var renderNode = getField(this.props, this.context, 'renderNode');\n    var dialog = React.createElement(Dialog, _extends({\n      key: 'dialog',\n      style: dialogStyle,\n      className: cn('md-background--card', dialogClassName),\n      ref: this._handleDialogMounting,\n      centered: !fullPage,\n      fullPage: fullPage\n    }, props, {\n      containerX: this._pageX,\n      containerY: this._pageY,\n      onLeave: this._unmountPortal\n    }));\n    var container = React.createElement(CSSTransitionGroup, {\n      component: component,\n      ref: this._setContainer,\n      style: style,\n      className: cn('md-dialog-container', {\n        'md-overlay': !fullPage,\n        'md-overlay--active': !fullPage && active && propVisible,\n        'md-pointer--hover': !fullPage && !modal && propVisible\n      }, className),\n      transitionName: 'md-dialog--' + (fullPage ? 'full-page' : 'centered'),\n      transitionEnterTimeout: transitionEnterTimeout,\n      transitionLeaveTimeout: transitionLeaveTimeout,\n      tabIndex: -1,\n      onClick: this._handleClick\n    }, dialogVisible ? dialog : null);\n\n    if (!portal) {\n      return portalVisible ? container : null;\n    }\n\n    return React.createElement(Portal, {\n      visible: portalVisible,\n      renderNode: renderNode,\n      lastChild: lastChild\n    }, container);\n  };\n\n  return DialogContainer;\n}(PureComponent);\n\nDialogContainer.propTypes = {\n  /**\n   * An id to use for the `Dialog` once it has been opened. This is used for the\n   * [dialog role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_dialog_role).\n   * This is used to generate an `id` for the `title` prop when it has been defined.\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n\n  /* eslint-enable max-len */\n\n  /**\n   * An optional accessibility prop to use when the `Dialog` is opened. This should be an id\n   * pointing to some text that describes the content of the dialog. For accessibility\n   * reasons, one of the following props must be defined:\n   * - `title`\n   * - `aria-describedby`\n   * - `aria-labelledby`\n   * - `aria-label`\n   *\n   * An example usage:\n   *\n   * ```js\n   * <Dialog id=\"accessible-example\" visible aria-describedby=\"accessible-content\">\n   *   <p id=\"accessible-content\">This is some content that describes the dialog.</p>\n   * </Dialog>\n   * ```\n   */\n  'aria-describedby': oneRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'title', 'aria-labelledby', 'aria-label'),\n\n  /**\n   * An optional accessibility prop to use when the `title` prop is not given. This should be\n   * an id pointing to a `h` tag that labels the dialog.\n   *\n   * An example usage:\n   *\n   * ```js\n   * <Dialog visible id=\"accessible-example\" aria-labelledby=\"accessible-dialog-label\">\n   *   <h2 id=\"accessible-dialog-label\">Some Accessible Dialog</h2>\n   * </Dialog>\n   * ```\n   */\n  'aria-labelledby': PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional accessibility prop to use when the `title` and `aria-labelledby` props are\n   * not defined. This should be a string that describes what is in the `Dialog`.\n   *\n   * An example usage:\n   *\n   * ```js\n   * <Dialog visible id=\"accessible-example\" aria-label=\"Some Accessible Dialog\">\n   *   <p>Lorem Ipsum</p>\n   * </Dialog>\n   * ```\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An optional style to apply to the dialog's container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the dialog's container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the dialog itself when the `visible` prop is `true`.\n   */\n  dialogStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the dialog itself when the `visible` prop is `true`.\n   */\n  dialogClassName: PropTypes.string,\n\n  /**\n   * An optional styke to apply to the title.\n   */\n  titleStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the title.\n   */\n  titleClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the footer. This is used when the `actions`\n   * prop is defined.\n   */\n  footerStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the footer. This is used when the `actions`\n   * prop is defined.\n   */\n  footerClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the dialog's content.\n   */\n  contentStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the dialog's content.\n   */\n  contentClassName: PropTypes.string,\n\n  /**\n   * The component to render the dialog's container in.\n   */\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * The component to render the dialog's content in.\n   */\n  contentComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * The content to display in the dialog once open.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A single action or a list of actions to display in the dialog. This can either be a list\n   * of `FlatButton` props or `<Button flat {...props} />` elements.\n   */\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.element, PropTypes.object]))]),\n\n  /**\n   * Boolean if the `Dialog` is current visible.\n   */\n  visible: PropTypes.bool.isRequired,\n\n  /**\n   * An optional function to call when the `visible` prop is changed from `false` to `true`.\n   */\n  onShow: PropTypes.func,\n\n  /**\n   * A function to call that will close the dialog. This is required when the `modal` and `fullPage`\n   * props are not `true`.\n   */\n  onHide: function onHide(props, propName) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    var validator = PropTypes.func;\n\n    if (!props.modal && !props.fullPage) {\n      validator = validator.isRequired;\n    }\n\n    return validator.apply(undefined, [props, propName].concat(args));\n  },\n\n  /**\n   * Boolean if the dialog should behave like a modal. This means that the dialog can only\n   * be closed by clicking on an action instead of also clicking on the overlay.\n   *\n   * NOTE: Unless the `closeOnEsc` prop is disabled as well, the user can still press the escape\n   * key to close this modal.\n   */\n  modal: PropTypes.bool,\n\n  /**\n   * Boolean if the dialog should be displayed as a full page dialog.\n   */\n  fullPage: function fullPage(props, propName, componentName) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      args[_key2 - 3] = arguments[_key2];\n    }\n\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var err = PropTypes.bool.apply(PropTypes, [props, propName, componentName].concat(args));\n\n    if (!err && props[propName] && typeof props.title !== 'undefined') {\n      err = new Error('You provided a `title` ' + location + ' to the `' + componentNameSafe + '` when `fullPage` ' + 'has been set to true. A title for a full page dialog should be rendered as a child instead.');\n    }\n\n    return err;\n  },\n\n  /**\n   * An optional pageX location to use when rendering a full page dialog. This is used to set the location\n   * the dialog should appear from.\n   */\n  pageX: PropTypes.number,\n\n  /**\n   * An optional pageY location to use when rendering a full page dialog. This is used to set the location\n   * the dialog should appear from.\n   */\n  pageY: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/FocusContainer#additionalFocusKeys}\n   */\n  additionalFocusKeys: Dialog.propTypes.additionalFocusKeys,\n\n  /**\n   * @see {@link Helpers/FocusContainer#initialFocus}\n   */\n  initialFocus: Dialog.propTypes.initialFocus,\n\n  /**\n   * @see {@link Helpers/FocusContainer#focusOnMount}\n   */\n  focusOnMount: Dialog.propTypes.focusOnMount,\n\n  /**\n   * @see {@link Helpers/FocusContainer#containFocus}\n   */\n  containFocus: Dialog.propTypes.containFocus,\n\n  /**\n   * The transition enter timeout for the dialog.\n   */\n  transitionEnterTimeout: PropTypes.number.isRequired,\n\n  /**\n   * The transition leave timeout for the dialog.\n   */\n  transitionLeaveTimeout: PropTypes.number.isRequired,\n\n  /**\n   * Boolean if the dialog should be closable by pressing the escape key.\n   */\n  closeOnEsc: PropTypes.bool,\n\n  /**\n   * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n   * to the dialog.\n   *\n   * @see {@link Helpers/Portal}\n   */\n  portal: PropTypes.bool,\n\n  /**\n   * Since the `Dialog` uses the `Portal` component, you can pass an optional HTML Node to render\n   * the dialog in instead of the `document.body`.\n   */\n  renderNode: PropTypes.object,\n\n  /**\n   * Boolean if the dialog should be rendered as the last child in the `renderNode` or `body` instead\n   * of as the first.\n   */\n  lastChild: PropTypes.bool,\n\n  /**\n   * An optional title for the dialog.\n   */\n  title: PropTypes.node,\n\n  /**\n   * Boolean if the dialog should animate into view if it is constructed with `visible` enabled.\n   *\n   * This basically means that if the `Dialog` has `visible` enabled on initial page load, does it animate?\n   * In some cases, it can also mean if the `Dialog` is added to the render tree with `visible` enabled,\n   * does it animate?\n   */\n  defaultVisibleTransitionable: PropTypes.bool,\n\n  /**\n   * Boolean if the Dialog should no longer try to prevent the parent container from scrolling while visible.\n   * In most cases, this will attempt to prevent the main window scrolling. If this dialog is nested in another\n   * dialog, it will attempt to prevent the parent dialog from scrolling.\n   */\n  disableScrollLocking: PropTypes.bool,\n\n  /**\n   * Boolean if the dialog should automatically try to determine if the content\n   * should be padded. It will be padded if the dialog does not contain a `List`.\n   */\n  autopadContent: PropTypes.bool,\n\n  /**\n   * Boolean if the dialog content's size should automatically be resized to overflow\n   * correctly when there is a lot of content. This will calculate and apply some `maxHeight`\n   * to the `contentStyle`.\n   */\n  autosizeContent: PropTypes.bool,\n\n  /**\n   * An optional height to apply to the dialog. This is used if it is easier to just apply height/width\n   * with for specific dialogs instead of in CSS.\n   *\n   * **This prop should not be used if the `fullPage` prop is enabled.**\n   *\n   * @see {@link #fullPage}\n   * @see {@link #width}\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional width to apply to the dialog. This is used if it is easier to just apply height/width\n   * with for specific dialogs instead of in CSS.\n   *\n   * **This prop should not be used if the `fullPage` prop is enabled.**\n   *\n   * @see {@link #fullPage}\n   * @see {@link #height}\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Boolean if the actions should be stacked on top of each other. If this value is `undefined`, it will\n   * automatically attempt to guess if the items should be stacked.\n   */\n  stackedActions: PropTypes.bool,\n\n  /**\n   * Boolean if the active element should be focused after closing the dialog. It is generally recommended to\n   * keep this enabled so that keyboard users do not lose their place within the application after a dialog is\n   * closed. When this is set to false, you should implement your own focus logic.\n   */\n  activeElementFocus: PropTypes.bool,\n  isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n  transitionName: deprecated(PropTypes.string, 'The transition name will be managed by the component'),\n  transitionEnter: deprecated(PropTypes.bool, 'The transition will always be enforced'),\n  transitionLeave: deprecated(PropTypes.bool, 'The transition will always be enforced'),\n  actionLeft: deprecated(PropTypes.node, 'Use the `fullPage` prop instead'),\n  actionRight: deprecated(PropTypes.node, 'Use the `fullPage` prop instead'),\n  close: deprecated(PropTypes.func, 'Use `onHide` instead')\n};\nDialogContainer.defaultProps = {\n  autopadContent: true,\n  autosizeContent: true,\n  component: 'span',\n  closeOnEsc: true,\n  contentComponent: 'section',\n  focusOnMount: true,\n  transitionEnterTimeout: 300,\n  transitionLeaveTimeout: 300,\n  defaultVisibleTransitionable: false,\n  activeElementFocus: true\n};\nDialogContainer.contextTypes = {\n  renderNode: PropTypes.object\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setContainer = function (container) {\n    if (container !== null) {\n      _this2._container = findDOMNode(container);\n    }\n  };\n\n  this._handleEscClose = function (e) {\n    if ((e.which || e.keyCode) === ESC) {\n      (_this2.props.onHide || _this2.props.close)(e);\n    }\n  };\n\n  this._mountPortal = function (props) {\n    _this2._mountDialog(props);\n\n    _this2.setState({\n      portalVisible: true\n    });\n  };\n\n  this._mountDialog = function (props) {\n    var fullPage = props.fullPage,\n        onShow = props.onShow;\n    _this2._inTimeout = setTimeout(function () {\n      _this2._inTimeout = fullPage ? null : setTimeout(function () {\n        _this2._inTimeout = null;\n\n        _this2.setState({\n          active: true\n        });\n      }, TICK);\n\n      _this2.setState({\n        dialogVisible: true\n      }, onShow);\n    }, TICK);\n  };\n\n  this._unmountPortal = function () {\n    _this2.setState({\n      portalVisible: false\n    });\n  };\n\n  this._handleClick = function (e) {\n    var visible = typeof _this2.props.isOpen !== 'undefined' ? _this2.props.isOpen : _this2.props.visible;\n\n    if (_this2.props.modal || !visible || e.target !== _this2._container) {\n      return;\n    }\n\n    (_this2.props.onHide || _this2.props.close)(e);\n  };\n\n  this._handleDialogMounting = function (dialog) {\n    var disableScrollLocking = _this2.props.disableScrollLocking;\n\n    if (dialog === null) {\n      if (_this2._activeElement && _this2._activeElement.focus && _this2.props.activeElementFocus) {\n        _this2._activeElement.focus();\n      }\n\n      if (!disableScrollLocking) {\n        toggleScroll(false, _this2.scrollEl);\n      }\n\n      _this2._activeElement = null;\n    } else {\n      var container = document.getElementById(_this2.props.id);\n\n      if (!container || disableScrollLocking) {\n        return;\n      }\n\n      var el = getField(_this2.props, _this2.context, 'renderNode');\n      var node = container.parentNode;\n\n      while (node && node.classList && !el) {\n        if (node.classList.contains('md-dialog')) {\n          el = node;\n        }\n\n        node = node.parentNode;\n      }\n\n      _this2.scrollEl = el;\n      toggleScroll(true, el);\n    }\n  };\n};\n\nexport default DialogContainer;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Dialogs/DialogContainer.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","findDOMNode","CSSTransitionGroup","cn","deprecated","isRequiredForA11y","ESC","TICK","getField","toggleScroll","oneRequiredForA11y","Dialog","Portal","DialogContainer","_PureComponent","props","_this","_initialiseProps","visible","isOpen","dialogVisible","defaultVisibleTransitionable","state","active","fullPage","portalVisible","componentDidMount","_mountDialog","componentWillReceiveProps","nextProps","el","context","window","pageX","scrollX","pageY","scrollY","scrollTop","scrollLeft","_pageX","_pageY","_inTimeout","clearTimeout","_activeElement","document","activeElement","_mountPortal","setState","componentDidUpdate","prevProps","_props","closeOnEsc","add","remove","addEventListener","_handleEscClose","removeEventListener","componentWillUnmount","render","_state","_props2","style","className","dialogStyle","dialogClassName","modal","component","transitionEnterTimeout","transitionLeaveTimeout","lastChild","portal","propVisible","propRenderNode","renderNode","onShow","onHide","disableScrollLocking","activeElementFocus","close","actionLeft","actionRight","transitionName","transitionEnter","transitionLeave","dialog","createElement","ref","_handleDialogMounting","centered","containerX","containerY","onLeave","_unmountPortal","container","_setContainer","tabIndex","onClick","_handleClick","propTypes","id","oneOfType","number","string","object","titleStyle","titleClassName","footerStyle","footerClassName","contentStyle","contentClassName","func","isRequired","contentComponent","children","node","actions","element","arrayOf","bool","propName","_len","args","Array","_key","validator","apply","undefined","concat","componentName","_len2","_key2","componentNameSafe","err","title","Error","location","additionalFocusKeys","initialFocus","focusOnMount","containFocus","autopadContent","autosizeContent","height","width","stackedActions","defaultProps","contextTypes","_this2","_container","e","which","keyCode","setTimeout","focus","scrollEl","getElementById","parentNode","classList","contains"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport { ESC } from '../constants/keyCodes';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getField from '../utils/getField';\nimport toggleScroll from '../utils/toggleScroll';\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport Dialog from './Dialog';\nimport Portal from '../Helpers/Portal';\n\n/**\n * The `DialogContainer` component is used for dynamically creating the `Dialog` with\n * transitions.\n */\n\nvar DialogContainer = function (_PureComponent) {\n  _inherits(DialogContainer, _PureComponent);\n\n  function DialogContainer(props) {\n    _classCallCheck(this, DialogContainer);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var visible = typeof props.isOpen !== 'undefined' ? props.isOpen : props.visible;\n    var dialogVisible = visible && !props.defaultVisibleTransitionable;\n\n    _this.state = {\n      active: visible && !props.fullPage,\n      portalVisible: visible,\n      dialogVisible: dialogVisible\n    };\n    return _this;\n  }\n  /* eslint-disable max-len */\n\n\n  DialogContainer.prototype.componentDidMount = function componentDidMount() {\n    if (!this.props.isOpen && !this.props.visible) {\n      return;\n    }\n\n    this._mountDialog(this.props);\n  };\n\n  DialogContainer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var visible = typeof nextProps.isOpen !== 'undefined' ? nextProps.isOpen : nextProps.visible;\n    if (this.props.isOpen === visible || this.props.visible === visible) {\n      return;\n    }\n\n    var el = getField(this.props, this.context, 'renderNode') || window;\n    var pageX = el.scrollX,\n        pageY = el.scrollY;\n\n    if (typeof el.scrollTop !== 'undefined' && typeof el.scrollLeft !== 'undefined') {\n      pageX = el.scrollLeft;\n      pageY = el.scrollTop;\n    } else if (typeof el.scrollY !== 'undefined' && typeof el.scrollX !== 'undefined') {\n      pageX = el.scrollX;\n      pageY = el.scrollY;\n    }\n\n    this._pageX = pageX;\n    this._pageY = pageY;\n\n    if (this._inTimeout) {\n      clearTimeout(this._inTimeout);\n      this._inTimeout = null;\n    }\n\n    if (visible) {\n      this._activeElement = document.activeElement;\n      this._mountPortal(nextProps);\n    } else {\n      this.setState({ dialogVisible: false, active: false });\n    }\n  };\n\n  DialogContainer.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _props = this.props,\n        visible = _props.visible,\n        closeOnEsc = _props.closeOnEsc;\n\n    // Only going to support visible here since it was not implemented before.\n\n    if (visible === prevProps.visible && closeOnEsc === prevProps.closeOnEsc) {\n      return;\n    }\n\n    var add = false;\n    var remove = false;\n    if (closeOnEsc !== prevProps.closeOnEsc) {\n      add = visible && closeOnEsc;\n      remove = !visible || prevProps.closeOnEsc && !closeOnEsc;\n    } else if (closeOnEsc) {\n      add = visible;\n      remove = !visible;\n    }\n\n    if (add) {\n      window.addEventListener('keydown', this._handleEscClose);\n    } else if (remove) {\n      window.removeEventListener('keydown', this._handleEscClose);\n    }\n  };\n\n  DialogContainer.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.isOpen || this.props.visible) {\n      toggleScroll(false);\n    }\n\n    if (this.props.visible && this.props.closeOnEsc) {\n      window.removeEventListener('keydown', this._handleEscClose);\n    }\n\n    if (this._inTimeout) {\n      clearTimeout(this._inTimeout);\n    }\n  };\n\n  DialogContainer.prototype.render = function render() {\n    var _state = this.state,\n        active = _state.active,\n        dialogVisible = _state.dialogVisible,\n        portalVisible = _state.portalVisible;\n\n    var _props2 = this.props,\n        style = _props2.style,\n        className = _props2.className,\n        dialogStyle = _props2.dialogStyle,\n        dialogClassName = _props2.dialogClassName,\n        modal = _props2.modal,\n        fullPage = _props2.fullPage,\n        component = _props2.component,\n        transitionEnterTimeout = _props2.transitionEnterTimeout,\n        transitionLeaveTimeout = _props2.transitionLeaveTimeout,\n        lastChild = _props2.lastChild,\n        portal = _props2.portal,\n        propVisible = _props2.visible,\n        propRenderNode = _props2.renderNode,\n        closeOnEsc = _props2.closeOnEsc,\n        onShow = _props2.onShow,\n        onHide = _props2.onHide,\n        disableScrollLocking = _props2.disableScrollLocking,\n        defaultVisibleTransitionable = _props2.defaultVisibleTransitionable,\n        activeElementFocus = _props2.activeElementFocus,\n        close = _props2.close,\n        isOpen = _props2.isOpen,\n        actionLeft = _props2.actionLeft,\n        actionRight = _props2.actionRight,\n        transitionName = _props2.transitionName,\n        transitionEnter = _props2.transitionEnter,\n        transitionLeave = _props2.transitionLeave,\n        props = _objectWithoutProperties(_props2, ['style', 'className', 'dialogStyle', 'dialogClassName', 'modal', 'fullPage', 'component', 'transitionEnterTimeout', 'transitionLeaveTimeout', 'lastChild', 'portal', 'visible', 'renderNode', 'closeOnEsc', 'onShow', 'onHide', 'disableScrollLocking', 'defaultVisibleTransitionable', 'activeElementFocus', 'close', 'isOpen', 'actionLeft', 'actionRight', 'transitionName', 'transitionEnter', 'transitionLeave']);\n\n    var renderNode = getField(this.props, this.context, 'renderNode');\n    var dialog = React.createElement(Dialog, _extends({\n      key: 'dialog',\n      style: dialogStyle,\n      className: cn('md-background--card', dialogClassName),\n      ref: this._handleDialogMounting,\n      centered: !fullPage,\n      fullPage: fullPage\n    }, props, {\n      containerX: this._pageX,\n      containerY: this._pageY,\n      onLeave: this._unmountPortal\n    }));\n\n    var container = React.createElement(\n      CSSTransitionGroup,\n      {\n        component: component,\n        ref: this._setContainer,\n        style: style,\n        className: cn('md-dialog-container', {\n          'md-overlay': !fullPage,\n          'md-overlay--active': !fullPage && active && propVisible,\n          'md-pointer--hover': !fullPage && !modal && propVisible\n        }, className),\n        transitionName: 'md-dialog--' + (fullPage ? 'full-page' : 'centered'),\n        transitionEnterTimeout: transitionEnterTimeout,\n        transitionLeaveTimeout: transitionLeaveTimeout,\n        tabIndex: -1,\n        onClick: this._handleClick\n      },\n      dialogVisible ? dialog : null\n    );\n\n    if (!portal) {\n      return portalVisible ? container : null;\n    }\n\n    return React.createElement(\n      Portal,\n      { visible: portalVisible, renderNode: renderNode, lastChild: lastChild },\n      container\n    );\n  };\n\n  return DialogContainer;\n}(PureComponent);\n\nDialogContainer.propTypes = {\n  /**\n   * An id to use for the `Dialog` once it has been opened. This is used for the\n   * [dialog role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_dialog_role).\n   * This is used to generate an `id` for the `title` prop when it has been defined.\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n  /* eslint-enable max-len */\n\n  /**\n   * An optional accessibility prop to use when the `Dialog` is opened. This should be an id\n   * pointing to some text that describes the content of the dialog. For accessibility\n   * reasons, one of the following props must be defined:\n   * - `title`\n   * - `aria-describedby`\n   * - `aria-labelledby`\n   * - `aria-label`\n   *\n   * An example usage:\n   *\n   * ```js\n   * <Dialog id=\"accessible-example\" visible aria-describedby=\"accessible-content\">\n   *   <p id=\"accessible-content\">This is some content that describes the dialog.</p>\n   * </Dialog>\n   * ```\n   */\n  'aria-describedby': oneRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'title', 'aria-labelledby', 'aria-label'),\n\n  /**\n   * An optional accessibility prop to use when the `title` prop is not given. This should be\n   * an id pointing to a `h` tag that labels the dialog.\n   *\n   * An example usage:\n   *\n   * ```js\n   * <Dialog visible id=\"accessible-example\" aria-labelledby=\"accessible-dialog-label\">\n   *   <h2 id=\"accessible-dialog-label\">Some Accessible Dialog</h2>\n   * </Dialog>\n   * ```\n   */\n  'aria-labelledby': PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional accessibility prop to use when the `title` and `aria-labelledby` props are\n   * not defined. This should be a string that describes what is in the `Dialog`.\n   *\n   * An example usage:\n   *\n   * ```js\n   * <Dialog visible id=\"accessible-example\" aria-label=\"Some Accessible Dialog\">\n   *   <p>Lorem Ipsum</p>\n   * </Dialog>\n   * ```\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An optional style to apply to the dialog's container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the dialog's container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the dialog itself when the `visible` prop is `true`.\n   */\n  dialogStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the dialog itself when the `visible` prop is `true`.\n   */\n  dialogClassName: PropTypes.string,\n\n  /**\n   * An optional styke to apply to the title.\n   */\n  titleStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the title.\n   */\n  titleClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the footer. This is used when the `actions`\n   * prop is defined.\n   */\n  footerStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the footer. This is used when the `actions`\n   * prop is defined.\n   */\n  footerClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the dialog's content.\n   */\n  contentStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the dialog's content.\n   */\n  contentClassName: PropTypes.string,\n\n  /**\n   * The component to render the dialog's container in.\n   */\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * The component to render the dialog's content in.\n   */\n  contentComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * The content to display in the dialog once open.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A single action or a list of actions to display in the dialog. This can either be a list\n   * of `FlatButton` props or `<Button flat {...props} />` elements.\n   */\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.element, PropTypes.object]))]),\n\n  /**\n   * Boolean if the `Dialog` is current visible.\n   */\n  visible: PropTypes.bool.isRequired,\n\n  /**\n   * An optional function to call when the `visible` prop is changed from `false` to `true`.\n   */\n  onShow: PropTypes.func,\n\n  /**\n   * A function to call that will close the dialog. This is required when the `modal` and `fullPage`\n   * props are not `true`.\n   */\n  onHide: function onHide(props, propName) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    var validator = PropTypes.func;\n    if (!props.modal && !props.fullPage) {\n      validator = validator.isRequired;\n    }\n\n    return validator.apply(undefined, [props, propName].concat(args));\n  },\n\n  /**\n   * Boolean if the dialog should behave like a modal. This means that the dialog can only\n   * be closed by clicking on an action instead of also clicking on the overlay.\n   *\n   * NOTE: Unless the `closeOnEsc` prop is disabled as well, the user can still press the escape\n   * key to close this modal.\n   */\n  modal: PropTypes.bool,\n\n  /**\n   * Boolean if the dialog should be displayed as a full page dialog.\n   */\n  fullPage: function fullPage(props, propName, componentName) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      args[_key2 - 3] = arguments[_key2];\n    }\n\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var err = PropTypes.bool.apply(PropTypes, [props, propName, componentName].concat(args));\n\n    if (!err && props[propName] && typeof props.title !== 'undefined') {\n      err = new Error('You provided a `title` ' + location + ' to the `' + componentNameSafe + '` when `fullPage` ' + 'has been set to true. A title for a full page dialog should be rendered as a child instead.');\n    }\n\n    return err;\n  },\n\n  /**\n   * An optional pageX location to use when rendering a full page dialog. This is used to set the location\n   * the dialog should appear from.\n   */\n  pageX: PropTypes.number,\n\n  /**\n   * An optional pageY location to use when rendering a full page dialog. This is used to set the location\n   * the dialog should appear from.\n   */\n  pageY: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/FocusContainer#additionalFocusKeys}\n   */\n  additionalFocusKeys: Dialog.propTypes.additionalFocusKeys,\n\n  /**\n   * @see {@link Helpers/FocusContainer#initialFocus}\n   */\n  initialFocus: Dialog.propTypes.initialFocus,\n\n  /**\n   * @see {@link Helpers/FocusContainer#focusOnMount}\n   */\n  focusOnMount: Dialog.propTypes.focusOnMount,\n\n  /**\n   * @see {@link Helpers/FocusContainer#containFocus}\n   */\n  containFocus: Dialog.propTypes.containFocus,\n\n  /**\n   * The transition enter timeout for the dialog.\n   */\n  transitionEnterTimeout: PropTypes.number.isRequired,\n\n  /**\n   * The transition leave timeout for the dialog.\n   */\n  transitionLeaveTimeout: PropTypes.number.isRequired,\n\n  /**\n   * Boolean if the dialog should be closable by pressing the escape key.\n   */\n  closeOnEsc: PropTypes.bool,\n\n  /**\n   * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n   * to the dialog.\n   *\n   * @see {@link Helpers/Portal}\n   */\n  portal: PropTypes.bool,\n\n  /**\n   * Since the `Dialog` uses the `Portal` component, you can pass an optional HTML Node to render\n   * the dialog in instead of the `document.body`.\n   */\n  renderNode: PropTypes.object,\n\n  /**\n   * Boolean if the dialog should be rendered as the last child in the `renderNode` or `body` instead\n   * of as the first.\n   */\n  lastChild: PropTypes.bool,\n\n  /**\n   * An optional title for the dialog.\n   */\n  title: PropTypes.node,\n\n  /**\n   * Boolean if the dialog should animate into view if it is constructed with `visible` enabled.\n   *\n   * This basically means that if the `Dialog` has `visible` enabled on initial page load, does it animate?\n   * In some cases, it can also mean if the `Dialog` is added to the render tree with `visible` enabled,\n   * does it animate?\n   */\n  defaultVisibleTransitionable: PropTypes.bool,\n\n  /**\n   * Boolean if the Dialog should no longer try to prevent the parent container from scrolling while visible.\n   * In most cases, this will attempt to prevent the main window scrolling. If this dialog is nested in another\n   * dialog, it will attempt to prevent the parent dialog from scrolling.\n   */\n  disableScrollLocking: PropTypes.bool,\n\n  /**\n   * Boolean if the dialog should automatically try to determine if the content\n   * should be padded. It will be padded if the dialog does not contain a `List`.\n   */\n  autopadContent: PropTypes.bool,\n\n  /**\n   * Boolean if the dialog content's size should automatically be resized to overflow\n   * correctly when there is a lot of content. This will calculate and apply some `maxHeight`\n   * to the `contentStyle`.\n   */\n  autosizeContent: PropTypes.bool,\n\n  /**\n   * An optional height to apply to the dialog. This is used if it is easier to just apply height/width\n   * with for specific dialogs instead of in CSS.\n   *\n   * **This prop should not be used if the `fullPage` prop is enabled.**\n   *\n   * @see {@link #fullPage}\n   * @see {@link #width}\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional width to apply to the dialog. This is used if it is easier to just apply height/width\n   * with for specific dialogs instead of in CSS.\n   *\n   * **This prop should not be used if the `fullPage` prop is enabled.**\n   *\n   * @see {@link #fullPage}\n   * @see {@link #height}\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Boolean if the actions should be stacked on top of each other. If this value is `undefined`, it will\n   * automatically attempt to guess if the items should be stacked.\n   */\n  stackedActions: PropTypes.bool,\n\n  /**\n   * Boolean if the active element should be focused after closing the dialog. It is generally recommended to\n   * keep this enabled so that keyboard users do not lose their place within the application after a dialog is\n   * closed. When this is set to false, you should implement your own focus logic.\n   */\n  activeElementFocus: PropTypes.bool,\n\n  isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n  transitionName: deprecated(PropTypes.string, 'The transition name will be managed by the component'),\n  transitionEnter: deprecated(PropTypes.bool, 'The transition will always be enforced'),\n  transitionLeave: deprecated(PropTypes.bool, 'The transition will always be enforced'),\n  actionLeft: deprecated(PropTypes.node, 'Use the `fullPage` prop instead'),\n  actionRight: deprecated(PropTypes.node, 'Use the `fullPage` prop instead'),\n  close: deprecated(PropTypes.func, 'Use `onHide` instead')\n};\nDialogContainer.defaultProps = {\n  autopadContent: true,\n  autosizeContent: true,\n  component: 'span',\n  closeOnEsc: true,\n  contentComponent: 'section',\n  focusOnMount: true,\n  transitionEnterTimeout: 300,\n  transitionLeaveTimeout: 300,\n  defaultVisibleTransitionable: false,\n  activeElementFocus: true\n};\nDialogContainer.contextTypes = {\n  renderNode: PropTypes.object\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setContainer = function (container) {\n    if (container !== null) {\n      _this2._container = findDOMNode(container);\n    }\n  };\n\n  this._handleEscClose = function (e) {\n    if ((e.which || e.keyCode) === ESC) {\n      (_this2.props.onHide || _this2.props.close)(e);\n    }\n  };\n\n  this._mountPortal = function (props) {\n    _this2._mountDialog(props);\n    _this2.setState({ portalVisible: true });\n  };\n\n  this._mountDialog = function (props) {\n    var fullPage = props.fullPage,\n        onShow = props.onShow;\n\n    _this2._inTimeout = setTimeout(function () {\n      _this2._inTimeout = fullPage ? null : setTimeout(function () {\n        _this2._inTimeout = null;\n        _this2.setState({ active: true });\n      }, TICK);\n      _this2.setState({ dialogVisible: true }, onShow);\n    }, TICK);\n  };\n\n  this._unmountPortal = function () {\n    _this2.setState({ portalVisible: false });\n  };\n\n  this._handleClick = function (e) {\n    var visible = typeof _this2.props.isOpen !== 'undefined' ? _this2.props.isOpen : _this2.props.visible;\n    if (_this2.props.modal || !visible || e.target !== _this2._container) {\n      return;\n    }\n\n    (_this2.props.onHide || _this2.props.close)(e);\n  };\n\n  this._handleDialogMounting = function (dialog) {\n    var disableScrollLocking = _this2.props.disableScrollLocking;\n\n    if (dialog === null) {\n      if (_this2._activeElement && _this2._activeElement.focus && _this2.props.activeElementFocus) {\n        _this2._activeElement.focus();\n      }\n\n      if (!disableScrollLocking) {\n        toggleScroll(false, _this2.scrollEl);\n      }\n\n      _this2._activeElement = null;\n    } else {\n      var container = document.getElementById(_this2.props.id);\n      if (!container || disableScrollLocking) {\n        return;\n      }\n\n      var el = getField(_this2.props, _this2.context, 'renderNode');\n      var node = container.parentNode;\n      while (node && node.classList && !el) {\n        if (node.classList.contains('md-dialog')) {\n          el = node;\n        }\n\n        node = node.parentNode;\n      }\n\n      _this2.scrollEl = el;\n      toggleScroll(true, el);\n    }\n  };\n};\n\nexport default DialogContainer;"]},"metadata":{},"sourceType":"module"}