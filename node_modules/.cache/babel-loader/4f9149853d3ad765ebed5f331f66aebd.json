{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport themeColors from '../utils/themeColors';\n/**\n * The `SVGIcon` component is used for rendering inline SVG icons or sprite-mapped SVGs\n * as an icon.\n */\n\nvar SVGIcon = function (_PureComponent) {\n  _inherits(SVGIcon, _PureComponent);\n\n  function SVGIcon(props) {\n    _classCallCheck(this, SVGIcon);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this));\n\n    _this._getIds = function (_ref) {\n      var use = _ref.use,\n          labels = _ref['aria-labelledby'],\n          title = _ref.title,\n          desc = _ref.desc;\n      var titleId = null;\n      var descId = null;\n      var labelledBy = null;\n\n      if (title || desc) {\n        if (use) {\n          var baseId = use.replace(/.*#/, '');\n          titleId = baseId + '-title';\n          descId = baseId + '-desc';\n\n          if (title) {\n            labelledBy = baseId + '-title';\n          }\n\n          if (desc) {\n            labelledBy = '' + (labelledBy ? labelledBy + ' ' : '') + descId;\n          }\n        } else if (labels) {\n          var _labels$split = labels.split(' ');\n\n          titleId = _labels$split[0];\n          descId = _labels$split[1];\n        }\n      }\n\n      return {\n        titleId: titleId,\n        descId: descId,\n        labelledBy: labelledBy\n      };\n    };\n\n    _this._mergeStyles = function (_ref2) {\n      var style = _ref2.style,\n          size = _ref2.size;\n\n      if (style && size) {\n        return _extends({\n          height: size,\n          width: size\n        }, style);\n      } else if (style) {\n        return style;\n      } else if (size) {\n        return {\n          height: size,\n          width: size\n        };\n      }\n\n      return undefined;\n    };\n\n    _this.state = _extends({\n      styles: _this._mergeStyles(props)\n    }, _this._getIds(props));\n    return _this;\n  }\n\n  SVGIcon.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        style = _props.style,\n        size = _props.size,\n        use = _props.use,\n        title = _props.title,\n        desc = _props.desc,\n        labels = _props['aria-labelledby'];\n    var nextState = void 0;\n\n    if (style !== nextProps.style || size !== nextProps.size) {\n      nextState = {\n        styles: this._mergeStyles(nextProps)\n      };\n    }\n\n    if (title !== nextProps.title || desc !== nextProps.desc || (nextProps.title || nextProps.desc) && (use !== nextProps.use || labels !== nextProps['aria-labelledby'])) {\n      nextState = _extends({}, nextState, this._getIds(nextProps));\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  };\n\n  SVGIcon.prototype.render = function render() {\n    var _state = this.state,\n        styles = _state.styles,\n        titleId = _state.titleId,\n        descId = _state.descId,\n        labelledBy = _state.labelledBy;\n\n    var _props2 = this.props,\n        className = _props2.className,\n        disabled = _props2.disabled,\n        use = _props2.use,\n        primary = _props2.primary,\n        secondary = _props2.secondary,\n        error = _props2.error,\n        inherit = _props2.inherit,\n        titleAttr = _props2.titleAttr,\n        ariaLabelledBy = _props2['aria-labelledby'],\n        size = _props2.size,\n        propTitle = _props2.title,\n        propDesc = _props2.desc,\n        propStyle = _props2.style,\n        propChildren = _props2.children,\n        props = _objectWithoutProperties(_props2, ['className', 'disabled', 'use', 'primary', 'secondary', 'error', 'inherit', 'titleAttr', 'aria-labelledby', 'size', 'title', 'desc', 'style', 'children']);\n\n    var _props3 = this.props,\n        children = _props3.children,\n        title = _props3.title,\n        desc = _props3.desc;\n\n    if (!children && use) {\n      children = React.createElement('use', {\n        xlinkHref: use\n      });\n    }\n\n    if (title) {\n      title = React.createElement('title', {\n        id: titleId\n      }, title);\n    }\n\n    if (desc) {\n      desc = React.createElement('desc', {\n        id: descId\n      }, desc);\n    }\n\n    return React.createElement('svg', _extends({}, props, {\n      title: titleAttr,\n      'aria-labelledby': ariaLabelledBy || labelledBy,\n      style: styles,\n      className: cn('md-icon', themeColors({\n        disabled: disabled,\n        error: error,\n        inherit: inherit,\n        primary: primary,\n        secondary: secondary\n      }, className))\n    }), title, desc, children);\n  };\n\n  return SVGIcon;\n}(PureComponent);\n\nSVGIcon.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Boolean if the primary theme color should be applied.\n   */\n  primary: PropTypes.bool,\n\n  /**\n   * Boolean if the secondary theme color should be applied.\n   */\n  secondary: PropTypes.bool,\n\n  /**\n   * Boolean if the icon is considered disabled and should inherit the\n   * disabled color.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Boolean if the icon is considered errored and should inherit the error color.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Boolean if the color of the icon should be inherited by parent elements.\n   */\n  inherit: PropTypes.bool,\n\n  /**\n   * The role to apply to the SVG. When using icons, it is generally recommended to leave it as the default\n   * `img` so that it is insured as a graphic.\n   */\n  role: PropTypes.oneOf(['img', 'presentation']),\n\n  /**\n   * This prop is the title attribute to provide to the `<svg>` element itself. This should be used when you\n   * are using a spritesheet that has defined `<title>` with each SVG symbol.\n   */\n  titleAttr: PropTypes.string,\n\n  /**\n   * An optional list of ids to use to label the SVG icon with. This is helpful to add when you use the `title`\n   * and `desc` props as this is used to create ids for those two props. This is super beneficial to screen readers.\n   *\n   * When this is defined, it is a space-delimited string of ids to provide to the title and desc (in order). If\n   * this is omitted and the `use` prop is defined, it will take everything after the `#` sign and append `-title` and\n   * `-desc` as a fallback. Check out the examples for more information about this.\n   *\n   * @see {@link #title}\n   * @see {@link #desc}\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * An optional title to give to your SVG icon. This is generally recommended for accessibility when not using\n   * the `use` prop, or your spritemap does not contain `<title>` and `<desc>.\n   *\n   * @see {@link #aria-labelledby}\n   */\n  title: PropTypes.string,\n\n  /**\n   * An optional description to give to your SVG icon. This is generally recommended for accessibility when not using\n   * the `use` prop, or your spritemap does not contain `<title>` and `<desc>.\n   *\n   * @see {@link #aria-labelledby}\n   */\n  desc: PropTypes.string,\n\n  /**\n   * This should be a link to a part of an SVG spritemap. So normally one of the following:\n   * - `'#some-custom-svg'`\n   * - `'/images/spritemap.svg#some-custom-svg'`\n   *\n   * This prop **should not** be used with the `children` prop as only one will be rendered.\n   *\n   * > NOTE: IE **does not support** external SVGs. Please see the demo for more details.\n   */\n  use: PropTypes.string,\n\n  /**\n   * Any `<svg>` children to render to create your icon. This can not be used with the `use` prop.\n   */\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element), PropTypes.node]),\n\n  /**\n   * Boolean if the SVG should gain the `focusable` attribute. This is disabled by default since IE11\n   * and Edge actually default this to true and keyboard's will tab focus all SVGs.\n   */\n  focusable: PropTypes.string,\n\n  /**\n   * An optional size to apply to the SVG. This can be used to set both the\n   * `height` and `width` simultaneously. This will be provided as inline styles\n   * since the `height` and `width` are normally controlled by CSS, and CSS has\n   * higher precedence than the `height`/`width` attributes.\n   */\n  size: PropTypes.number,\n\n  /**\n   * The `height` prop should not be used since the `height` and `width` are controlled by CSS and the CSS\n   * has a higher precedence than inline attributes. If you want to set the `height`, it should be done via\n   * CSS or the `size` prop.\n   *\n   * @see {@link #size}\n   */\n  height: deprecated(PropTypes.number, 'Use the `size` prop instead'),\n\n  /**\n   * The `width` prop should not be used since the `height` and `width` are controlled by CSS and the CSS\n   * has a higher precedence than inline attributes. If you want to set the `height`, it should be done via\n   * CSS or the `size` prop.\n   *\n   * @see {@link #size}\n   */\n  width: deprecated(PropTypes.number, 'Use the `size` prop instead'),\n\n  /**\n   * The viewBox attribute allows you to specify that a given set of graphics stretch to\n   * fit a particular container element.\n   *\n   * The value of the viewBox attribute is a list of four numbers min-x, min-y, width and\n   * height, separated by white space and/or a comma, which specify a rectangle in user\n   * space which should be mapped to the bounds of the viewport established by the given\n   * element, taking into account attribute preserveAspectRatio.\n   *\n   * Negative values for width or height are not permitted and a value of zero disables\n   * rendering of the element.An optional viewbox for the SVG.\n   *\n   * For example, if the SVG element is 250 (width) by 200 (height) and you provide\n   * `viewBox=\"0 0 25 20\"`, the coordinates inside the SVG will go from the top left corner\n   * (0, 0) to the bottom right (25, 20) and each unit will be worth `10px`.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * An optional xmlns string to provide. The `use` prop will not work without this prop\n   * defined.\n   */\n  xmlns: PropTypes.string\n};\nSVGIcon.defaultProps = {\n  role: 'img',\n  focusable: 'false',\n  xmlns: 'http://www.w3.org/2000/svg',\n  viewBox: '0 0 24 24'\n};\nexport default SVGIcon;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/SVGIcons/SVGIcon.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","cn","deprecated","themeColors","SVGIcon","_PureComponent","props","_this","_getIds","_ref","use","labels","title","desc","titleId","descId","labelledBy","baseId","replace","_labels$split","split","_mergeStyles","_ref2","style","size","height","width","undefined","state","styles","componentWillReceiveProps","nextProps","_props","nextState","setState","render","_state","_props2","className","disabled","primary","secondary","error","inherit","titleAttr","ariaLabelledBy","propTitle","propDesc","propStyle","propChildren","children","_props3","createElement","xlinkHref","id","propTypes","object","string","bool","role","oneOf","oneOfType","element","arrayOf","node","focusable","number","viewBox","xmlns","defaultProps"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The `SVGIcon` component is used for rendering inline SVG icons or sprite-mapped SVGs\n * as an icon.\n */\n\nvar SVGIcon = function (_PureComponent) {\n  _inherits(SVGIcon, _PureComponent);\n\n  function SVGIcon(props) {\n    _classCallCheck(this, SVGIcon);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this));\n\n    _this._getIds = function (_ref) {\n      var use = _ref.use,\n          labels = _ref['aria-labelledby'],\n          title = _ref.title,\n          desc = _ref.desc;\n\n      var titleId = null;\n      var descId = null;\n      var labelledBy = null;\n      if (title || desc) {\n        if (use) {\n          var baseId = use.replace(/.*#/, '');\n          titleId = baseId + '-title';\n          descId = baseId + '-desc';\n\n          if (title) {\n            labelledBy = baseId + '-title';\n          }\n\n          if (desc) {\n            labelledBy = '' + (labelledBy ? labelledBy + ' ' : '') + descId;\n          }\n        } else if (labels) {\n          var _labels$split = labels.split(' ');\n\n          titleId = _labels$split[0];\n          descId = _labels$split[1];\n        }\n      }\n\n      return { titleId: titleId, descId: descId, labelledBy: labelledBy };\n    };\n\n    _this._mergeStyles = function (_ref2) {\n      var style = _ref2.style,\n          size = _ref2.size;\n\n      if (style && size) {\n        return _extends({ height: size, width: size }, style);\n      } else if (style) {\n        return style;\n      } else if (size) {\n        return { height: size, width: size };\n      }\n\n      return undefined;\n    };\n\n    _this.state = _extends({\n      styles: _this._mergeStyles(props)\n    }, _this._getIds(props));\n    return _this;\n  }\n\n  SVGIcon.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        style = _props.style,\n        size = _props.size,\n        use = _props.use,\n        title = _props.title,\n        desc = _props.desc,\n        labels = _props['aria-labelledby'];\n\n    var nextState = void 0;\n    if (style !== nextProps.style || size !== nextProps.size) {\n      nextState = { styles: this._mergeStyles(nextProps) };\n    }\n\n    if (title !== nextProps.title || desc !== nextProps.desc || (nextProps.title || nextProps.desc) && (use !== nextProps.use || labels !== nextProps['aria-labelledby'])) {\n      nextState = _extends({}, nextState, this._getIds(nextProps));\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  };\n\n  SVGIcon.prototype.render = function render() {\n    var _state = this.state,\n        styles = _state.styles,\n        titleId = _state.titleId,\n        descId = _state.descId,\n        labelledBy = _state.labelledBy;\n\n    var _props2 = this.props,\n        className = _props2.className,\n        disabled = _props2.disabled,\n        use = _props2.use,\n        primary = _props2.primary,\n        secondary = _props2.secondary,\n        error = _props2.error,\n        inherit = _props2.inherit,\n        titleAttr = _props2.titleAttr,\n        ariaLabelledBy = _props2['aria-labelledby'],\n        size = _props2.size,\n        propTitle = _props2.title,\n        propDesc = _props2.desc,\n        propStyle = _props2.style,\n        propChildren = _props2.children,\n        props = _objectWithoutProperties(_props2, ['className', 'disabled', 'use', 'primary', 'secondary', 'error', 'inherit', 'titleAttr', 'aria-labelledby', 'size', 'title', 'desc', 'style', 'children']);\n\n    var _props3 = this.props,\n        children = _props3.children,\n        title = _props3.title,\n        desc = _props3.desc;\n\n    if (!children && use) {\n      children = React.createElement('use', { xlinkHref: use });\n    }\n\n    if (title) {\n      title = React.createElement(\n        'title',\n        { id: titleId },\n        title\n      );\n    }\n\n    if (desc) {\n      desc = React.createElement(\n        'desc',\n        { id: descId },\n        desc\n      );\n    }\n\n    return React.createElement(\n      'svg',\n      _extends({}, props, {\n        title: titleAttr,\n        'aria-labelledby': ariaLabelledBy || labelledBy,\n        style: styles,\n        className: cn('md-icon', themeColors({\n          disabled: disabled,\n          error: error,\n          inherit: inherit,\n          primary: primary,\n          secondary: secondary\n        }, className))\n      }),\n      title,\n      desc,\n      children\n    );\n  };\n\n  return SVGIcon;\n}(PureComponent);\n\nSVGIcon.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Boolean if the primary theme color should be applied.\n   */\n  primary: PropTypes.bool,\n\n  /**\n   * Boolean if the secondary theme color should be applied.\n   */\n  secondary: PropTypes.bool,\n\n  /**\n   * Boolean if the icon is considered disabled and should inherit the\n   * disabled color.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Boolean if the icon is considered errored and should inherit the error color.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Boolean if the color of the icon should be inherited by parent elements.\n   */\n  inherit: PropTypes.bool,\n\n  /**\n   * The role to apply to the SVG. When using icons, it is generally recommended to leave it as the default\n   * `img` so that it is insured as a graphic.\n   */\n  role: PropTypes.oneOf(['img', 'presentation']),\n\n  /**\n   * This prop is the title attribute to provide to the `<svg>` element itself. This should be used when you\n   * are using a spritesheet that has defined `<title>` with each SVG symbol.\n   */\n  titleAttr: PropTypes.string,\n\n  /**\n   * An optional list of ids to use to label the SVG icon with. This is helpful to add when you use the `title`\n   * and `desc` props as this is used to create ids for those two props. This is super beneficial to screen readers.\n   *\n   * When this is defined, it is a space-delimited string of ids to provide to the title and desc (in order). If\n   * this is omitted and the `use` prop is defined, it will take everything after the `#` sign and append `-title` and\n   * `-desc` as a fallback. Check out the examples for more information about this.\n   *\n   * @see {@link #title}\n   * @see {@link #desc}\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * An optional title to give to your SVG icon. This is generally recommended for accessibility when not using\n   * the `use` prop, or your spritemap does not contain `<title>` and `<desc>.\n   *\n   * @see {@link #aria-labelledby}\n   */\n  title: PropTypes.string,\n\n  /**\n   * An optional description to give to your SVG icon. This is generally recommended for accessibility when not using\n   * the `use` prop, or your spritemap does not contain `<title>` and `<desc>.\n   *\n   * @see {@link #aria-labelledby}\n   */\n  desc: PropTypes.string,\n\n  /**\n   * This should be a link to a part of an SVG spritemap. So normally one of the following:\n   * - `'#some-custom-svg'`\n   * - `'/images/spritemap.svg#some-custom-svg'`\n   *\n   * This prop **should not** be used with the `children` prop as only one will be rendered.\n   *\n   * > NOTE: IE **does not support** external SVGs. Please see the demo for more details.\n   */\n  use: PropTypes.string,\n\n  /**\n   * Any `<svg>` children to render to create your icon. This can not be used with the `use` prop.\n   */\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element), PropTypes.node]),\n\n  /**\n   * Boolean if the SVG should gain the `focusable` attribute. This is disabled by default since IE11\n   * and Edge actually default this to true and keyboard's will tab focus all SVGs.\n   */\n  focusable: PropTypes.string,\n\n  /**\n   * An optional size to apply to the SVG. This can be used to set both the\n   * `height` and `width` simultaneously. This will be provided as inline styles\n   * since the `height` and `width` are normally controlled by CSS, and CSS has\n   * higher precedence than the `height`/`width` attributes.\n   */\n  size: PropTypes.number,\n\n  /**\n   * The `height` prop should not be used since the `height` and `width` are controlled by CSS and the CSS\n   * has a higher precedence than inline attributes. If you want to set the `height`, it should be done via\n   * CSS or the `size` prop.\n   *\n   * @see {@link #size}\n   */\n  height: deprecated(PropTypes.number, 'Use the `size` prop instead'),\n\n  /**\n   * The `width` prop should not be used since the `height` and `width` are controlled by CSS and the CSS\n   * has a higher precedence than inline attributes. If you want to set the `height`, it should be done via\n   * CSS or the `size` prop.\n   *\n   * @see {@link #size}\n   */\n  width: deprecated(PropTypes.number, 'Use the `size` prop instead'),\n\n  /**\n   * The viewBox attribute allows you to specify that a given set of graphics stretch to\n   * fit a particular container element.\n   *\n   * The value of the viewBox attribute is a list of four numbers min-x, min-y, width and\n   * height, separated by white space and/or a comma, which specify a rectangle in user\n   * space which should be mapped to the bounds of the viewport established by the given\n   * element, taking into account attribute preserveAspectRatio.\n   *\n   * Negative values for width or height are not permitted and a value of zero disables\n   * rendering of the element.An optional viewbox for the SVG.\n   *\n   * For example, if the SVG element is 250 (width) by 200 (height) and you provide\n   * `viewBox=\"0 0 25 20\"`, the coordinates inside the SVG will go from the top left corner\n   * (0, 0) to the bottom right (25, 20) and each unit will be worth `10px`.\n   */\n  viewBox: PropTypes.string,\n\n  /**\n   * An optional xmlns string to provide. The `use` prop will not work without this prop\n   * defined.\n   */\n  xmlns: PropTypes.string\n};\nSVGIcon.defaultProps = {\n  role: 'img',\n  focusable: 'false',\n  xmlns: 'http://www.w3.org/2000/svg',\n  viewBox: '0 0 24 24'\n};\nexport default SVGIcon;"]},"metadata":{},"sourceType":"module"}