{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n/** @module utils/mapToListParts */\n\n\nimport { createElement, isValidElement } from 'react';\nimport Divider from '../Dividers/Divider';\nimport Subheader from '../Subheaders/Subheader';\nimport ListItem from '../Lists/ListItem';\n/**\n * A utility function to convert any \"item\" into a valid React element that is used\n * within the `List` component.\n *\n * Use cases:\n * - is a valid React element -> item returned unmodified\n * - `number` or `string` -> `ListItem` with the item as the `primaryText`\n * - an `object` with a key `divider: true` -> a `Divider` component with the remaining\n *    keys applied as props.\n * - an `object` with a key `subheader: true` -> a `Subheader` component with the remianing\n *    keys applied as props. This one technically requires the `primaryText` key to be defined.\n * - an `object` -> all keys passed into the `ListItem` component.\n *\n * Examples:\n * ```js\n * mapToListParts('Hello') == <ListItem primaryText=\"Hello\" />\n * mapToListParts(100)     == <ListItem primaryText={100} />\n * mapToListParts({ primaryText: 'Item' }) == <ListItem primaryText=\"Item\" />\n * mapToListParts({ divider: true }) == <Divider />\n * mapToListParts({ subheader: true, primaryText: 'Subheader' }) == <Subheader primaryText=\"Subheader\" />\n * ```\n *\n * @param {string|number|Object} item - the item to convert\n * @param {number|string=} index - the current index in the array (if used in an array)\n * @return {Object} a React element\n */\n\nexport default function mapToListParts(item, index) {\n  if (typeof item === 'string' || typeof item === 'number') {\n    return createElement(ListItem, {\n      key: item,\n      primaryText: item\n    });\n  } else if (isValidElement(item)) {\n    return item;\n  }\n\n  var divider = item.divider,\n      subheader = item.subheader,\n      nestedItems = item.nestedItems,\n      remainingProps = _objectWithoutProperties(item, ['divider', 'subheader', 'nestedItems']);\n\n  var component = void 0;\n\n  if (divider) {\n    component = Divider;\n  } else if (subheader) {\n    component = Subheader;\n  } else {\n    component = ListItem;\n  }\n\n  var props = _extends({}, remainingProps, {\n    key: item.key || index\n  });\n\n  if (nestedItems) {\n    props.nestedItems = nestedItems.map(mapToListParts);\n  }\n\n  return createElement(component, props);\n}","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/utils/mapToListParts.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","createElement","isValidElement","Divider","Subheader","ListItem","mapToListParts","item","index","primaryText","divider","subheader","nestedItems","remainingProps","component","props","map"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEA,SAASS,wBAAT,CAAkCC,GAAlC,EAAuCC,IAAvC,EAA6C;AAAE,MAAIX,MAAM,GAAG,EAAb;;AAAiB,OAAK,IAAIC,CAAT,IAAcS,GAAd,EAAmB;AAAE,QAAIC,IAAI,CAACC,OAAL,CAAaX,CAAb,KAAmB,CAAvB,EAA0B;AAAU,QAAI,CAACH,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCE,GAArC,EAA0CT,CAA1C,CAAL,EAAmD;AAAUD,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAYS,GAAG,CAACT,CAAD,CAAf;AAAqB;;AAAC,SAAOD,MAAP;AAAgB;AAE5N;;;AAEA,SAASa,aAAT,EAAwBC,cAAxB,QAA8C,OAA9C;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqC;AAClD,MAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,QAAhD,EAA0D;AACxD,WAAON,aAAa,CAACI,QAAD,EAAW;AAAEZ,MAAAA,GAAG,EAAEc,IAAP;AAAaE,MAAAA,WAAW,EAAEF;AAA1B,KAAX,CAApB;AACD,GAFD,MAEO,IAAIL,cAAc,CAACK,IAAD,CAAlB,EAA0B;AAC/B,WAAOA,IAAP;AACD;;AAED,MAAIG,OAAO,GAAGH,IAAI,CAACG,OAAnB;AAAA,MACIC,SAAS,GAAGJ,IAAI,CAACI,SADrB;AAAA,MAEIC,WAAW,GAAGL,IAAI,CAACK,WAFvB;AAAA,MAGIC,cAAc,GAAGhB,wBAAwB,CAACU,IAAD,EAAO,CAAC,SAAD,EAAY,WAAZ,EAAyB,aAAzB,CAAP,CAH7C;;AAKA,MAAIO,SAAS,GAAG,KAAK,CAArB;;AACA,MAAIJ,OAAJ,EAAa;AACXI,IAAAA,SAAS,GAAGX,OAAZ;AACD,GAFD,MAEO,IAAIQ,SAAJ,EAAe;AACpBG,IAAAA,SAAS,GAAGV,SAAZ;AACD,GAFM,MAEA;AACLU,IAAAA,SAAS,GAAGT,QAAZ;AACD;;AAED,MAAIU,KAAK,GAAG9B,QAAQ,CAAC,EAAD,EAAK4B,cAAL,EAAqB;AAAEpB,IAAAA,GAAG,EAAEc,IAAI,CAACd,GAAL,IAAYe;AAAnB,GAArB,CAApB;;AACA,MAAII,WAAJ,EAAiB;AACfG,IAAAA,KAAK,CAACH,WAAN,GAAoBA,WAAW,CAACI,GAAZ,CAAgBV,cAAhB,CAApB;AACD;;AAED,SAAOL,aAAa,CAACa,SAAD,EAAYC,KAAZ,CAApB;AACD","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n/** @module utils/mapToListParts */\n\nimport { createElement, isValidElement } from 'react';\nimport Divider from '../Dividers/Divider';\nimport Subheader from '../Subheaders/Subheader';\nimport ListItem from '../Lists/ListItem';\n\n/**\n * A utility function to convert any \"item\" into a valid React element that is used\n * within the `List` component.\n *\n * Use cases:\n * - is a valid React element -> item returned unmodified\n * - `number` or `string` -> `ListItem` with the item as the `primaryText`\n * - an `object` with a key `divider: true` -> a `Divider` component with the remaining\n *    keys applied as props.\n * - an `object` with a key `subheader: true` -> a `Subheader` component with the remianing\n *    keys applied as props. This one technically requires the `primaryText` key to be defined.\n * - an `object` -> all keys passed into the `ListItem` component.\n *\n * Examples:\n * ```js\n * mapToListParts('Hello') == <ListItem primaryText=\"Hello\" />\n * mapToListParts(100)     == <ListItem primaryText={100} />\n * mapToListParts({ primaryText: 'Item' }) == <ListItem primaryText=\"Item\" />\n * mapToListParts({ divider: true }) == <Divider />\n * mapToListParts({ subheader: true, primaryText: 'Subheader' }) == <Subheader primaryText=\"Subheader\" />\n * ```\n *\n * @param {string|number|Object} item - the item to convert\n * @param {number|string=} index - the current index in the array (if used in an array)\n * @return {Object} a React element\n */\nexport default function mapToListParts(item, index) {\n  if (typeof item === 'string' || typeof item === 'number') {\n    return createElement(ListItem, { key: item, primaryText: item });\n  } else if (isValidElement(item)) {\n    return item;\n  }\n\n  var divider = item.divider,\n      subheader = item.subheader,\n      nestedItems = item.nestedItems,\n      remainingProps = _objectWithoutProperties(item, ['divider', 'subheader', 'nestedItems']);\n\n  var component = void 0;\n  if (divider) {\n    component = Divider;\n  } else if (subheader) {\n    component = Subheader;\n  } else {\n    component = ListItem;\n  }\n\n  var props = _extends({}, remainingProps, { key: item.key || index });\n  if (nestedItems) {\n    props.nestedItems = nestedItems.map(mapToListParts);\n  }\n\n  return createElement(component, props);\n}"]},"metadata":{},"sourceType":"module"}