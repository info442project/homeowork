{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport FontIcon from '../FontIcons/FontIcon';\n\nvar Chip = function (_PureComponent) {\n  _inherits(Chip, _PureComponent);\n\n  function Chip() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Chip);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.state = {\n      hover: false\n    }, _this._handleMouseEnter = function (e) {\n      if (_this.props.onMouseEnter) {\n        _this.props.onMouseEnter(e);\n      }\n\n      _this.setState({\n        hover: true\n      });\n    }, _this._handleMouseLeave = function (e) {\n      if (_this.props.onMouseLeave) {\n        _this.props.onMouseLeave(e);\n      }\n\n      _this.setState({\n        hover: false\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Chip.prototype.render = function render() {\n    var hover = this.state.hover;\n\n    var _props = this.props,\n        label = _props.label,\n        className = _props.className,\n        labelStyle = _props.labelStyle,\n        labelClassName = _props.labelClassName,\n        avatar = _props.avatar,\n        children = _props.children,\n        removable = _props.removable,\n        remove = _props.remove,\n        onClick = _props.onClick,\n        rotateIcon = _props.rotateIcon,\n        iconClassName = _props.iconClassName,\n        removeIconChildren = _props.removeIconChildren,\n        removeIconClassName = _props.removeIconClassName,\n        props = _objectWithoutProperties(_props, ['label', 'className', 'labelStyle', 'labelClassName', 'avatar', 'children', 'removable', 'remove', 'onClick', 'rotateIcon', 'iconClassName', 'removeIconChildren', 'removeIconClassName']);\n\n    var icon = void 0;\n\n    if (removable || remove) {\n      var chipIconCN = cn('md-chip-icon', {\n        'md-chip-icon--rotate': rotateIcon,\n        'md-chip-text--hover': hover\n      });\n\n      if (React.isValidElement(children)) {\n        icon = React.Children.only(children);\n        icon = React.cloneElement(icon, {\n          className: cn(chipIconCN, icon.props.className)\n        });\n      } else {\n        icon = React.createElement(FontIcon, {\n          className: chipIconCN,\n          iconClassName: iconClassName\n        }, children);\n      }\n    }\n\n    return React.createElement('button', _extends({\n      type: 'button'\n    }, props, {\n      className: cn('md-chip', {\n        'md-chip--avatar': avatar,\n        'md-chip--remove': removable,\n        'md-chip--hover': hover\n      }, className),\n      onClick: remove || onClick,\n      onMouseEnter: this._handleMouseEnter,\n      onMouseLeave: this._handleMouseLeave\n    }), avatar, React.createElement('span', {\n      style: labelStyle,\n      className: cn('md-chip-text', {\n        'md-chip-text--hover': hover\n      }, labelClassName)\n    }, label), icon);\n  };\n\n  return Chip;\n}(PureComponent);\n\nChip.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the chip's label.\n   */\n  labelStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the chip's label.\n   */\n  labelClassName: PropTypes.string,\n\n  /**\n   * Boolean if the `.md-chip-icon--rotate` style should be applied to the remove icon.\n   * The `.md-chip-icon--rotate` just rotates the icon 45 degrees.\n   */\n  rotateIcon: PropTypes.bool,\n\n  /**\n   * Any children used to display the remove icon when `removable`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The label to display on the chip.\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the chip is removable.\n   */\n  removable: PropTypes.bool,\n\n  /**\n   * An optional avatar to display on the chip.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * An optional function to call when the `click` event is triggered.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseenter` event is triggered.\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseleave` event is triggered.\n   */\n  onMouseLeave: PropTypes.func,\n  iconClassName: deprecated(PropTypes.string, 'Use the `children` prop as a single FontIcon or SVGIcon instead'),\n  remove: deprecated(PropTypes.func, 'Use `removable` and `onClick` instead'),\n  removeIconChildren: deprecated(PropTypes.node, 'Use `children` instead'),\n  removeIconClassName: deprecated(PropTypes.string, 'Use `children` prop as a single FontIcon or SVGIcon instead')\n};\nChip.defaultProps = {\n  rotateIcon: true,\n  children: React.createElement(FontIcon, null, 'add_circle')\n};\nexport default Chip;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Chips/Chip.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","cn","deprecated","FontIcon","Chip","_PureComponent","_temp","_this","_ret","_len","args","Array","_key","apply","concat","state","hover","_handleMouseEnter","e","props","onMouseEnter","setState","_handleMouseLeave","onMouseLeave","render","_props","label","className","labelStyle","labelClassName","avatar","children","removable","remove","onClick","rotateIcon","iconClassName","removeIconChildren","removeIconClassName","icon","chipIconCN","isValidElement","Children","only","cloneElement","createElement","type","style","propTypes","object","string","bool","node","isRequired","element","func","defaultProps"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport FontIcon from '../FontIcons/FontIcon';\n\nvar Chip = function (_PureComponent) {\n  _inherits(Chip, _PureComponent);\n\n  function Chip() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Chip);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.state = { hover: false }, _this._handleMouseEnter = function (e) {\n      if (_this.props.onMouseEnter) {\n        _this.props.onMouseEnter(e);\n      }\n\n      _this.setState({ hover: true });\n    }, _this._handleMouseLeave = function (e) {\n      if (_this.props.onMouseLeave) {\n        _this.props.onMouseLeave(e);\n      }\n\n      _this.setState({ hover: false });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Chip.prototype.render = function render() {\n    var hover = this.state.hover;\n\n    var _props = this.props,\n        label = _props.label,\n        className = _props.className,\n        labelStyle = _props.labelStyle,\n        labelClassName = _props.labelClassName,\n        avatar = _props.avatar,\n        children = _props.children,\n        removable = _props.removable,\n        remove = _props.remove,\n        onClick = _props.onClick,\n        rotateIcon = _props.rotateIcon,\n        iconClassName = _props.iconClassName,\n        removeIconChildren = _props.removeIconChildren,\n        removeIconClassName = _props.removeIconClassName,\n        props = _objectWithoutProperties(_props, ['label', 'className', 'labelStyle', 'labelClassName', 'avatar', 'children', 'removable', 'remove', 'onClick', 'rotateIcon', 'iconClassName', 'removeIconChildren', 'removeIconClassName']);\n\n    var icon = void 0;\n    if (removable || remove) {\n      var chipIconCN = cn('md-chip-icon', {\n        'md-chip-icon--rotate': rotateIcon,\n        'md-chip-text--hover': hover\n      });\n\n      if (React.isValidElement(children)) {\n        icon = React.Children.only(children);\n        icon = React.cloneElement(icon, { className: cn(chipIconCN, icon.props.className) });\n      } else {\n        icon = React.createElement(\n          FontIcon,\n          { className: chipIconCN, iconClassName: iconClassName },\n          children\n        );\n      }\n    }\n\n    return React.createElement(\n      'button',\n      _extends({\n        type: 'button'\n      }, props, {\n        className: cn('md-chip', {\n          'md-chip--avatar': avatar,\n          'md-chip--remove': removable,\n          'md-chip--hover': hover\n        }, className),\n        onClick: remove || onClick,\n        onMouseEnter: this._handleMouseEnter,\n        onMouseLeave: this._handleMouseLeave\n      }),\n      avatar,\n      React.createElement(\n        'span',\n        {\n          style: labelStyle,\n          className: cn('md-chip-text', {\n            'md-chip-text--hover': hover\n          }, labelClassName)\n        },\n        label\n      ),\n      icon\n    );\n  };\n\n  return Chip;\n}(PureComponent);\n\nChip.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the chip's label.\n   */\n  labelStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the chip's label.\n   */\n  labelClassName: PropTypes.string,\n\n  /**\n   * Boolean if the `.md-chip-icon--rotate` style should be applied to the remove icon.\n   * The `.md-chip-icon--rotate` just rotates the icon 45 degrees.\n   */\n  rotateIcon: PropTypes.bool,\n\n  /**\n   * Any children used to display the remove icon when `removable`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The label to display on the chip.\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the chip is removable.\n   */\n  removable: PropTypes.bool,\n\n  /**\n   * An optional avatar to display on the chip.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * An optional function to call when the `click` event is triggered.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseenter` event is triggered.\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseleave` event is triggered.\n   */\n  onMouseLeave: PropTypes.func,\n\n  iconClassName: deprecated(PropTypes.string, 'Use the `children` prop as a single FontIcon or SVGIcon instead'),\n  remove: deprecated(PropTypes.func, 'Use `removable` and `onClick` instead'),\n  removeIconChildren: deprecated(PropTypes.node, 'Use `children` instead'),\n  removeIconClassName: deprecated(PropTypes.string, 'Use `children` prop as a single FontIcon or SVGIcon instead')\n};\nChip.defaultProps = {\n  rotateIcon: true,\n  children: React.createElement(\n    FontIcon,\n    null,\n    'add_circle'\n  )\n};\nexport default Chip;"]},"metadata":{},"sourceType":"module"}