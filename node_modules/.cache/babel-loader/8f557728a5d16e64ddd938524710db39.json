{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport controlled from '../utils/PropTypes/controlled';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport FontIcon from '../FontIcons/FontIcon';\nimport SelectionControl from './SelectionControl';\n/**\n * The `Checkbox` component is used for the selection of multiple options from a set.\n */\n\nvar Checkbox = function (_PureComponent) {\n  _inherits(Checkbox, _PureComponent);\n\n  function Checkbox() {\n    _classCallCheck(this, Checkbox);\n\n    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));\n  }\n\n  Checkbox.prototype.render = function render() {\n    var _props = this.props,\n        checkedIcon = _props.checkedIcon,\n        uncheckedIcon = _props.uncheckedIcon,\n        checkedIconChildren = _props.checkedIconChildren,\n        checkedIconClassName = _props.checkedIconClassName,\n        uncheckedIconChildren = _props.uncheckedIconChildren,\n        uncheckedIconClassName = _props.uncheckedIconClassName,\n        props = _objectWithoutProperties(_props, ['checkedIcon', 'uncheckedIcon', 'checkedIconChildren', 'checkedIconClassName', 'uncheckedIconChildren', 'uncheckedIconClassName']);\n\n    var checked = getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon);\n    var unchecked = getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon);\n    return React.createElement(SelectionControl, _extends({\n      type: 'checkbox',\n      checkedCheckboxIcon: checked,\n      uncheckedCheckboxIcon: unchecked,\n      __superSecreteProp: true\n    }, props));\n  };\n\n  return Checkbox;\n}(PureComponent);\n\nCheckbox.propTypes = {\n  /**\n   * An id to use with the checkbox. This is used for accessibility and so that the label\n   * triggers the checkbox toggle.\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * An optional style to apply to the checkbox's container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the checkbox's container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * A label to display with the checkbox. This is required for accessibility and triggering\n   * the toggle.\n   */\n  label: PropTypes.node,\n\n  /**\n   * Boolean if the label should appear before the checkbox icon.\n   */\n  labelBefore: PropTypes.bool,\n\n  /**\n   * A name to use for the `Checkbox`. This is required for accessibility. If the checkbox is\n   * part of a group, it is recommended to make this a string ending in `[]` so that the\n   * value can be found from `document.querySelector('input[name=\"someName[]\"]').value`.\n   */\n  name: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n\n  /**\n   * Boolean if the `Checkbox` is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * An optional function to call when the `checked` state of the `Checkbox` changes.\n   * The callback will include the new checked state and the changeEvent.\n   *\n   * ```js\n   * onChange(changeEvent.target.checked, changeEvent);\n   * ```\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * An optional value for the `Checkbox`. It is recommended to use a value though.\n   */\n  value: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n\n  /**\n   * Boolean if the `Checkbox` is checked by default.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * A boolean if the `Checkbox` is currently checked. This will required the `onChange` prop\n   * to be defined.\n   */\n  checked: controlled(PropTypes.bool, 'onChange', 'defaultChecked'),\n\n  /**\n   * Boolean if the `Checkbox` should be displayed inline.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * The icon to display when the checkbox is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * The icon to display when the checkbox is unchecked.\n   */\n  uncheckedIcon: PropTypes.node,\n  checkedIconChildren: deprecated(PropTypes.node, 'Use `checkedIcon` instead'),\n  checkedIconClassName: deprecated(PropTypes.string, 'Use `checkedIcon` instead'),\n  uncheckedIconChildren: deprecated(PropTypes.node, 'Use `uncheckedIcon` instead'),\n  uncheckedIconClassName: deprecated(PropTypes.string, 'Use `uncheckedIcon` instead')\n};\nCheckbox.defaultProps = {\n  checkedIcon: React.createElement(FontIcon, null, 'check_box'),\n  uncheckedIcon: React.createElement(FontIcon, null, 'check_box_outline_blank')\n};\nexport default Checkbox;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/SelectionControls/Checkbox.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","deprecated","isRequiredForA11y","controlled","getDeprecatedIcon","FontIcon","SelectionControl","Checkbox","_PureComponent","apply","render","_props","props","checkedIcon","uncheckedIcon","checkedIconChildren","checkedIconClassName","uncheckedIconChildren","uncheckedIconClassName","checked","unchecked","createElement","type","checkedCheckboxIcon","uncheckedCheckboxIcon","__superSecreteProp","propTypes","id","oneOfType","string","number","style","object","className","label","node","labelBefore","bool","name","disabled","onChange","func","defaultChecked","inline","defaultProps"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport FontIcon from '../FontIcons/FontIcon';\nimport SelectionControl from './SelectionControl';\n\n/**\n * The `Checkbox` component is used for the selection of multiple options from a set.\n */\n\nvar Checkbox = function (_PureComponent) {\n  _inherits(Checkbox, _PureComponent);\n\n  function Checkbox() {\n    _classCallCheck(this, Checkbox);\n\n    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));\n  }\n\n  Checkbox.prototype.render = function render() {\n    var _props = this.props,\n        checkedIcon = _props.checkedIcon,\n        uncheckedIcon = _props.uncheckedIcon,\n        checkedIconChildren = _props.checkedIconChildren,\n        checkedIconClassName = _props.checkedIconClassName,\n        uncheckedIconChildren = _props.uncheckedIconChildren,\n        uncheckedIconClassName = _props.uncheckedIconClassName,\n        props = _objectWithoutProperties(_props, ['checkedIcon', 'uncheckedIcon', 'checkedIconChildren', 'checkedIconClassName', 'uncheckedIconChildren', 'uncheckedIconClassName']);\n\n    var checked = getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon);\n    var unchecked = getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon);\n\n    return React.createElement(SelectionControl, _extends({\n      type: 'checkbox',\n      checkedCheckboxIcon: checked,\n      uncheckedCheckboxIcon: unchecked,\n      __superSecreteProp: true\n    }, props));\n  };\n\n  return Checkbox;\n}(PureComponent);\n\nCheckbox.propTypes = {\n  /**\n   * An id to use with the checkbox. This is used for accessibility and so that the label\n   * triggers the checkbox toggle.\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * An optional style to apply to the checkbox's container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the checkbox's container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * A label to display with the checkbox. This is required for accessibility and triggering\n   * the toggle.\n   */\n  label: PropTypes.node,\n\n  /**\n   * Boolean if the label should appear before the checkbox icon.\n   */\n  labelBefore: PropTypes.bool,\n\n  /**\n   * A name to use for the `Checkbox`. This is required for accessibility. If the checkbox is\n   * part of a group, it is recommended to make this a string ending in `[]` so that the\n   * value can be found from `document.querySelector('input[name=\"someName[]\"]').value`.\n   */\n  name: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n\n  /**\n   * Boolean if the `Checkbox` is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * An optional function to call when the `checked` state of the `Checkbox` changes.\n   * The callback will include the new checked state and the changeEvent.\n   *\n   * ```js\n   * onChange(changeEvent.target.checked, changeEvent);\n   * ```\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * An optional value for the `Checkbox`. It is recommended to use a value though.\n   */\n  value: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n\n  /**\n   * Boolean if the `Checkbox` is checked by default.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * A boolean if the `Checkbox` is currently checked. This will required the `onChange` prop\n   * to be defined.\n   */\n  checked: controlled(PropTypes.bool, 'onChange', 'defaultChecked'),\n\n  /**\n   * Boolean if the `Checkbox` should be displayed inline.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * The icon to display when the checkbox is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * The icon to display when the checkbox is unchecked.\n   */\n  uncheckedIcon: PropTypes.node,\n\n  checkedIconChildren: deprecated(PropTypes.node, 'Use `checkedIcon` instead'),\n  checkedIconClassName: deprecated(PropTypes.string, 'Use `checkedIcon` instead'),\n  uncheckedIconChildren: deprecated(PropTypes.node, 'Use `uncheckedIcon` instead'),\n  uncheckedIconClassName: deprecated(PropTypes.string, 'Use `uncheckedIcon` instead')\n};\nCheckbox.defaultProps = {\n  checkedIcon: React.createElement(\n    FontIcon,\n    null,\n    'check_box'\n  ),\n  uncheckedIcon: React.createElement(\n    FontIcon,\n    null,\n    'check_box_outline_blank'\n  )\n};\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}