{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal, unmountComponentAtNode as unmount, unstable_renderSubtreeIntoContainer as render } from 'react-dom';\nvar isReact16 = typeof createPortal === 'function';\n/**\n * Creates a \"Portal\" for the children to be rendered in. Basically it will render the\n * children only when the `visible` prop is `true`. When it is visible, a new `component`\n * will be rendered as the first child in the body with the children inside.\n *\n * Unlike all the other components, `style` will not be applied for the `Portal`.\n */\n\nvar Portal = function (_PureComponent) {\n  _inherits(Portal, _PureComponent);\n\n  function Portal() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Portal);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this._container = null, _this._portal = null, _this._applyStyles = function (props) {\n      if (props.className) {\n        _this._container.className = props.className;\n      }\n    }, _this._renderPortal = function (props) {\n      if (!_this._container) {\n        _this._container = document.createElement(props.component);\n\n        _this._applyStyles(props);\n\n        var node = props.renderNode || document.body;\n\n        if (props.lastChild) {\n          node.appendChild(_this._container);\n        } else {\n          node.insertBefore(_this._container, node.firstChild);\n        }\n      } else {\n        _this._applyStyles(props);\n      }\n\n      if (!isReact16) {\n        _this._portal = render(_this, props.children, _this._container);\n      }\n    }, _this._removePortal = function () {\n      if (_this.props.onClose) {\n        _this.props.onClose();\n      }\n\n      if (_this._container) {\n        if (!isReact16) {\n          unmount(_this._container);\n        }\n\n        (_this.props.renderNode || document.body).removeChild(_this._container);\n      }\n\n      _this._portal = null;\n      _this._container = null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Portal.prototype.componentDidMount = function componentDidMount() {\n    if (this.props.visible) {\n      this._renderPortal(this.props);\n\n      if (isReact16) {\n        // Need to update after the renderPortal created the DOM element.\n        this.forceUpdate();\n      }\n    }\n  };\n\n  Portal.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var visible = nextProps.visible,\n        onOpen = nextProps.onOpen;\n\n    if (this.props.visible === visible) {\n      if (visible && !isReact16) {\n        // Need to just re-render the subtree\n        this._renderPortal(nextProps);\n      }\n\n      return;\n    }\n\n    if (visible) {\n      if (onOpen) {\n        onOpen();\n      }\n\n      this._renderPortal(nextProps);\n    } else {\n      this._removePortal();\n    }\n  };\n\n  Portal.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.visible && this.props.onClose) {\n      this.props.onClose();\n    }\n\n    this._removePortal();\n  };\n\n  Portal.prototype.render = function render() {\n    var _props = this.props,\n        Component = _props.component,\n        className = _props.className,\n        children = _props.children,\n        visible = _props.visible; // When doing server side rendering, actually render the component as a direct child of its parent.\n    // Once it has been rendered and working client side, it will be removed correctly.\n\n    if (typeof window === 'undefined' && visible) {\n      return React.createElement(Component, {\n        className: className\n      }, children);\n    } else if (isReact16 && visible && this._container && typeof window !== 'undefined') {\n      return createPortal(children, this._container);\n    }\n\n    return null;\n  };\n\n  return Portal;\n}(PureComponent);\n\nPortal.propTypes = {\n  /**\n   * An optional className to apply to the newly created `component` when visible.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Boolean if the children are visible.\n   */\n  visible: PropTypes.bool.isRequired,\n\n  /**\n   * The children to render when visible.\n   */\n  children: PropTypes.element,\n\n  /**\n   * The component to render as. This should be a valid DOM element.\n   */\n  component: PropTypes.string.isRequired,\n\n  /**\n   * An optional function to call when the portal is opened.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * An optional function to call when the portal is closed\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * An optional DOM Node to render the portal into. The default is to render as\n   * the first child in the `body`.\n   */\n  renderNode: PropTypes.object,\n\n  /**\n   * Boolean if the portal should render the children as the last child of the `renderNode`\n   * or `body` instead of the first.\n   */\n  lastChild: PropTypes.bool\n};\nPortal.defaultProps = {\n  component: 'span'\n};\nexport default Portal;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Helpers/Portal.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","createPortal","unmountComponentAtNode","unmount","unstable_renderSubtreeIntoContainer","render","isReact16","Portal","_PureComponent","_temp","_this","_ret","_len","arguments","length","args","Array","_key","apply","concat","_container","_portal","_applyStyles","props","className","_renderPortal","document","createElement","component","node","renderNode","body","lastChild","appendChild","insertBefore","firstChild","children","_removePortal","onClose","removeChild","componentDidMount","visible","forceUpdate","componentWillReceiveProps","nextProps","onOpen","componentWillUnmount","_props","Component","window","propTypes","string","bool","isRequired","element","func","object","defaultProps"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal, unmountComponentAtNode as unmount, unstable_renderSubtreeIntoContainer as render } from 'react-dom';\n\nvar isReact16 = typeof createPortal === 'function';\n\n/**\n * Creates a \"Portal\" for the children to be rendered in. Basically it will render the\n * children only when the `visible` prop is `true`. When it is visible, a new `component`\n * will be rendered as the first child in the body with the children inside.\n *\n * Unlike all the other components, `style` will not be applied for the `Portal`.\n */\n\nvar Portal = function (_PureComponent) {\n  _inherits(Portal, _PureComponent);\n\n  function Portal() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Portal);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this._container = null, _this._portal = null, _this._applyStyles = function (props) {\n      if (props.className) {\n        _this._container.className = props.className;\n      }\n    }, _this._renderPortal = function (props) {\n      if (!_this._container) {\n        _this._container = document.createElement(props.component);\n\n        _this._applyStyles(props);\n        var node = props.renderNode || document.body;\n        if (props.lastChild) {\n          node.appendChild(_this._container);\n        } else {\n          node.insertBefore(_this._container, node.firstChild);\n        }\n      } else {\n        _this._applyStyles(props);\n      }\n\n      if (!isReact16) {\n        _this._portal = render(_this, props.children, _this._container);\n      }\n    }, _this._removePortal = function () {\n      if (_this.props.onClose) {\n        _this.props.onClose();\n      }\n\n      if (_this._container) {\n        if (!isReact16) {\n          unmount(_this._container);\n        }\n\n        (_this.props.renderNode || document.body).removeChild(_this._container);\n      }\n\n      _this._portal = null;\n      _this._container = null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Portal.prototype.componentDidMount = function componentDidMount() {\n    if (this.props.visible) {\n      this._renderPortal(this.props);\n\n      if (isReact16) {\n        // Need to update after the renderPortal created the DOM element.\n        this.forceUpdate();\n      }\n    }\n  };\n\n  Portal.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var visible = nextProps.visible,\n        onOpen = nextProps.onOpen;\n\n    if (this.props.visible === visible) {\n      if (visible && !isReact16) {\n        // Need to just re-render the subtree\n        this._renderPortal(nextProps);\n      }\n\n      return;\n    }\n\n    if (visible) {\n      if (onOpen) {\n        onOpen();\n      }\n\n      this._renderPortal(nextProps);\n    } else {\n      this._removePortal();\n    }\n  };\n\n  Portal.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.visible && this.props.onClose) {\n      this.props.onClose();\n    }\n    this._removePortal();\n  };\n\n  Portal.prototype.render = function render() {\n    var _props = this.props,\n        Component = _props.component,\n        className = _props.className,\n        children = _props.children,\n        visible = _props.visible;\n\n    // When doing server side rendering, actually render the component as a direct child of its parent.\n    // Once it has been rendered and working client side, it will be removed correctly.\n\n    if (typeof window === 'undefined' && visible) {\n      return React.createElement(\n        Component,\n        { className: className },\n        children\n      );\n    } else if (isReact16 && visible && this._container && typeof window !== 'undefined') {\n      return createPortal(children, this._container);\n    }\n\n    return null;\n  };\n\n  return Portal;\n}(PureComponent);\n\nPortal.propTypes = {\n  /**\n   * An optional className to apply to the newly created `component` when visible.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Boolean if the children are visible.\n   */\n  visible: PropTypes.bool.isRequired,\n\n  /**\n   * The children to render when visible.\n   */\n  children: PropTypes.element,\n\n  /**\n   * The component to render as. This should be a valid DOM element.\n   */\n  component: PropTypes.string.isRequired,\n\n  /**\n   * An optional function to call when the portal is opened.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * An optional function to call when the portal is closed\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * An optional DOM Node to render the portal into. The default is to render as\n   * the first child in the `body`.\n   */\n  renderNode: PropTypes.object,\n\n  /**\n   * Boolean if the portal should render the children as the last child of the `renderNode`\n   * or `body` instead of the first.\n   */\n  lastChild: PropTypes.bool\n};\nPortal.defaultProps = {\n  component: 'span'\n};\nexport default Portal;"]},"metadata":{},"sourceType":"module"}