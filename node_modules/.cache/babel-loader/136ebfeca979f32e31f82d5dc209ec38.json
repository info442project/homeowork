{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport between from '../utils/PropTypes/between';\nvar ROATE_DISTANCE = 360 * 1.75;\nvar BASE_SIZE = 24; // font-icon font size\n\n/**\n * The `CircularProgress` component is used to give visual feedback while your app\n * is loading.\n *\n * There are two different types of circular progress bars: `Determinate` and `Indeterminate`.\n *\n * A `Determinate` circular progress bar should be used when you want to keep track of the current\n * progress. An example would be downloading a file.\n *\n * An `Indeterminate` circular progress bar should be used when you can not keep track of the progress\n * yourself. An example would be waiting for some API call to complete.\n */\n\nvar CircularProgress = function (_PureComponent) {\n  _inherits(CircularProgress, _PureComponent);\n\n  function CircularProgress() {\n    _classCallCheck(this, CircularProgress);\n\n    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));\n  }\n  /* eslint-disable max-len */\n\n\n  CircularProgress.prototype.render = function render() {\n    var _props = this.props,\n        scale = _props.scale,\n        style = _props.style,\n        className = _props.className,\n        value = _props.value,\n        determinateDashoffset = _props.determinateDashoffset,\n        centered = _props.centered,\n        props = _objectWithoutProperties(_props, ['scale', 'style', 'className', 'value', 'determinateDashoffset', 'centered']);\n\n    var isDeterminate = typeof value === 'number';\n    var circleStyle = void 0;\n    var svgStyle = style;\n\n    if (isDeterminate) {\n      var rotate = 'rotate3d(0, 0, 1, ' + ROATE_DISTANCE / 100 * value + 'deg)';\n      circleStyle = {\n        strokeDashoffset: determinateDashoffset - determinateDashoffset / 100 * value\n      };\n      svgStyle = Object.assign({}, style, {\n        WebkitTransform: cn(style.WebkitTransform, rotate),\n        MozTransform: cn(style.MozTransform, rotate),\n        transform: cn(style.transform, rotate)\n      });\n    }\n\n    var accessibilityProps = {\n      role: 'progressbar',\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    };\n\n    if (isDeterminate) {\n      accessibilityProps['aria-valuenow'] = value;\n    }\n\n    return React.createElement('svg', _extends({}, props, accessibilityProps, {\n      style: svgStyle,\n      className: cn('md-progress md-progress--circular', {\n        'md-block-centered': centered,\n        'md-progress--circular-determinate': isDeterminate,\n        'md-progress--circular-indeterminate': !isDeterminate\n      }, className),\n      width: scale * BASE_SIZE,\n      height: scale * BASE_SIZE,\n      viewBox: '0 0 66 66'\n    }), React.createElement('circle', {\n      className: cn('md-circular-progress-path', {\n        'md-circular-progress-path--animated': !isDeterminate\n      }),\n      strokeWidth: '6',\n      strokeLinecap: 'round',\n      style: circleStyle,\n      cx: '33',\n      cy: '33',\n      r: '30'\n    }));\n  };\n\n  return CircularProgress;\n}(PureComponent);\n\nCircularProgress.propTypes = {\n  /**\n   * The `id` prop is required for accessibility concerns.\n   * [Progress Bar Role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role)\n   *\n   * > If the progressbar is describing the loading progress of a particular region of a page, the author\n   * __SHOULD__ use aria-describedby to point to the status, and set the aria-busy attribute to true on the\n   * region until it is finished loading. It is not possible for the user to alter the value of a progressbar\n   * because it is always readonly.\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n\n  /* eslint-enable max-len */\n\n  /**\n   * A style object to apply to the SVG. If this is a determinate `CircularProgress`,\n   * the `transform` (and vendor prefixes) styles will be merged with the current\n   * progress rotation.\n   */\n  style: PropTypes.object.isRequired,\n\n  /**\n   * An optional className to apply to the SVG.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current value of the progress. If this value is defined, it will\n   * be converted to a determinate circular progress. The progress will not\n   * advance unless this value changes.\n   *\n   * This value should also be a number between 0 and 100.\n   */\n  value: between(PropTypes.number, 0, 100),\n\n  /**\n   * The scale for the circular progress.\n   */\n  scale: PropTypes.number.isRequired,\n\n  /**\n   * You probably don't want to update this. I'm not good at SVG. This should\n   * match the SCSS variable `$md-circular-progress-stroke-dashoffset`.\n   */\n  determinateDashoffset: PropTypes.number.isRequired,\n\n  /**\n   * Boolean if the progress should be centered in it's container.\n   */\n  centered: PropTypes.bool\n};\nCircularProgress.defaultProps = {\n  style: {},\n  scale: 1,\n  determinateDashoffset: 187,\n  centered: true\n};\nexport default CircularProgress;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Progress/CircularProgress.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","cn","isRequiredForA11y","between","ROATE_DISTANCE","BASE_SIZE","CircularProgress","_PureComponent","apply","render","_props","props","scale","style","className","determinateDashoffset","centered","isDeterminate","circleStyle","svgStyle","rotate","strokeDashoffset","WebkitTransform","MozTransform","transform","accessibilityProps","role","createElement","width","height","viewBox","strokeWidth","strokeLinecap","cx","cy","r","propTypes","id","oneOfType","number","string","object","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport between from '../utils/PropTypes/between';\n\nvar ROATE_DISTANCE = 360 * 1.75;\nvar BASE_SIZE = 24; // font-icon font size\n\n/**\n * The `CircularProgress` component is used to give visual feedback while your app\n * is loading.\n *\n * There are two different types of circular progress bars: `Determinate` and `Indeterminate`.\n *\n * A `Determinate` circular progress bar should be used when you want to keep track of the current\n * progress. An example would be downloading a file.\n *\n * An `Indeterminate` circular progress bar should be used when you can not keep track of the progress\n * yourself. An example would be waiting for some API call to complete.\n */\n\nvar CircularProgress = function (_PureComponent) {\n  _inherits(CircularProgress, _PureComponent);\n\n  function CircularProgress() {\n    _classCallCheck(this, CircularProgress);\n\n    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));\n  }\n\n  /* eslint-disable max-len */\n  CircularProgress.prototype.render = function render() {\n    var _props = this.props,\n        scale = _props.scale,\n        style = _props.style,\n        className = _props.className,\n        value = _props.value,\n        determinateDashoffset = _props.determinateDashoffset,\n        centered = _props.centered,\n        props = _objectWithoutProperties(_props, ['scale', 'style', 'className', 'value', 'determinateDashoffset', 'centered']);\n\n    var isDeterminate = typeof value === 'number';\n    var circleStyle = void 0;\n    var svgStyle = style;\n    if (isDeterminate) {\n      var rotate = 'rotate3d(0, 0, 1, ' + ROATE_DISTANCE / 100 * value + 'deg)';\n      circleStyle = {\n        strokeDashoffset: determinateDashoffset - determinateDashoffset / 100 * value\n      };\n\n      svgStyle = Object.assign({}, style, {\n        WebkitTransform: cn(style.WebkitTransform, rotate),\n        MozTransform: cn(style.MozTransform, rotate),\n        transform: cn(style.transform, rotate)\n      });\n    }\n\n    var accessibilityProps = {\n      role: 'progressbar',\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    };\n\n    if (isDeterminate) {\n      accessibilityProps['aria-valuenow'] = value;\n    }\n\n    return React.createElement(\n      'svg',\n      _extends({}, props, accessibilityProps, {\n        style: svgStyle,\n        className: cn('md-progress md-progress--circular', {\n          'md-block-centered': centered,\n          'md-progress--circular-determinate': isDeterminate,\n          'md-progress--circular-indeterminate': !isDeterminate\n        }, className),\n        width: scale * BASE_SIZE,\n        height: scale * BASE_SIZE,\n        viewBox: '0 0 66 66'\n      }),\n      React.createElement('circle', {\n        className: cn('md-circular-progress-path', {\n          'md-circular-progress-path--animated': !isDeterminate\n        }),\n        strokeWidth: '6',\n        strokeLinecap: 'round',\n        style: circleStyle,\n        cx: '33',\n        cy: '33',\n        r: '30'\n      })\n    );\n  };\n\n  return CircularProgress;\n}(PureComponent);\n\nCircularProgress.propTypes = {\n  /**\n   * The `id` prop is required for accessibility concerns.\n   * [Progress Bar Role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role)\n   *\n   * > If the progressbar is describing the loading progress of a particular region of a page, the author\n   * __SHOULD__ use aria-describedby to point to the status, and set the aria-busy attribute to true on the\n   * region until it is finished loading. It is not possible for the user to alter the value of a progressbar\n   * because it is always readonly.\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n\n  /* eslint-enable max-len */\n\n  /**\n   * A style object to apply to the SVG. If this is a determinate `CircularProgress`,\n   * the `transform` (and vendor prefixes) styles will be merged with the current\n   * progress rotation.\n   */\n  style: PropTypes.object.isRequired,\n\n  /**\n   * An optional className to apply to the SVG.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current value of the progress. If this value is defined, it will\n   * be converted to a determinate circular progress. The progress will not\n   * advance unless this value changes.\n   *\n   * This value should also be a number between 0 and 100.\n   */\n  value: between(PropTypes.number, 0, 100),\n\n  /**\n   * The scale for the circular progress.\n   */\n  scale: PropTypes.number.isRequired,\n\n  /**\n   * You probably don't want to update this. I'm not good at SVG. This should\n   * match the SCSS variable `$md-circular-progress-stroke-dashoffset`.\n   */\n  determinateDashoffset: PropTypes.number.isRequired,\n\n  /**\n   * Boolean if the progress should be centered in it's container.\n   */\n  centered: PropTypes.bool\n};\nCircularProgress.defaultProps = {\n  style: {},\n  scale: 1,\n  determinateDashoffset: 187,\n  centered: true\n};\nexport default CircularProgress;"]},"metadata":{},"sourceType":"module"}