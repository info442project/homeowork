{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent, Children, isValidElement, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport oneRequired from '../utils/PropTypes/oneRequired';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport CardTitleBlock from '../Cards/CardTitleBlock';\n/**\n * The `TableCardHeader` is used when contextual actions should appear when\n * a user selects a row.\n */\n\nvar TableCardHeader = function (_PureComponent) {\n  _inherits(TableCardHeader, _PureComponent);\n\n  function TableCardHeader(props) {\n    _classCallCheck(this, TableCardHeader);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.state = {\n      animating: false\n    };\n    return _this;\n  }\n\n  TableCardHeader.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    var visible = this.props.visible;\n    var nVisible = nextProps.visible,\n        transitionEnterTimeout = nextProps.transitionEnterTimeout,\n        transitionLeaveTimeout = nextProps.transitionLeaveTimeout;\n    var timeout = !nVisible ? transitionLeaveTimeout : transitionEnterTimeout;\n\n    if (visible !== nVisible) {\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n      }\n\n      this._timeout = setTimeout(function () {\n        _this2._timeout = setTimeout(function () {\n          _this2._timeout = null;\n\n          _this2.setState({\n            animating: false\n          });\n        }, timeout);\n      }, TICK);\n\n      if (!this.state.animating) {\n        this.setState({\n          animating: true\n        });\n      }\n    }\n  };\n\n  TableCardHeader.prototype._cloneCellRight = function _cloneCellRight(noAdjust, children) {\n    if (noAdjust || !children) {\n      return children;\n    }\n\n    return Children.map(Children.toArray(children), function (child, i) {\n      if (i === 0 && isValidElement(child)) {\n        return cloneElement(child, {\n          className: cn('md-cell--right', child.props.className)\n        });\n      }\n\n      return child;\n    });\n  };\n\n  TableCardHeader.prototype._cloneLeftChildren = function _cloneLeftChildren(noClone, children) {\n    if (noClone || !children) {\n      return children;\n    }\n\n    return Children.map(Children.toArray(children), function (child) {\n      return cloneElement(child, {\n        className: cn('md-btn--dialog', child.props.className)\n      });\n    });\n  };\n\n  TableCardHeader.prototype.render = function render() {\n    var animating = this.state.animating;\n\n    var _props = this.props,\n        style = _props.style,\n        className = _props.className,\n        title = _props.title,\n        titleId = _props.titleId,\n        actions = _props.actions,\n        contextualTitleId = _props.contextualTitleId,\n        contextualChildren = _props.contextualChildren,\n        noActionsAdjust = _props.noActionsAdjust,\n        noChildrenAdjust = _props.noChildrenAdjust,\n        noLeftChildrenClone = _props.noLeftChildrenClone,\n        visible = _props.visible,\n        propChildren = _props.children,\n        propLeftChildren = _props.leftChildren,\n        propContextualTitle = _props.contextualTitle,\n        props = _objectWithoutProperties(_props, ['style', 'className', 'title', 'titleId', 'actions', 'contextualTitleId', 'contextualChildren', 'noActionsAdjust', 'noChildrenAdjust', 'noLeftChildrenClone', 'visible', 'children', 'leftChildren', 'contextualTitle']);\n\n    var _props2 = this.props,\n        children = _props2.children,\n        leftChildren = _props2.leftChildren,\n        contextualTitle = _props2.contextualTitle;\n    children = this._cloneCellRight(noChildrenAdjust, children);\n    leftChildren = this._cloneLeftChildren(noLeftChildrenClone, leftChildren);\n\n    if (title) {\n      children = React.createElement('div', {\n        className: 'md-card-title',\n        key: 'main-title'\n      }, React.createElement(CardTitleBlock, {\n        id: titleId,\n        title: title\n      }), children);\n    } else if (leftChildren) {\n      leftChildren = Children.toArray(leftChildren);\n\n      if (children) {\n        children = leftChildren.concat(Children.toArray(children));\n      } else {\n        children = leftChildren;\n      }\n    }\n\n    if (contextualTitle) {\n      contextualTitle = React.createElement('h2', {\n        id: contextualTitleId,\n        className: 'md-card-title--title md-card-title--title-contextual',\n        tabIndex: contextualTitleId ? -1 : null\n      }, contextualTitle);\n    }\n\n    var contextualHeader = React.createElement('div', {\n      key: 'contextual-header',\n      className: 'md-card-title md-card-title--contextual'\n    }, contextualTitle, contextualChildren, this._cloneCellRight(noActionsAdjust, actions));\n    var mergedStyles = style;\n\n    if (animating) {\n      mergedStyles = Object.assign({}, style, {\n        overflow: 'hidden'\n      });\n    }\n\n    return React.createElement(CSSTransitionGroup, _extends({}, props, {\n      style: mergedStyles,\n      className: cn('md-table-card-header', {\n        'md-table-card-header--no-title': !title\n      }, className)\n    }), children, visible ? contextualHeader : null);\n  };\n\n  return TableCardHeader;\n}(PureComponent);\n\nTableCardHeader.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component to render as.\n   */\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * The transition name to use when the contextual header appears.\n   */\n  transitionName: PropTypes.string.isRequired,\n\n  /**\n   * The transition time to use when the contextual header appears.\n   */\n  transitionEnterTimeout: PropTypes.number.isRequired,\n\n  /**\n   * The transition time to use when the contextual header disappears.\n   */\n  transitionLeaveTimeout: PropTypes.number.isRequired,\n\n  /**\n   * An optional title to display. It is invalid to have both `title` and `leftChildren`\n   * defined as only one will be used.\n   */\n  title: oneRequired(PropTypes.node, 'leftChildren', 'children'),\n\n  /**\n   * An optional id to provide to the title.\n   */\n  titleId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional title to display in the contextual header. This will get wrapped in an `h2`\n   * tag and additional styles applied.\n   */\n  contextualTitle: PropTypes.node,\n\n  /**\n   * An optional id to provide to the contextual title.\n   */\n  contextualTitleId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Any additional children to display in the contextual header. This will be displayed after\n   * the optional `contextualTile` and before the `actions`.\n   */\n  contextualChildren: PropTypes.node,\n\n  /**\n   * An optional button or list of buttons to display instead of a title.\n   */\n  leftChildren: invalidIf(PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]), 'title'),\n\n  /**\n   * An additional children to display after the `title` or `leftChildren` prop.\n   * This is _normally_ a list of icon button or menu button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * An optional button/menu button or a list of button/menu button to display in the\n   * contextual header once the user has selected a row or multiple rows.\n   */\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n\n  /**\n   * Boolean if the `actions` prop should not have each element cloned with additional\n   * class names.\n   */\n  noActionsAdjust: PropTypes.bool,\n\n  /**\n   * Boolean if the `children` prop should not have each element cloned with additional\n   * class names.\n   */\n  noChildrenAdjust: PropTypes.bool,\n\n  /**\n   * Boolean if the `leftChildren` prop should not have each element cloned with additional\n   * class names.\n   */\n  noLeftChildrenClone: PropTypes.bool,\n\n  /**\n   * Boolean if the contextual header is currently visible.\n   */\n  visible: PropTypes.bool.isRequired\n};\nTableCardHeader.defaultProps = {\n  component: 'header',\n  transitionName: 'md-drop-down',\n  transitionEnterTimeout: 150,\n  transitionLeaveTimeout: 150\n};\nexport default TableCardHeader;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/DataTables/TableCardHeader.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","Children","isValidElement","cloneElement","PropTypes","CSSTransitionGroup","cn","TICK","oneRequired","invalidIf","CardTitleBlock","TableCardHeader","_PureComponent","props","_this","state","animating","componentWillReceiveProps","nextProps","_this2","visible","nVisible","transitionEnterTimeout","transitionLeaveTimeout","timeout","_timeout","clearTimeout","setTimeout","setState","_cloneCellRight","noAdjust","children","map","toArray","child","className","_cloneLeftChildren","noClone","render","_props","style","title","titleId","actions","contextualTitleId","contextualChildren","noActionsAdjust","noChildrenAdjust","noLeftChildrenClone","propChildren","propLeftChildren","leftChildren","propContextualTitle","contextualTitle","_props2","createElement","id","concat","tabIndex","contextualHeader","mergedStyles","overflow","propTypes","object","string","component","oneOfType","func","isRequired","transitionName","number","node","element","arrayOf","bool","defaultProps"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEA,SAASS,wBAAT,CAAkCC,GAAlC,EAAuCC,IAAvC,EAA6C;AAAE,MAAIX,MAAM,GAAG,EAAb;;AAAiB,OAAK,IAAIC,CAAT,IAAcS,GAAd,EAAmB;AAAE,QAAIC,IAAI,CAACC,OAAL,CAAaX,CAAb,KAAmB,CAAvB,EAA0B;AAAU,QAAI,CAACH,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCE,GAArC,EAA0CT,CAA1C,CAAL,EAAmD;AAAUD,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAYS,GAAG,CAACT,CAAD,CAAf;AAAqB;;AAAC,SAAOD,MAAP;AAAgB;;AAE5N,SAASa,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,0BAAT,CAAoCC,IAApC,EAA0CV,IAA1C,EAAgD;AAAE,MAAI,CAACU,IAAL,EAAW;AAAE,UAAM,IAAIC,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOX,IAAI,KAAK,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAjD,CAAJ,GAAmEA,IAAnE,GAA0EU,IAAjF;AAAwF;;AAEhP,SAASE,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIN,SAAJ,CAAc,6DAA6D,OAAOM,UAAlF,CAAN;AAAsG;;AAACD,EAAAA,QAAQ,CAACf,SAAT,GAAqBR,MAAM,CAACyB,MAAP,CAAcD,UAAU,IAAIA,UAAU,CAAChB,SAAvC,EAAkD;AAAEkB,IAAAA,WAAW,EAAE;AAAEC,MAAAA,KAAK,EAAEJ,QAAT;AAAmBK,MAAAA,UAAU,EAAE,KAA/B;AAAsCC,MAAAA,QAAQ,EAAE,IAAhD;AAAsDC,MAAAA,YAAY,EAAE;AAApE;AAAf,GAAlD,CAArB;AAAqK,MAAIN,UAAJ,EAAgBxB,MAAM,CAAC+B,cAAP,GAAwB/B,MAAM,CAAC+B,cAAP,CAAsBR,QAAtB,EAAgCC,UAAhC,CAAxB,GAAsED,QAAQ,CAACS,SAAT,GAAqBR,UAA3F;AAAwG;;AAE9e,OAAOS,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,cAAzC,EAAyDC,YAAzD,QAA6E,OAA7E;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA;;;;;AAKA,IAAIC,eAAe,GAAG,UAAUC,cAAV,EAA0B;AAC9CxB,EAAAA,SAAS,CAACuB,eAAD,EAAkBC,cAAlB,CAAT;;AAEA,WAASD,eAAT,CAAyBE,KAAzB,EAAgC;AAC9BhC,IAAAA,eAAe,CAAC,IAAD,EAAO8B,eAAP,CAAf;;AAEA,QAAIG,KAAK,GAAG7B,0BAA0B,CAAC,IAAD,EAAO2B,cAAc,CAACpC,IAAf,CAAoB,IAApB,EAA0BqC,KAA1B,CAAP,CAAtC;;AAEAC,IAAAA,KAAK,CAACC,KAAN,GAAc;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,WAAOF,KAAP;AACD;;AAEDH,EAAAA,eAAe,CAACrC,SAAhB,CAA0B2C,yBAA1B,GAAsD,SAASA,yBAAT,CAAmCC,SAAnC,EAA8C;AAClG,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAIC,OAAO,GAAG,KAAKP,KAAL,CAAWO,OAAzB;AACA,QAAIC,QAAQ,GAAGH,SAAS,CAACE,OAAzB;AAAA,QACIE,sBAAsB,GAAGJ,SAAS,CAACI,sBADvC;AAAA,QAEIC,sBAAsB,GAAGL,SAAS,CAACK,sBAFvC;AAIA,QAAIC,OAAO,GAAG,CAACH,QAAD,GAAYE,sBAAZ,GAAqCD,sBAAnD;;AACA,QAAIF,OAAO,KAAKC,QAAhB,EAA0B;AACxB,UAAI,KAAKI,QAAT,EAAmB;AACjBC,QAAAA,YAAY,CAAC,KAAKD,QAAN,CAAZ;AACD;;AAED,WAAKA,QAAL,GAAgBE,UAAU,CAAC,YAAY;AACrCR,QAAAA,MAAM,CAACM,QAAP,GAAkBE,UAAU,CAAC,YAAY;AACvCR,UAAAA,MAAM,CAACM,QAAP,GAAkB,IAAlB;;AACAN,UAAAA,MAAM,CAACS,QAAP,CAAgB;AAAEZ,YAAAA,SAAS,EAAE;AAAb,WAAhB;AACD,SAH2B,EAGzBQ,OAHyB,CAA5B;AAID,OALyB,EAKvBjB,IALuB,CAA1B;;AAOA,UAAI,CAAC,KAAKQ,KAAL,CAAWC,SAAhB,EAA2B;AACzB,aAAKY,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF;AACF,GAzBD;;AA2BAL,EAAAA,eAAe,CAACrC,SAAhB,CAA0BuD,eAA1B,GAA4C,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,QAAnC,EAA6C;AACvF,QAAID,QAAQ,IAAI,CAACC,QAAjB,EAA2B;AACzB,aAAOA,QAAP;AACD;;AAED,WAAO9B,QAAQ,CAAC+B,GAAT,CAAa/B,QAAQ,CAACgC,OAAT,CAAiBF,QAAjB,CAAb,EAAyC,UAAUG,KAAV,EAAiBjE,CAAjB,EAAoB;AAClE,UAAIA,CAAC,KAAK,CAAN,IAAWiC,cAAc,CAACgC,KAAD,CAA7B,EAAsC;AACpC,eAAO/B,YAAY,CAAC+B,KAAD,EAAQ;AAAEC,UAAAA,SAAS,EAAE7B,EAAE,CAAC,gBAAD,EAAmB4B,KAAK,CAACrB,KAAN,CAAYsB,SAA/B;AAAf,SAAR,CAAnB;AACD;;AAED,aAAOD,KAAP;AACD,KANM,CAAP;AAOD,GAZD;;AAcAvB,EAAAA,eAAe,CAACrC,SAAhB,CAA0B8D,kBAA1B,GAA+C,SAASA,kBAAT,CAA4BC,OAA5B,EAAqCN,QAArC,EAA+C;AAC5F,QAAIM,OAAO,IAAI,CAACN,QAAhB,EAA0B;AACxB,aAAOA,QAAP;AACD;;AAED,WAAO9B,QAAQ,CAAC+B,GAAT,CAAa/B,QAAQ,CAACgC,OAAT,CAAiBF,QAAjB,CAAb,EAAyC,UAAUG,KAAV,EAAiB;AAC/D,aAAO/B,YAAY,CAAC+B,KAAD,EAAQ;AACzBC,QAAAA,SAAS,EAAE7B,EAAE,CAAC,gBAAD,EAAmB4B,KAAK,CAACrB,KAAN,CAAYsB,SAA/B;AADY,OAAR,CAAnB;AAGD,KAJM,CAAP;AAKD,GAVD;;AAYAxB,EAAAA,eAAe,CAACrC,SAAhB,CAA0BgE,MAA1B,GAAmC,SAASA,MAAT,GAAkB;AACnD,QAAItB,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA3B;;AAEA,QAAIuB,MAAM,GAAG,KAAK1B,KAAlB;AAAA,QACI2B,KAAK,GAAGD,MAAM,CAACC,KADnB;AAAA,QAEIL,SAAS,GAAGI,MAAM,CAACJ,SAFvB;AAAA,QAGIM,KAAK,GAAGF,MAAM,CAACE,KAHnB;AAAA,QAIIC,OAAO,GAAGH,MAAM,CAACG,OAJrB;AAAA,QAKIC,OAAO,GAAGJ,MAAM,CAACI,OALrB;AAAA,QAMIC,iBAAiB,GAAGL,MAAM,CAACK,iBAN/B;AAAA,QAOIC,kBAAkB,GAAGN,MAAM,CAACM,kBAPhC;AAAA,QAQIC,eAAe,GAAGP,MAAM,CAACO,eAR7B;AAAA,QASIC,gBAAgB,GAAGR,MAAM,CAACQ,gBAT9B;AAAA,QAUIC,mBAAmB,GAAGT,MAAM,CAACS,mBAVjC;AAAA,QAWI5B,OAAO,GAAGmB,MAAM,CAACnB,OAXrB;AAAA,QAYI6B,YAAY,GAAGV,MAAM,CAACR,QAZ1B;AAAA,QAaImB,gBAAgB,GAAGX,MAAM,CAACY,YAb9B;AAAA,QAcIC,mBAAmB,GAAGb,MAAM,CAACc,eAdjC;AAAA,QAeIxC,KAAK,GAAGpC,wBAAwB,CAAC8D,MAAD,EAAS,CAAC,OAAD,EAAU,WAAV,EAAuB,OAAvB,EAAgC,SAAhC,EAA2C,SAA3C,EAAsD,mBAAtD,EAA2E,oBAA3E,EAAiG,iBAAjG,EAAoH,kBAApH,EAAwI,qBAAxI,EAA+J,SAA/J,EAA0K,UAA1K,EAAsL,cAAtL,EAAsM,iBAAtM,CAAT,CAfpC;;AAiBA,QAAIe,OAAO,GAAG,KAAKzC,KAAnB;AAAA,QACIkB,QAAQ,GAAGuB,OAAO,CAACvB,QADvB;AAAA,QAEIoB,YAAY,GAAGG,OAAO,CAACH,YAF3B;AAAA,QAGIE,eAAe,GAAGC,OAAO,CAACD,eAH9B;AAKAtB,IAAAA,QAAQ,GAAG,KAAKF,eAAL,CAAqBkB,gBAArB,EAAuChB,QAAvC,CAAX;AACAoB,IAAAA,YAAY,GAAG,KAAKf,kBAAL,CAAwBY,mBAAxB,EAA6CG,YAA7C,CAAf;;AAEA,QAAIV,KAAJ,EAAW;AACTV,MAAAA,QAAQ,GAAGhC,KAAK,CAACwD,aAAN,CACT,KADS,EAET;AAAEpB,QAAAA,SAAS,EAAE,eAAb;AAA8B9D,QAAAA,GAAG,EAAE;AAAnC,OAFS,EAGT0B,KAAK,CAACwD,aAAN,CAAoB7C,cAApB,EAAoC;AAAE8C,QAAAA,EAAE,EAAEd,OAAN;AAAeD,QAAAA,KAAK,EAAEA;AAAtB,OAApC,CAHS,EAITV,QAJS,CAAX;AAMD,KAPD,MAOO,IAAIoB,YAAJ,EAAkB;AACvBA,MAAAA,YAAY,GAAGlD,QAAQ,CAACgC,OAAT,CAAiBkB,YAAjB,CAAf;;AAEA,UAAIpB,QAAJ,EAAc;AACZA,QAAAA,QAAQ,GAAGoB,YAAY,CAACM,MAAb,CAAoBxD,QAAQ,CAACgC,OAAT,CAAiBF,QAAjB,CAApB,CAAX;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ,GAAGoB,YAAX;AACD;AACF;;AAED,QAAIE,eAAJ,EAAqB;AACnBA,MAAAA,eAAe,GAAGtD,KAAK,CAACwD,aAAN,CAChB,IADgB,EAEhB;AACEC,QAAAA,EAAE,EAAEZ,iBADN;AAEET,QAAAA,SAAS,EAAE,sDAFb;AAGEuB,QAAAA,QAAQ,EAAEd,iBAAiB,GAAG,CAAC,CAAJ,GAAQ;AAHrC,OAFgB,EAOhBS,eAPgB,CAAlB;AASD;;AAED,QAAIM,gBAAgB,GAAG5D,KAAK,CAACwD,aAAN,CACrB,KADqB,EAErB;AAAElF,MAAAA,GAAG,EAAE,mBAAP;AAA4B8D,MAAAA,SAAS,EAAE;AAAvC,KAFqB,EAGrBkB,eAHqB,EAIrBR,kBAJqB,EAKrB,KAAKhB,eAAL,CAAqBiB,eAArB,EAAsCH,OAAtC,CALqB,CAAvB;AAQA,QAAIiB,YAAY,GAAGpB,KAAnB;;AACA,QAAIxB,SAAJ,EAAe;AACb4C,MAAAA,YAAY,GAAG9F,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkByE,KAAlB,EAAyB;AAAEqB,QAAAA,QAAQ,EAAE;AAAZ,OAAzB,CAAf;AACD;;AAED,WAAO9D,KAAK,CAACwD,aAAN,CACLlD,kBADK,EAELxC,QAAQ,CAAC,EAAD,EAAKgD,KAAL,EAAY;AAClB2B,MAAAA,KAAK,EAAEoB,YADW;AAElBzB,MAAAA,SAAS,EAAE7B,EAAE,CAAC,sBAAD,EAAyB;AACpC,0CAAkC,CAACmC;AADC,OAAzB,EAEVN,SAFU;AAFK,KAAZ,CAFH,EAQLJ,QARK,EASLX,OAAO,GAAGuC,gBAAH,GAAsB,IATxB,CAAP;AAWD,GAjFD;;AAmFA,SAAOhD,eAAP;AACD,CArJqB,CAqJpBX,aArJoB,CAAtB;;AAuJAW,eAAe,CAACmD,SAAhB,GAA4B;AAC1B;;;AAGAtB,EAAAA,KAAK,EAAEpC,SAAS,CAAC2D,MAJS;;AAM1B;;;AAGA5B,EAAAA,SAAS,EAAE/B,SAAS,CAAC4D,MATK;;AAW1B;;;AAGAC,EAAAA,SAAS,EAAE7D,SAAS,CAAC8D,SAAV,CAAoB,CAAC9D,SAAS,CAAC+D,IAAX,EAAiB/D,SAAS,CAAC4D,MAA3B,EAAmC5D,SAAS,CAAC2D,MAA7C,CAApB,EAA0EK,UAd3D;;AAgB1B;;;AAGAC,EAAAA,cAAc,EAAEjE,SAAS,CAAC4D,MAAV,CAAiBI,UAnBP;;AAqB1B;;;AAGA9C,EAAAA,sBAAsB,EAAElB,SAAS,CAACkE,MAAV,CAAiBF,UAxBf;;AA0B1B;;;AAGA7C,EAAAA,sBAAsB,EAAEnB,SAAS,CAACkE,MAAV,CAAiBF,UA7Bf;;AA+B1B;;;;AAIA3B,EAAAA,KAAK,EAAEjC,WAAW,CAACJ,SAAS,CAACmE,IAAX,EAAiB,cAAjB,EAAiC,UAAjC,CAnCQ;;AAqC1B;;;AAGA7B,EAAAA,OAAO,EAAEtC,SAAS,CAAC8D,SAAV,CAAoB,CAAC9D,SAAS,CAACkE,MAAX,EAAmBlE,SAAS,CAAC4D,MAA7B,CAApB,CAxCiB;;AA0C1B;;;;AAIAX,EAAAA,eAAe,EAAEjD,SAAS,CAACmE,IA9CD;;AAgD1B;;;AAGA3B,EAAAA,iBAAiB,EAAExC,SAAS,CAAC8D,SAAV,CAAoB,CAAC9D,SAAS,CAACkE,MAAX,EAAmBlE,SAAS,CAAC4D,MAA7B,CAApB,CAnDO;;AAqD1B;;;;AAIAnB,EAAAA,kBAAkB,EAAEzC,SAAS,CAACmE,IAzDJ;;AA2D1B;;;AAGApB,EAAAA,YAAY,EAAE1C,SAAS,CAACL,SAAS,CAAC8D,SAAV,CAAoB,CAAC9D,SAAS,CAACoE,OAAX,EAAoBpE,SAAS,CAACqE,OAAV,CAAkBrE,SAAS,CAACoE,OAA5B,CAApB,CAApB,CAAD,EAAiF,OAAjF,CA9DG;;AAgE1B;;;;AAIAzC,EAAAA,QAAQ,EAAE3B,SAAS,CAACmE,IApEM;;AAsE1B;;;;AAIA5B,EAAAA,OAAO,EAAEvC,SAAS,CAAC8D,SAAV,CAAoB,CAAC9D,SAAS,CAACoE,OAAX,EAAoBpE,SAAS,CAACqE,OAAV,CAAkBrE,SAAS,CAACoE,OAA5B,CAApB,CAApB,CA1EiB;;AA4E1B;;;;AAIA1B,EAAAA,eAAe,EAAE1C,SAAS,CAACsE,IAhFD;;AAkF1B;;;;AAIA3B,EAAAA,gBAAgB,EAAE3C,SAAS,CAACsE,IAtFF;;AAwF1B;;;;AAIA1B,EAAAA,mBAAmB,EAAE5C,SAAS,CAACsE,IA5FL;;AA8F1B;;;AAGAtD,EAAAA,OAAO,EAAEhB,SAAS,CAACsE,IAAV,CAAeN;AAjGE,CAA5B;AAmGAzD,eAAe,CAACgE,YAAhB,GAA+B;AAC7BV,EAAAA,SAAS,EAAE,QADkB;AAE7BI,EAAAA,cAAc,EAAE,cAFa;AAG7B/C,EAAAA,sBAAsB,EAAE,GAHK;AAI7BC,EAAAA,sBAAsB,EAAE;AAJK,CAA/B;AAMA,eAAeZ,eAAf","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent, Children, isValidElement, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport oneRequired from '../utils/PropTypes/oneRequired';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport CardTitleBlock from '../Cards/CardTitleBlock';\n\n/**\n * The `TableCardHeader` is used when contextual actions should appear when\n * a user selects a row.\n */\n\nvar TableCardHeader = function (_PureComponent) {\n  _inherits(TableCardHeader, _PureComponent);\n\n  function TableCardHeader(props) {\n    _classCallCheck(this, TableCardHeader);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.state = { animating: false };\n    return _this;\n  }\n\n  TableCardHeader.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    var visible = this.props.visible;\n    var nVisible = nextProps.visible,\n        transitionEnterTimeout = nextProps.transitionEnterTimeout,\n        transitionLeaveTimeout = nextProps.transitionLeaveTimeout;\n\n    var timeout = !nVisible ? transitionLeaveTimeout : transitionEnterTimeout;\n    if (visible !== nVisible) {\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n      }\n\n      this._timeout = setTimeout(function () {\n        _this2._timeout = setTimeout(function () {\n          _this2._timeout = null;\n          _this2.setState({ animating: false });\n        }, timeout);\n      }, TICK);\n\n      if (!this.state.animating) {\n        this.setState({ animating: true });\n      }\n    }\n  };\n\n  TableCardHeader.prototype._cloneCellRight = function _cloneCellRight(noAdjust, children) {\n    if (noAdjust || !children) {\n      return children;\n    }\n\n    return Children.map(Children.toArray(children), function (child, i) {\n      if (i === 0 && isValidElement(child)) {\n        return cloneElement(child, { className: cn('md-cell--right', child.props.className) });\n      }\n\n      return child;\n    });\n  };\n\n  TableCardHeader.prototype._cloneLeftChildren = function _cloneLeftChildren(noClone, children) {\n    if (noClone || !children) {\n      return children;\n    }\n\n    return Children.map(Children.toArray(children), function (child) {\n      return cloneElement(child, {\n        className: cn('md-btn--dialog', child.props.className)\n      });\n    });\n  };\n\n  TableCardHeader.prototype.render = function render() {\n    var animating = this.state.animating;\n\n    var _props = this.props,\n        style = _props.style,\n        className = _props.className,\n        title = _props.title,\n        titleId = _props.titleId,\n        actions = _props.actions,\n        contextualTitleId = _props.contextualTitleId,\n        contextualChildren = _props.contextualChildren,\n        noActionsAdjust = _props.noActionsAdjust,\n        noChildrenAdjust = _props.noChildrenAdjust,\n        noLeftChildrenClone = _props.noLeftChildrenClone,\n        visible = _props.visible,\n        propChildren = _props.children,\n        propLeftChildren = _props.leftChildren,\n        propContextualTitle = _props.contextualTitle,\n        props = _objectWithoutProperties(_props, ['style', 'className', 'title', 'titleId', 'actions', 'contextualTitleId', 'contextualChildren', 'noActionsAdjust', 'noChildrenAdjust', 'noLeftChildrenClone', 'visible', 'children', 'leftChildren', 'contextualTitle']);\n\n    var _props2 = this.props,\n        children = _props2.children,\n        leftChildren = _props2.leftChildren,\n        contextualTitle = _props2.contextualTitle;\n\n    children = this._cloneCellRight(noChildrenAdjust, children);\n    leftChildren = this._cloneLeftChildren(noLeftChildrenClone, leftChildren);\n\n    if (title) {\n      children = React.createElement(\n        'div',\n        { className: 'md-card-title', key: 'main-title' },\n        React.createElement(CardTitleBlock, { id: titleId, title: title }),\n        children\n      );\n    } else if (leftChildren) {\n      leftChildren = Children.toArray(leftChildren);\n\n      if (children) {\n        children = leftChildren.concat(Children.toArray(children));\n      } else {\n        children = leftChildren;\n      }\n    }\n\n    if (contextualTitle) {\n      contextualTitle = React.createElement(\n        'h2',\n        {\n          id: contextualTitleId,\n          className: 'md-card-title--title md-card-title--title-contextual',\n          tabIndex: contextualTitleId ? -1 : null\n        },\n        contextualTitle\n      );\n    }\n\n    var contextualHeader = React.createElement(\n      'div',\n      { key: 'contextual-header', className: 'md-card-title md-card-title--contextual' },\n      contextualTitle,\n      contextualChildren,\n      this._cloneCellRight(noActionsAdjust, actions)\n    );\n\n    var mergedStyles = style;\n    if (animating) {\n      mergedStyles = Object.assign({}, style, { overflow: 'hidden' });\n    }\n\n    return React.createElement(\n      CSSTransitionGroup,\n      _extends({}, props, {\n        style: mergedStyles,\n        className: cn('md-table-card-header', {\n          'md-table-card-header--no-title': !title\n        }, className)\n      }),\n      children,\n      visible ? contextualHeader : null\n    );\n  };\n\n  return TableCardHeader;\n}(PureComponent);\n\nTableCardHeader.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component to render as.\n   */\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * The transition name to use when the contextual header appears.\n   */\n  transitionName: PropTypes.string.isRequired,\n\n  /**\n   * The transition time to use when the contextual header appears.\n   */\n  transitionEnterTimeout: PropTypes.number.isRequired,\n\n  /**\n   * The transition time to use when the contextual header disappears.\n   */\n  transitionLeaveTimeout: PropTypes.number.isRequired,\n\n  /**\n   * An optional title to display. It is invalid to have both `title` and `leftChildren`\n   * defined as only one will be used.\n   */\n  title: oneRequired(PropTypes.node, 'leftChildren', 'children'),\n\n  /**\n   * An optional id to provide to the title.\n   */\n  titleId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional title to display in the contextual header. This will get wrapped in an `h2`\n   * tag and additional styles applied.\n   */\n  contextualTitle: PropTypes.node,\n\n  /**\n   * An optional id to provide to the contextual title.\n   */\n  contextualTitleId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Any additional children to display in the contextual header. This will be displayed after\n   * the optional `contextualTile` and before the `actions`.\n   */\n  contextualChildren: PropTypes.node,\n\n  /**\n   * An optional button or list of buttons to display instead of a title.\n   */\n  leftChildren: invalidIf(PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]), 'title'),\n\n  /**\n   * An additional children to display after the `title` or `leftChildren` prop.\n   * This is _normally_ a list of icon button or menu button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * An optional button/menu button or a list of button/menu button to display in the\n   * contextual header once the user has selected a row or multiple rows.\n   */\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n\n  /**\n   * Boolean if the `actions` prop should not have each element cloned with additional\n   * class names.\n   */\n  noActionsAdjust: PropTypes.bool,\n\n  /**\n   * Boolean if the `children` prop should not have each element cloned with additional\n   * class names.\n   */\n  noChildrenAdjust: PropTypes.bool,\n\n  /**\n   * Boolean if the `leftChildren` prop should not have each element cloned with additional\n   * class names.\n   */\n  noLeftChildrenClone: PropTypes.bool,\n\n  /**\n   * Boolean if the contextual header is currently visible.\n   */\n  visible: PropTypes.bool.isRequired\n};\nTableCardHeader.defaultProps = {\n  component: 'header',\n  transitionName: 'md-drop-down',\n  transitionEnterTimeout: 150,\n  transitionLeaveTimeout: 150\n};\nexport default TableCardHeader;"]},"metadata":{},"sourceType":"module"}