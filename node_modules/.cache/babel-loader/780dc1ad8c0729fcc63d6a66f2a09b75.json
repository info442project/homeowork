{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport themeColors from '../utils/themeColors';\n/**\n * The main use case of the `Badge` component is for notifications. It can\n * however also place any content floating to whatever children are supplied.\n */\n\nvar Badge = function (_PureComponent) {\n  _inherits(Badge, _PureComponent);\n\n  function Badge(props) {\n    _classCallCheck(this, Badge);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    var single = _this._isSingleChild(props);\n\n    _this.state = {\n      single: single,\n      element: single && isValidElement(props.children),\n      count: _this._normalizeCount(props)\n    };\n    return _this;\n  }\n\n  Badge.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        badgeContent = _props.badgeContent,\n        max = _props.max,\n        children = _props.children;\n    var nextState = void 0;\n\n    if (badgeContent !== nextProps.badgeContent || max !== nextProps.max) {\n      nextState = {\n        count: this._normalizeCount(nextProps)\n      };\n    }\n\n    if (children !== nextProps.children) {\n      nextState = nextState || {};\n      nextState.single = this._isSingleChild(nextProps);\n      nextState.element = nextState.single && isValidElement(nextProps.children);\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  };\n\n  Badge.prototype._isSingleChild = function _isSingleChild(_ref) {\n    var children = _ref.children;\n    return Children.count(children) === 1;\n  };\n\n  Badge.prototype._normalizeCount = function _normalizeCount(_ref2) {\n    var badgeContent = _ref2.badgeContent,\n        max = _ref2.max;\n    var count = void 0;\n\n    if (max) {\n      var n = parseInt(badgeContent, 10);\n\n      if (!Number.isNaN(n) && n.toString() === badgeContent.toString()) {\n        count = n > max ? max + '+' : n;\n      }\n    }\n\n    return count;\n  };\n\n  Badge.prototype.render = function render() {\n    var _state = this.state,\n        count = _state.count,\n        single = _state.single,\n        element = _state.element;\n\n    var _props2 = this.props,\n        className = _props2.className,\n        badgeStyle = _props2.badgeStyle,\n        badgeClassName = _props2.badgeClassName,\n        badgeContent = _props2.badgeContent,\n        Component = _props2.component,\n        children = _props2.children,\n        primary = _props2.primary,\n        secondary = _props2.secondary,\n        defaultTheme = _props2.default,\n        circular = _props2.circular,\n        badgeId = _props2.badgeId,\n        invisibleOnZero = _props2.invisibleOnZero,\n        max = _props2.max,\n        props = _objectWithoutProperties(_props2, ['className', 'badgeStyle', 'badgeClassName', 'badgeContent', 'component', 'children', 'primary', 'secondary', 'default', 'circular', 'badgeId', 'invisibleOnZero', 'max']);\n\n    var useCircular = typeof circular !== 'undefined' ? circular : typeof count !== 'undefined';\n    var content = children;\n\n    if (single && element) {\n      var c = Children.only(content);\n\n      if (!c.props['aria-describedby']) {\n        content = cloneElement(c, {\n          'aria-describedby': badgeId\n        });\n      }\n    } else if (single && !element && !props['aria-describedby']) {\n      props['aria-describedby'] = badgeId;\n    }\n\n    var badge = React.createElement('span', {\n      id: badgeId,\n      key: 'badge',\n      role: 'status',\n      style: badgeStyle,\n      className: cn('md-badge', {\n        'md-badge--circular': useCircular,\n        'md-badge--default': defaultTheme\n      }, themeColors({\n        primary: primary,\n        secondary: secondary,\n        text: useCircular,\n        themeText: !primary && !secondary\n      }, badgeClassName))\n    }, count || badgeContent);\n    return React.createElement(Component, _extends({}, props, {\n      className: cn('md-badge-container md-inline-block', className)\n    }), content, invisibleOnZero && count === 0 ? null : badge);\n  };\n\n  return Badge;\n}(PureComponent);\n\nBadge.propTypes = {\n  /**\n   * An optional style to apply to the badge's container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the badge's container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the badge.\n   */\n  badgeStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the badge.\n   */\n  badgeClassName: PropTypes.string,\n\n  /**\n   * The id to give the badge's content. This is required to help with the\n   * `aria-describedby` attribute that should be applied to one of the children.\n   *\n   * If there is only one child that is a valid React element, the `aria-describedby`\n   * will automatically be cloned into that child (so make sure your component passes\n   * that prop correctly).\n   *\n   * If there is only one child, but it is a string or number, the badge's container\n   * will be updated to include the `aria-describedby`.\n   *\n   * If there is more than child, you are required to add it to a child yourself.\n   */\n  badgeId: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n\n  /**\n   * The content to display with the badge's content. The size of this\n   * element is determinate of the location of the content. You might have\n   * to update the positioning yourself.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * The component to render the badge as.\n   */\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]).isRequired,\n\n  /**\n   * The content to display in the badge. If the content is a number or a number string,\n   * the number will be normalized if `normalizeContent` is enabled.\n   */\n  badgeContent: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.node]).isRequired,\n\n  /**\n   * This will basically update the display value of the content to only be 2 digits. If\n   * a number is greater than 99, 99+ will be displayed instead. This is really just to\n   * keep the count inside the circular bubble.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Boolean if the primary color background should get applied to the badge's content.\n   */\n  primary: PropTypes.bool,\n\n  /**\n   * Boolean if the secondary color background should get applied to the badge's content.\n   */\n  secondary: PropTypes.bool,\n\n  /**\n   * Boolean if the default styles should be applied.\n   */\n  default: PropTypes.bool,\n\n  /**\n   * Boolean if the badge's content should appear in a circular container. If this is\n   * undefined, the content will be in a circular container if the badgeContent is a number.\n   */\n  circular: PropTypes.bool,\n\n  /**\n   * Boolean if the badge's notification should be invisible when the count is 0.\n   */\n  invisibleOnZero: PropTypes.bool\n};\nBadge.defaultProps = {\n  max: 99,\n  component: 'div'\n};\nexport default Badge;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Badges/Badge.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","Children","cloneElement","isValidElement","PropTypes","cn","isRequiredForA11y","themeColors","Badge","_PureComponent","props","_this","single","_isSingleChild","state","element","children","count","_normalizeCount","componentWillReceiveProps","nextProps","_props","badgeContent","max","nextState","setState","_ref","_ref2","n","parseInt","Number","isNaN","toString","render","_state","_props2","className","badgeStyle","badgeClassName","Component","component","primary","secondary","defaultTheme","default","circular","badgeId","invisibleOnZero","useCircular","content","c","only","badge","createElement","id","role","style","text","themeText","propTypes","object","string","oneOfType","number","node","isRequired","func","bool","defaultProps"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The main use case of the `Badge` component is for notifications. It can\n * however also place any content floating to whatever children are supplied.\n */\n\nvar Badge = function (_PureComponent) {\n  _inherits(Badge, _PureComponent);\n\n  function Badge(props) {\n    _classCallCheck(this, Badge);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    var single = _this._isSingleChild(props);\n    _this.state = {\n      single: single,\n      element: single && isValidElement(props.children),\n      count: _this._normalizeCount(props)\n    };\n    return _this;\n  }\n\n  Badge.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        badgeContent = _props.badgeContent,\n        max = _props.max,\n        children = _props.children;\n\n    var nextState = void 0;\n    if (badgeContent !== nextProps.badgeContent || max !== nextProps.max) {\n      nextState = { count: this._normalizeCount(nextProps) };\n    }\n\n    if (children !== nextProps.children) {\n      nextState = nextState || {};\n      nextState.single = this._isSingleChild(nextProps);\n      nextState.element = nextState.single && isValidElement(nextProps.children);\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  };\n\n  Badge.prototype._isSingleChild = function _isSingleChild(_ref) {\n    var children = _ref.children;\n\n    return Children.count(children) === 1;\n  };\n\n  Badge.prototype._normalizeCount = function _normalizeCount(_ref2) {\n    var badgeContent = _ref2.badgeContent,\n        max = _ref2.max;\n\n    var count = void 0;\n    if (max) {\n      var n = parseInt(badgeContent, 10);\n      if (!Number.isNaN(n) && n.toString() === badgeContent.toString()) {\n        count = n > max ? max + '+' : n;\n      }\n    }\n\n    return count;\n  };\n\n  Badge.prototype.render = function render() {\n    var _state = this.state,\n        count = _state.count,\n        single = _state.single,\n        element = _state.element;\n\n    var _props2 = this.props,\n        className = _props2.className,\n        badgeStyle = _props2.badgeStyle,\n        badgeClassName = _props2.badgeClassName,\n        badgeContent = _props2.badgeContent,\n        Component = _props2.component,\n        children = _props2.children,\n        primary = _props2.primary,\n        secondary = _props2.secondary,\n        defaultTheme = _props2.default,\n        circular = _props2.circular,\n        badgeId = _props2.badgeId,\n        invisibleOnZero = _props2.invisibleOnZero,\n        max = _props2.max,\n        props = _objectWithoutProperties(_props2, ['className', 'badgeStyle', 'badgeClassName', 'badgeContent', 'component', 'children', 'primary', 'secondary', 'default', 'circular', 'badgeId', 'invisibleOnZero', 'max']);\n\n    var useCircular = typeof circular !== 'undefined' ? circular : typeof count !== 'undefined';\n    var content = children;\n    if (single && element) {\n      var c = Children.only(content);\n      if (!c.props['aria-describedby']) {\n        content = cloneElement(c, { 'aria-describedby': badgeId });\n      }\n    } else if (single && !element && !props['aria-describedby']) {\n      props['aria-describedby'] = badgeId;\n    }\n\n    var badge = React.createElement(\n      'span',\n      {\n        id: badgeId,\n        key: 'badge',\n        role: 'status',\n        style: badgeStyle,\n        className: cn('md-badge', {\n          'md-badge--circular': useCircular,\n          'md-badge--default': defaultTheme\n        }, themeColors({\n          primary: primary,\n          secondary: secondary,\n          text: useCircular,\n          themeText: !primary && !secondary\n        }, badgeClassName))\n      },\n      count || badgeContent\n    );\n\n    return React.createElement(\n      Component,\n      _extends({}, props, {\n        className: cn('md-badge-container md-inline-block', className)\n      }),\n      content,\n      invisibleOnZero && count === 0 ? null : badge\n    );\n  };\n\n  return Badge;\n}(PureComponent);\n\nBadge.propTypes = {\n  /**\n   * An optional style to apply to the badge's container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the badge's container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the badge.\n   */\n  badgeStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the badge.\n   */\n  badgeClassName: PropTypes.string,\n\n  /**\n   * The id to give the badge's content. This is required to help with the\n   * `aria-describedby` attribute that should be applied to one of the children.\n   *\n   * If there is only one child that is a valid React element, the `aria-describedby`\n   * will automatically be cloned into that child (so make sure your component passes\n   * that prop correctly).\n   *\n   * If there is only one child, but it is a string or number, the badge's container\n   * will be updated to include the `aria-describedby`.\n   *\n   * If there is more than child, you are required to add it to a child yourself.\n   */\n  badgeId: isRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n\n  /**\n   * The content to display with the badge's content. The size of this\n   * element is determinate of the location of the content. You might have\n   * to update the positioning yourself.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * The component to render the badge as.\n   */\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]).isRequired,\n\n  /**\n   * The content to display in the badge. If the content is a number or a number string,\n   * the number will be normalized if `normalizeContent` is enabled.\n   */\n  badgeContent: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.node]).isRequired,\n\n  /**\n   * This will basically update the display value of the content to only be 2 digits. If\n   * a number is greater than 99, 99+ will be displayed instead. This is really just to\n   * keep the count inside the circular bubble.\n   */\n  max: PropTypes.number,\n\n  /**\n   * Boolean if the primary color background should get applied to the badge's content.\n   */\n  primary: PropTypes.bool,\n\n  /**\n   * Boolean if the secondary color background should get applied to the badge's content.\n   */\n  secondary: PropTypes.bool,\n\n  /**\n   * Boolean if the default styles should be applied.\n   */\n  default: PropTypes.bool,\n\n  /**\n   * Boolean if the badge's content should appear in a circular container. If this is\n   * undefined, the content will be in a circular container if the badgeContent is a number.\n   */\n  circular: PropTypes.bool,\n\n  /**\n   * Boolean if the badge's notification should be invisible when the count is 0.\n   */\n  invisibleOnZero: PropTypes.bool\n};\nBadge.defaultProps = {\n  max: 99,\n  component: 'div'\n};\nexport default Badge;"]},"metadata":{},"sourceType":"module"}