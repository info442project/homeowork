{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport cn from 'classnames';\nimport getField from '../utils/getField';\nimport headerContextTypes from './headerContextTypes';\nimport rowContextTypes from './rowContextTypes';\nimport TableCheckbox from './TableCheckbox';\n/**\n * A component for displaying a row in a `DataTable`. This will\n * automatically add a `Checkbox` component to the row if it is not\n * a `plain` table.\n */\n\nvar TableRow = function (_Component) {\n  _inherits(TableRow, _Component);\n\n  function TableRow(props, context) {\n    _classCallCheck(this, TableRow);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _this._handleMouseOver = function (e) {\n      if (_this.props.onMouseOver) {\n        _this.props.onMouseOver(e);\n      }\n\n      if (_this.context.header) {\n        return;\n      }\n\n      var target = e.target;\n\n      while (target && target.parentNode) {\n        if (target.classList && _this._ignoreHoverState(target.classList)) {\n          _this.setState({\n            hover: false\n          });\n\n          return;\n        }\n\n        target = target.parentNode;\n      }\n\n      _this.setState({\n        hover: true\n      });\n    };\n\n    _this._handleMouseLeave = function (e) {\n      if (_this.props.onMouseLeave) {\n        _this.props.onMouseLeave(e);\n      }\n\n      if (_this.context.header) {\n        return;\n      }\n\n      _this.setState({\n        hover: false\n      });\n    };\n\n    _this._handleCheckboxClick = function (checked, e) {\n      var rowIndex = _this._row.rowIndex;\n\n      if (_this.props.onCheckboxClick) {\n        _this.props.onCheckboxClick(rowIndex, checked, e);\n      }\n\n      _this.context.toggleSelectedRow(rowIndex, _this.context.header, e);\n    };\n\n    _this._setRow = function (row) {\n      _this._row = row;\n    };\n\n    _this.state = {\n      hover: false\n    };\n    return _this;\n  }\n\n  TableRow.prototype.getChildContext = function getChildContext() {\n    var _context = this.context,\n        baseId = _context.baseId,\n        context = _objectWithoutProperties(_context, ['baseId']);\n\n    var id = baseId + '-' + (this._row ? this._row.rowIndex : null);\n    return _extends({}, context, {\n      rowId: context.header ? baseId + '-toggle-all' : id\n    });\n  };\n  /**\n   * Need to ignore adding the hover state if the mouse is over a menu/menu item\n   * or the edit dialog is open.\n   *\n   * @param {Function} classList - the classList to use for checking cn\n   * @return {Boolean} true if the hover state should be ignored for this classList\n   */\n\n\n  TableRow.prototype._ignoreHoverState = function _ignoreHoverState(classList) {\n    return classList.contains('md-list--menu') || classList.contains('md-edit-dialog');\n  };\n\n  TableRow.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        className = _props.className,\n        children = _props.children,\n        selected = _props.selected,\n        selectable = _props.selectable,\n        onCheckboxClick = _props.onCheckboxClick,\n        autoAdjust = _props.autoAdjust,\n        props = _objectWithoutProperties(_props, ['className', 'children', 'selected', 'selectable', 'onCheckboxClick', 'autoAdjust']);\n\n    var hover = this.state.hover;\n    var checkbox = void 0;\n\n    if (typeof selectable !== 'undefined' ? selectable : !this.context.plain && this.context.selectableRows) {\n      checkbox = React.createElement(TableCheckbox, {\n        key: 'checkbox',\n        checked: selected,\n        onChange: this._handleCheckboxClick,\n        index: this._row ? this._row.rowIndex : null\n      });\n    }\n\n    var length = Children.count(children) - 1;\n    var columns = Children.map(Children.toArray(children), function (col, i) {\n      var adjusted = col.props.adjusted;\n\n      if (typeof adjusted === 'undefined') {\n        adjusted = i === length ? false : undefined;\n      }\n\n      return cloneElement(col, {\n        cellIndex: i + (checkbox ? 1 : 0),\n        header: getField(col.props, _this2.context, 'header'),\n        adjusted: adjusted\n      });\n    });\n    return React.createElement('tr', _extends({}, props, {\n      ref: this._setRow,\n      className: cn('md-table-row', className, {\n        'md-table-row--hover': hover,\n        'md-table-row--active': !this.context.header && selected\n      }),\n      onMouseOver: this._handleMouseOver,\n      onMouseLeave: this._handleMouseLeave\n    }), checkbox, columns);\n  };\n\n  return TableRow;\n}(Component);\n\nTableRow.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the row.\n   */\n  className: PropTypes.string,\n\n  /**\n   * A single or list of `TableColumn` to display in the table.\n   *\n   * > The specs \"require\" at least 3 columns for a non-plain data table, but that isn't\n   * strictly enforced here.\n   */\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element), PropTypes.node]).isRequired,\n\n  /**\n   * An optional onClick function to call when a row is clicked.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * A function to call when the checkbox is clicked. This\n   * function will will be called with `(rowIndex, checked, event)`.\n   * The `TableBody` and `TableHeader` components will automatically\n   * merge in a function to toggle the checkbox.\n   */\n  onCheckboxClick: PropTypes.func,\n\n  /**\n   * An optional function to call onMouseOver.\n   */\n  onMouseOver: PropTypes.func,\n\n  /**\n   * An optional function to call onMouseLeave.\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * Boolean if the row is currently selected. If this value will be\n   * injected by the `TableHeader` or `TableBody` component.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * Boolean if the current row is selectable. This value will take precedence over anything inherited\n   * by the `DataTable`.\n   */\n  selectable: PropTypes.bool,\n  autoAdjust: deprecated(PropTypes.bool, 'Manually specify `grow` on one of the columns instead')\n};\nTableRow.contextTypes = headerContextTypes;\nTableRow.childContextTypes = rowContextTypes;\nexport default TableRow;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/DataTables/TableRow.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","Component","Children","cloneElement","PropTypes","deprecated","cn","getField","headerContextTypes","rowContextTypes","TableCheckbox","TableRow","_Component","props","context","_this","_handleMouseOver","e","onMouseOver","header","parentNode","classList","_ignoreHoverState","setState","hover","_handleMouseLeave","onMouseLeave","_handleCheckboxClick","checked","rowIndex","_row","onCheckboxClick","toggleSelectedRow","_setRow","row","state","getChildContext","_context","baseId","id","rowId","contains","render","_this2","_props","className","children","selected","selectable","autoAdjust","checkbox","plain","selectableRows","createElement","onChange","index","count","columns","map","toArray","col","adjusted","undefined","cellIndex","ref","propTypes","style","object","string","oneOfType","element","arrayOf","node","isRequired","onClick","func","bool","contextTypes","childContextTypes"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport cn from 'classnames';\n\nimport getField from '../utils/getField';\nimport headerContextTypes from './headerContextTypes';\nimport rowContextTypes from './rowContextTypes';\nimport TableCheckbox from './TableCheckbox';\n\n/**\n * A component for displaying a row in a `DataTable`. This will\n * automatically add a `Checkbox` component to the row if it is not\n * a `plain` table.\n */\n\nvar TableRow = function (_Component) {\n  _inherits(TableRow, _Component);\n\n  function TableRow(props, context) {\n    _classCallCheck(this, TableRow);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _this._handleMouseOver = function (e) {\n      if (_this.props.onMouseOver) {\n        _this.props.onMouseOver(e);\n      }\n\n      if (_this.context.header) {\n        return;\n      }\n\n      var target = e.target;\n      while (target && target.parentNode) {\n        if (target.classList && _this._ignoreHoverState(target.classList)) {\n          _this.setState({ hover: false });\n          return;\n        }\n\n        target = target.parentNode;\n      }\n\n      _this.setState({ hover: true });\n    };\n\n    _this._handleMouseLeave = function (e) {\n      if (_this.props.onMouseLeave) {\n        _this.props.onMouseLeave(e);\n      }\n\n      if (_this.context.header) {\n        return;\n      }\n\n      _this.setState({ hover: false });\n    };\n\n    _this._handleCheckboxClick = function (checked, e) {\n      var rowIndex = _this._row.rowIndex;\n\n      if (_this.props.onCheckboxClick) {\n        _this.props.onCheckboxClick(rowIndex, checked, e);\n      }\n\n      _this.context.toggleSelectedRow(rowIndex, _this.context.header, e);\n    };\n\n    _this._setRow = function (row) {\n      _this._row = row;\n    };\n\n    _this.state = { hover: false };\n    return _this;\n  }\n\n  TableRow.prototype.getChildContext = function getChildContext() {\n    var _context = this.context,\n        baseId = _context.baseId,\n        context = _objectWithoutProperties(_context, ['baseId']);\n\n    var id = baseId + '-' + (this._row ? this._row.rowIndex : null);\n    return _extends({}, context, {\n      rowId: context.header ? baseId + '-toggle-all' : id\n    });\n  };\n\n  /**\n   * Need to ignore adding the hover state if the mouse is over a menu/menu item\n   * or the edit dialog is open.\n   *\n   * @param {Function} classList - the classList to use for checking cn\n   * @return {Boolean} true if the hover state should be ignored for this classList\n   */\n\n\n  TableRow.prototype._ignoreHoverState = function _ignoreHoverState(classList) {\n    return classList.contains('md-list--menu') || classList.contains('md-edit-dialog');\n  };\n\n  TableRow.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        className = _props.className,\n        children = _props.children,\n        selected = _props.selected,\n        selectable = _props.selectable,\n        onCheckboxClick = _props.onCheckboxClick,\n        autoAdjust = _props.autoAdjust,\n        props = _objectWithoutProperties(_props, ['className', 'children', 'selected', 'selectable', 'onCheckboxClick', 'autoAdjust']);\n\n    var hover = this.state.hover;\n\n\n    var checkbox = void 0;\n    if (typeof selectable !== 'undefined' ? selectable : !this.context.plain && this.context.selectableRows) {\n      checkbox = React.createElement(TableCheckbox, {\n        key: 'checkbox',\n        checked: selected,\n        onChange: this._handleCheckboxClick,\n        index: this._row ? this._row.rowIndex : null\n      });\n    }\n\n    var length = Children.count(children) - 1;\n    var columns = Children.map(Children.toArray(children), function (col, i) {\n      var adjusted = col.props.adjusted;\n      if (typeof adjusted === 'undefined') {\n        adjusted = i === length ? false : undefined;\n      }\n\n      return cloneElement(col, {\n        cellIndex: i + (checkbox ? 1 : 0),\n        header: getField(col.props, _this2.context, 'header'),\n        adjusted: adjusted\n      });\n    });\n\n    return React.createElement(\n      'tr',\n      _extends({}, props, {\n        ref: this._setRow,\n        className: cn('md-table-row', className, {\n          'md-table-row--hover': hover,\n          'md-table-row--active': !this.context.header && selected\n        }),\n        onMouseOver: this._handleMouseOver,\n        onMouseLeave: this._handleMouseLeave\n      }),\n      checkbox,\n      columns\n    );\n  };\n\n  return TableRow;\n}(Component);\n\nTableRow.propTypes = {\n  /**\n   * An optional style to apply.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the row.\n   */\n  className: PropTypes.string,\n\n  /**\n   * A single or list of `TableColumn` to display in the table.\n   *\n   * > The specs \"require\" at least 3 columns for a non-plain data table, but that isn't\n   * strictly enforced here.\n   */\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element), PropTypes.node]).isRequired,\n\n  /**\n   * An optional onClick function to call when a row is clicked.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * A function to call when the checkbox is clicked. This\n   * function will will be called with `(rowIndex, checked, event)`.\n   * The `TableBody` and `TableHeader` components will automatically\n   * merge in a function to toggle the checkbox.\n   */\n  onCheckboxClick: PropTypes.func,\n\n  /**\n   * An optional function to call onMouseOver.\n   */\n  onMouseOver: PropTypes.func,\n\n  /**\n   * An optional function to call onMouseLeave.\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * Boolean if the row is currently selected. If this value will be\n   * injected by the `TableHeader` or `TableBody` component.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * Boolean if the current row is selectable. This value will take precedence over anything inherited\n   * by the `DataTable`.\n   */\n  selectable: PropTypes.bool,\n\n  autoAdjust: deprecated(PropTypes.bool, 'Manually specify `grow` on one of the columns instead')\n};\nTableRow.contextTypes = headerContextTypes;\nTableRow.childContextTypes = rowContextTypes;\nexport default TableRow;"]},"metadata":{},"sourceType":"module"}