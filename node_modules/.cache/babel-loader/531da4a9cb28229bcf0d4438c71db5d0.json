{"ast":null,"code":"/** @module utils/EventUtils/handleWindowClickListeners */\nvar mobileSafari = void 0;\n/**\n * Since mobile safari doesn't delegate click events to the window (it only does touch events),\n * this utility function will hack a fix to allow the delegation by updaging the body's cursor\n * to be a pointer.\n *\n * Hopefully this can be removed one day....\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile\n * @param {function} cb - the callback function to use for a window click event.\n * @param {boolean} enabled - boolean if the click event is enabled.\n */\n\nexport default function handleWindowClickListeners(cb) {\n  var enabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (typeof mobileSafari === 'undefined' && typeof window !== 'undefined') {\n    var ua = window.navigator.userAgent;\n    var iOS = ua.match(/iP(ad|hone)/i);\n    var webkit = ua.match(/WebKit/i);\n    mobileSafari = iOS && webkit && !ua.match(/CriOS/i);\n\n    if (mobileSafari) {\n      document.body.style.cursor = 'pointer';\n    }\n  }\n\n  if (enabled) {\n    window.addEventListener('click', cb);\n  } else {\n    window.removeEventListener('click', cb);\n  }\n}","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/utils/EventUtils/handleWindowClickListeners.js"],"names":["mobileSafari","handleWindowClickListeners","cb","enabled","arguments","length","undefined","window","ua","navigator","userAgent","iOS","match","webkit","document","body","style","cursor","addEventListener","removeEventListener"],"mappings":"AAAA;AACA,IAAIA,YAAY,GAAG,KAAK,CAAxB;AAEA;;;;;;;;;;;;AAWA,eAAe,SAASC,0BAAT,CAAoCC,EAApC,EAAwC;AACrD,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAlF;;AAEA,MAAI,OAAOJ,YAAP,KAAwB,WAAxB,IAAuC,OAAOO,MAAP,KAAkB,WAA7D,EAA0E;AACxE,QAAIC,EAAE,GAAGD,MAAM,CAACE,SAAP,CAAiBC,SAA1B;AACA,QAAIC,GAAG,GAAGH,EAAE,CAACI,KAAH,CAAS,cAAT,CAAV;AACA,QAAIC,MAAM,GAAGL,EAAE,CAACI,KAAH,CAAS,SAAT,CAAb;AACAZ,IAAAA,YAAY,GAAGW,GAAG,IAAIE,MAAP,IAAiB,CAACL,EAAE,CAACI,KAAH,CAAS,QAAT,CAAjC;;AAEA,QAAIZ,YAAJ,EAAkB;AAChBc,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,SAA7B;AACD;AACF;;AAED,MAAId,OAAJ,EAAa;AACXI,IAAAA,MAAM,CAACW,gBAAP,CAAwB,OAAxB,EAAiChB,EAAjC;AACD,GAFD,MAEO;AACLK,IAAAA,MAAM,CAACY,mBAAP,CAA2B,OAA3B,EAAoCjB,EAApC;AACD;AACF","sourcesContent":["/** @module utils/EventUtils/handleWindowClickListeners */\nvar mobileSafari = void 0;\n\n/**\n * Since mobile safari doesn't delegate click events to the window (it only does touch events),\n * this utility function will hack a fix to allow the delegation by updaging the body's cursor\n * to be a pointer.\n *\n * Hopefully this can be removed one day....\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile\n * @param {function} cb - the callback function to use for a window click event.\n * @param {boolean} enabled - boolean if the click event is enabled.\n */\nexport default function handleWindowClickListeners(cb) {\n  var enabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (typeof mobileSafari === 'undefined' && typeof window !== 'undefined') {\n    var ua = window.navigator.userAgent;\n    var iOS = ua.match(/iP(ad|hone)/i);\n    var webkit = ua.match(/WebKit/i);\n    mobileSafari = iOS && webkit && !ua.match(/CriOS/i);\n\n    if (mobileSafari) {\n      document.body.style.cursor = 'pointer';\n    }\n  }\n\n  if (enabled) {\n    window.addEventListener('click', cb);\n  } else {\n    window.removeEventListener('click', cb);\n  }\n}"]},"metadata":{},"sourceType":"module"}