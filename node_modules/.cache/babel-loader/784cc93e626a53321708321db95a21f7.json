{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport oneRequiredForA11yIf from '../utils/PropTypes/oneRequiredForA11yIf';\n/**\n * The avatar component is used to convert a `FontIcon`, an image, or\n * a letter into an avatar.\n *\n * Any other props given to the Avatar component such as event listeners\n * or styles will also be applied.\n */\n\nvar Avatar = function (_PureComponent) {\n  _inherits(Avatar, _PureComponent);\n\n  function Avatar() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Avatar);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.state = {\n      color: null\n    }, _this._setRandomColor = function () {\n      var suffixes = _this.props.suffixes;\n      var i = Math.floor(Math.random() * (suffixes.length - 1)) + 1;\n\n      _this.setState({\n        color: suffixes[i]\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Avatar.prototype.componentWillMount = function componentWillMount() {\n    if (this.props.random) {\n      this._setRandomColor();\n    }\n  };\n\n  Avatar.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.random && (this.props.src !== nextProps.src || this.props.icon !== nextProps.icon)) {\n      this._setRandomColor();\n    } else if (this.props.random && !nextProps.random) {\n      this.setState({\n        color: null\n      });\n    }\n  };\n\n  Avatar.prototype._getColor = function _getColor(suffix, suffixes, color) {\n    if (suffix) {\n      return 'md-avatar--' + suffix;\n    } else if (!!suffixes && !color) {\n      return 'md-avatar--default';\n    }\n\n    return 'md-avatar--' + color;\n  };\n\n  Avatar.prototype.render = function render() {\n    var _props = this.props,\n        className = _props.className,\n        contentStyle = _props.contentStyle,\n        contentClassName = _props.contentClassName,\n        src = _props.src,\n        alt = _props.alt,\n        icon = _props.icon,\n        children = _props.children,\n        suffix = _props.suffix,\n        suffixes = _props.suffixes,\n        iconSized = _props.iconSized,\n        role = _props.role,\n        random = _props.random,\n        props = _objectWithoutProperties(_props, ['className', 'contentStyle', 'contentClassName', 'src', 'alt', 'icon', 'children', 'suffix', 'suffixes', 'iconSized', 'role', 'random']);\n\n    var content = void 0;\n\n    if (src) {\n      content = React.createElement('img', {\n        src: src,\n        alt: alt,\n        role: role,\n        style: contentStyle,\n        className: cn('md-avatar-img', contentClassName)\n      });\n    } else {\n      content = React.createElement('div', {\n        style: contentStyle,\n        className: cn('md-avatar-content', contentClassName)\n      }, icon || children);\n    }\n\n    return React.createElement('div', _extends({}, props, {\n      className: cn('md-inline-block md-avatar', this._getColor(suffix, suffixes, this.state.color), {\n        'md-avatar--icon-sized': iconSized\n      }, className)\n    }), content);\n  };\n\n  return Avatar;\n}(PureComponent);\n\nAvatar.propTypes = {\n  /**\n   * An optional className to apply to the avatar.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to either the `<img>` or `<div>` surrounding the content. The `<img>` tag\n   * will be used with the `src` prop is defined.\n   */\n  contentStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to either the `<img>` or `<div>` surrounding the content. The `<img>` tag\n   * will be used with the `src` prop is defined.\n   */\n  contentClassName: PropTypes.string,\n\n  /**\n   * An optional image source to use for the avatar.\n   */\n  src: oneRequiredForA11yIf(PropTypes.string, 'role', 'alt'),\n\n  /**\n   * An optional image alt to use for the avatar if it is\n   * an image.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * An optional `FontIcon` to convert into an avatar.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * An optional letter to display in the avatar.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A boolean if a random color should be applied to the avatar.\n   * This will be one of the `suffixes`.\n   */\n  random: PropTypes.bool,\n\n  /**\n   * A list of available suffixes to use when generating a random\n   * color for the avatar.\n   */\n  suffixes: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The suffix to use for a color. This can be any value but\n   * *should* be one of the available `suffixes`.\n   */\n  suffix: PropTypes.string,\n\n  /**\n   * Boolean if the `Avatar` should be sized to a `FontIcon` size. This\n   * will just set the width and height to the `$md-font-icon-size`.\n   */\n  iconSized: PropTypes.bool,\n\n  /**\n   * A role for the avatar's image. When the `src` prop is set, either a `role` of `presentation`\n   * or the `alt` prop must be defined for a11y.\n   */\n  role: PropTypes.oneOf(['presentation'])\n};\nAvatar.defaultProps = {\n  suffixes: ['red', 'pink', 'purple', 'deep-purple', 'indigo', 'blue', 'light-blue', 'cyan', 'teal', 'green', 'light-green', 'lime', 'yellow', 'amber', 'orange', 'deep-orange', 'brown', 'grey', 'blue-grey']\n};\nexport default Avatar;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Avatars/Avatar.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","cn","oneRequiredForA11yIf","Avatar","_PureComponent","_temp","_this","_ret","_len","args","Array","_key","apply","concat","state","color","_setRandomColor","suffixes","props","Math","floor","random","setState","componentWillMount","componentWillReceiveProps","nextProps","src","icon","_getColor","suffix","render","_props","className","contentStyle","contentClassName","alt","children","iconSized","role","content","createElement","style","propTypes","string","object","node","bool","arrayOf","oneOf","defaultProps"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport oneRequiredForA11yIf from '../utils/PropTypes/oneRequiredForA11yIf';\n\n/**\n * The avatar component is used to convert a `FontIcon`, an image, or\n * a letter into an avatar.\n *\n * Any other props given to the Avatar component such as event listeners\n * or styles will also be applied.\n */\n\nvar Avatar = function (_PureComponent) {\n  _inherits(Avatar, _PureComponent);\n\n  function Avatar() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Avatar);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.state = { color: null }, _this._setRandomColor = function () {\n      var suffixes = _this.props.suffixes;\n\n\n      var i = Math.floor(Math.random() * (suffixes.length - 1)) + 1;\n      _this.setState({ color: suffixes[i] });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Avatar.prototype.componentWillMount = function componentWillMount() {\n    if (this.props.random) {\n      this._setRandomColor();\n    }\n  };\n\n  Avatar.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.random && (this.props.src !== nextProps.src || this.props.icon !== nextProps.icon)) {\n      this._setRandomColor();\n    } else if (this.props.random && !nextProps.random) {\n      this.setState({ color: null });\n    }\n  };\n\n  Avatar.prototype._getColor = function _getColor(suffix, suffixes, color) {\n    if (suffix) {\n      return 'md-avatar--' + suffix;\n    } else if (!!suffixes && !color) {\n      return 'md-avatar--default';\n    }\n\n    return 'md-avatar--' + color;\n  };\n\n  Avatar.prototype.render = function render() {\n    var _props = this.props,\n        className = _props.className,\n        contentStyle = _props.contentStyle,\n        contentClassName = _props.contentClassName,\n        src = _props.src,\n        alt = _props.alt,\n        icon = _props.icon,\n        children = _props.children,\n        suffix = _props.suffix,\n        suffixes = _props.suffixes,\n        iconSized = _props.iconSized,\n        role = _props.role,\n        random = _props.random,\n        props = _objectWithoutProperties(_props, ['className', 'contentStyle', 'contentClassName', 'src', 'alt', 'icon', 'children', 'suffix', 'suffixes', 'iconSized', 'role', 'random']);\n\n    var content = void 0;\n    if (src) {\n      content = React.createElement('img', {\n        src: src,\n        alt: alt,\n        role: role,\n        style: contentStyle,\n        className: cn('md-avatar-img', contentClassName)\n      });\n    } else {\n      content = React.createElement(\n        'div',\n        {\n          style: contentStyle,\n          className: cn('md-avatar-content', contentClassName)\n        },\n        icon || children\n      );\n    }\n    return React.createElement(\n      'div',\n      _extends({}, props, {\n        className: cn('md-inline-block md-avatar', this._getColor(suffix, suffixes, this.state.color), {\n          'md-avatar--icon-sized': iconSized\n        }, className)\n      }),\n      content\n    );\n  };\n\n  return Avatar;\n}(PureComponent);\n\nAvatar.propTypes = {\n  /**\n   * An optional className to apply to the avatar.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to either the `<img>` or `<div>` surrounding the content. The `<img>` tag\n   * will be used with the `src` prop is defined.\n   */\n  contentStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to either the `<img>` or `<div>` surrounding the content. The `<img>` tag\n   * will be used with the `src` prop is defined.\n   */\n  contentClassName: PropTypes.string,\n\n  /**\n   * An optional image source to use for the avatar.\n   */\n  src: oneRequiredForA11yIf(PropTypes.string, 'role', 'alt'),\n\n  /**\n   * An optional image alt to use for the avatar if it is\n   * an image.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * An optional `FontIcon` to convert into an avatar.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * An optional letter to display in the avatar.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A boolean if a random color should be applied to the avatar.\n   * This will be one of the `suffixes`.\n   */\n  random: PropTypes.bool,\n\n  /**\n   * A list of available suffixes to use when generating a random\n   * color for the avatar.\n   */\n  suffixes: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The suffix to use for a color. This can be any value but\n   * *should* be one of the available `suffixes`.\n   */\n  suffix: PropTypes.string,\n\n  /**\n   * Boolean if the `Avatar` should be sized to a `FontIcon` size. This\n   * will just set the width and height to the `$md-font-icon-size`.\n   */\n  iconSized: PropTypes.bool,\n\n  /**\n   * A role for the avatar's image. When the `src` prop is set, either a `role` of `presentation`\n   * or the `alt` prop must be defined for a11y.\n   */\n  role: PropTypes.oneOf(['presentation'])\n};\nAvatar.defaultProps = {\n  suffixes: ['red', 'pink', 'purple', 'deep-purple', 'indigo', 'blue', 'light-blue', 'cyan', 'teal', 'green', 'light-green', 'lime', 'yellow', 'amber', 'orange', 'deep-orange', 'brown', 'grey', 'blue-grey']\n};\nexport default Avatar;"]},"metadata":{},"sourceType":"module"}