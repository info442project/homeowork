{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport ClockFace from './ClockFace';\nimport DialogFooter from '../Dialogs/DialogFooter';\nimport TimePickerHeader from './TimePickerHeader';\n/**\n * The `TimePicker` component is used to display a time picker\n * in the `TimePickerContainer` component.\n */\n\nvar TimePicker = function (_PureComponent) {\n  _inherits(TimePicker, _PureComponent);\n\n  function TimePicker() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TimePicker);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this._updateTime = function (newTime) {\n      var timePart = newTime;\n      var _this$props = _this.props,\n          tempTime = _this$props.tempTime,\n          setTempTime = _this$props.setTempTime,\n          timeMode = _this$props.timeMode,\n          timePeriod = _this$props.timePeriod;\n      var time = new Date(tempTime);\n\n      if (timeMode === 'hour') {\n        var isAM = timePeriod === 'AM';\n        var is12 = timePart === 12;\n\n        if (timePeriod && isAM && is12) {\n          timePart = 0;\n        } else if (timePeriod && !isAM && !is12) {\n          timePart += 12;\n        }\n\n        time.setHours(timePart);\n      }\n\n      if (timeMode === 'minute') {\n        time.setMinutes(timePart);\n      }\n\n      if (timeMode === 'second') {\n        time.setSeconds(timePart);\n      }\n\n      setTempTime(time);\n    }, _this._handleTimeChosen = function () {\n      var _this$props2 = _this.props,\n          hoverMode = _this$props2.hoverMode,\n          setTimeMode = _this$props2.setTimeMode,\n          onOkClick = _this$props2.onOkClick,\n          timeMode = _this$props2.timeMode;\n\n      if (hoverMode) {\n        if (timeMode === 'hour') {\n          setTimeMode('minute');\n        } else {\n          onOkClick();\n        }\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * Takes in the new time (number o'clock or minutes), updates the temp time\n   * with that new time, and then calls the setTempTime prop.\n   */\n\n\n  TimePicker.prototype.render = function render() {\n    var _cn;\n\n    var _props = this.props,\n        okLabel = _props.okLabel,\n        okPrimary = _props.okPrimary,\n        onOkClick = _props.onOkClick,\n        cancelLabel = _props.cancelLabel,\n        cancelPrimary = _props.cancelPrimary,\n        onCancelClick = _props.onCancelClick,\n        style = _props.style,\n        className = _props.className,\n        setTimeMode = _props.setTimeMode,\n        setTempTime = _props.setTempTime,\n        timeMode = _props.timeMode,\n        tempTime = _props.tempTime,\n        hours = _props.hours,\n        minutes = _props.minutes,\n        seconds = _props.seconds,\n        timePeriod = _props.timePeriod,\n        displayMode = _props.displayMode,\n        inline = _props.inline,\n        icon = _props.icon,\n        hoverMode = _props.hoverMode,\n        showSeconds = _props.showSeconds;\n    var hoursInt = parseInt(hours, 10);\n    var minutesInt = parseInt(minutes.replace(/[^0-9]/g, ''), 10);\n    var secondsInt = void 0;\n    if (showSeconds) secondsInt = parseInt(seconds.replace(/[^0-9]/g, ''), 10);\n    var actions = [{\n      key: 'cancel',\n      onClick: onCancelClick,\n      primary: cancelPrimary,\n      secondary: !cancelPrimary,\n      label: cancelLabel\n    }, {\n      key: 'ok',\n      onClick: onOkClick,\n      primary: okPrimary,\n      secondary: !okPrimary,\n      label: okLabel\n    }];\n    var time = void 0;\n    if (timeMode === 'hour') time = hoursInt;\n    if (timeMode === 'minute') time = minutesInt;\n    if (timeMode === 'second') time = secondsInt;\n    return React.createElement('div', {\n      style: style,\n      className: cn('md-picker md-picker--time', (_cn = {}, _cn['md-picker--' + displayMode] = displayMode, _cn['md-picker--inline'] = inline, _cn['md-picker--inline-icon'] = inline && icon, _cn), className)\n    }, React.createElement(TimePickerHeader, {\n      tempTime: tempTime,\n      timeMode: timeMode,\n      setTimeMode: setTimeMode,\n      setTempTime: setTempTime,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds,\n      timePeriod: timePeriod,\n      showSeconds: showSeconds\n    }), React.createElement('div', {\n      className: 'md-picker-content-container'\n    }, React.createElement('div', {\n      className: 'md-picker-content md-picker-content--clock'\n    }, React.createElement(ClockFace, {\n      time: time,\n      minutes: timeMode === 'minute' || timeMode === 'second',\n      onChange: this._updateTime,\n      timePeriod: timePeriod,\n      hoverMode: hoverMode,\n      onTimeChosen: this._handleTimeChosen\n    })), React.createElement(DialogFooter, {\n      actions: actions\n    })));\n  };\n\n  return TimePicker;\n}(PureComponent);\n\nTimePicker.propTypes = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n  okLabel: PropTypes.node.isRequired,\n  okPrimary: PropTypes.bool.isRequired,\n  onOkClick: PropTypes.func.isRequired,\n  cancelLabel: PropTypes.node.isRequired,\n  cancelPrimary: PropTypes.bool.isRequired,\n  onCancelClick: PropTypes.func.isRequired,\n  DateTimeFormat: PropTypes.func.isRequired,\n  locales: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n  icon: PropTypes.bool,\n  inline: PropTypes.bool,\n  displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * A function that will switch the state from hour to minute.\n   */\n  setTimeMode: PropTypes.func.isRequired,\n\n  /**\n   * A function that will update the time for the TimePicker before\n   * the user selects ok. This function will be given a new Date object\n   * with a modified time.\n   */\n  setTempTime: PropTypes.func.isRequired,\n\n  /**\n   * The current display mode of the time picker.\n   */\n  timeMode: PropTypes.oneOf(['hour', 'minute', 'second']).isRequired,\n\n  /**\n   * The current time as a date object that is being displayed in the\n   * time picker.\n   */\n  tempTime: PropTypes.instanceOf(Date).isRequired,\n\n  /**\n   * A string that is a representation of the hours in the user's locale.\n   */\n  hours: PropTypes.string.isRequired,\n\n  /**\n   * A string that is a representation of the minutes in the user's locale.\n   * This will also include any separator the locale uses.\n   *\n   * Example: ':15' in '3:15 PM' for 'en-US'\n   */\n  minutes: PropTypes.string.isRequired,\n\n  /**\n   * A string that is a representation of the seconds in the user's locale.\n   * This will also include any separator the locale uses.\n   *\n   * Example: ':00' in '3:15:00 PM' for 'en-US'\n   */\n  seconds: PropTypes.string,\n\n  /**\n   * An optional time period if a user's locale uses it.\n   */\n  timePeriod: PropTypes.string,\n\n  /**\n   * If true the hover mode of the Time Picker is activated.\n   * In hover mode no clicks are required to start selecting an hour\n   * and the timemode switches automatically when a time was chosen.\n   * When a minute is selected the chosen time is applied automatically.\n   */\n  hoverMode: PropTypes.bool,\n\n  /**\n   * A boolean that if true, seconds are displayed\n   */\n  showSeconds: PropTypes.bool\n};\nexport default TimePicker;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Pickers/TimePicker.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","cn","ClockFace","DialogFooter","TimePickerHeader","TimePicker","_PureComponent","_temp","_this","_ret","_len","arguments","length","args","Array","_key","apply","concat","_updateTime","newTime","timePart","_this$props","props","tempTime","setTempTime","timeMode","timePeriod","time","Date","isAM","is12","setHours","setMinutes","setSeconds","_handleTimeChosen","_this$props2","hoverMode","setTimeMode","onOkClick","render","_cn","_props","okLabel","okPrimary","cancelLabel","cancelPrimary","onCancelClick","style","className","hours","minutes","seconds","displayMode","inline","icon","showSeconds","hoursInt","parseInt","minutesInt","replace","secondsInt","actions","key","onClick","primary","secondary","label","createElement","onChange","onTimeChosen","propTypes","object","string","node","isRequired","bool","func","DateTimeFormat","locales","oneOfType","arrayOf","oneOf","instanceOf"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport ClockFace from './ClockFace';\nimport DialogFooter from '../Dialogs/DialogFooter';\nimport TimePickerHeader from './TimePickerHeader';\n\n/**\n * The `TimePicker` component is used to display a time picker\n * in the `TimePickerContainer` component.\n */\n\nvar TimePicker = function (_PureComponent) {\n  _inherits(TimePicker, _PureComponent);\n\n  function TimePicker() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TimePicker);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this._updateTime = function (newTime) {\n      var timePart = newTime;\n      var _this$props = _this.props,\n          tempTime = _this$props.tempTime,\n          setTempTime = _this$props.setTempTime,\n          timeMode = _this$props.timeMode,\n          timePeriod = _this$props.timePeriod;\n\n      var time = new Date(tempTime);\n      if (timeMode === 'hour') {\n        var isAM = timePeriod === 'AM';\n        var is12 = timePart === 12;\n        if (timePeriod && isAM && is12) {\n          timePart = 0;\n        } else if (timePeriod && !isAM && !is12) {\n          timePart += 12;\n        }\n\n        time.setHours(timePart);\n      }\n\n      if (timeMode === 'minute') {\n        time.setMinutes(timePart);\n      }\n\n      if (timeMode === 'second') {\n        time.setSeconds(timePart);\n      }\n\n      setTempTime(time);\n    }, _this._handleTimeChosen = function () {\n      var _this$props2 = _this.props,\n          hoverMode = _this$props2.hoverMode,\n          setTimeMode = _this$props2.setTimeMode,\n          onOkClick = _this$props2.onOkClick,\n          timeMode = _this$props2.timeMode;\n\n\n      if (hoverMode) {\n        if (timeMode === 'hour') {\n          setTimeMode('minute');\n        } else {\n          onOkClick();\n        }\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Takes in the new time (number o'clock or minutes), updates the temp time\n   * with that new time, and then calls the setTempTime prop.\n   */\n\n\n  TimePicker.prototype.render = function render() {\n    var _cn;\n\n    var _props = this.props,\n        okLabel = _props.okLabel,\n        okPrimary = _props.okPrimary,\n        onOkClick = _props.onOkClick,\n        cancelLabel = _props.cancelLabel,\n        cancelPrimary = _props.cancelPrimary,\n        onCancelClick = _props.onCancelClick,\n        style = _props.style,\n        className = _props.className,\n        setTimeMode = _props.setTimeMode,\n        setTempTime = _props.setTempTime,\n        timeMode = _props.timeMode,\n        tempTime = _props.tempTime,\n        hours = _props.hours,\n        minutes = _props.minutes,\n        seconds = _props.seconds,\n        timePeriod = _props.timePeriod,\n        displayMode = _props.displayMode,\n        inline = _props.inline,\n        icon = _props.icon,\n        hoverMode = _props.hoverMode,\n        showSeconds = _props.showSeconds;\n\n\n    var hoursInt = parseInt(hours, 10);\n    var minutesInt = parseInt(minutes.replace(/[^0-9]/g, ''), 10);\n    var secondsInt = void 0;\n    if (showSeconds) secondsInt = parseInt(seconds.replace(/[^0-9]/g, ''), 10);\n\n    var actions = [{\n      key: 'cancel',\n      onClick: onCancelClick,\n      primary: cancelPrimary,\n      secondary: !cancelPrimary,\n      label: cancelLabel\n    }, {\n      key: 'ok',\n      onClick: onOkClick,\n      primary: okPrimary,\n      secondary: !okPrimary,\n      label: okLabel\n    }];\n\n    var time = void 0;\n    if (timeMode === 'hour') time = hoursInt;\n    if (timeMode === 'minute') time = minutesInt;\n    if (timeMode === 'second') time = secondsInt;\n\n    return React.createElement(\n      'div',\n      {\n        style: style,\n        className: cn('md-picker md-picker--time', (_cn = {}, _cn['md-picker--' + displayMode] = displayMode, _cn['md-picker--inline'] = inline, _cn['md-picker--inline-icon'] = inline && icon, _cn), className)\n      },\n      React.createElement(TimePickerHeader, {\n        tempTime: tempTime,\n        timeMode: timeMode,\n        setTimeMode: setTimeMode,\n        setTempTime: setTempTime,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds,\n        timePeriod: timePeriod,\n        showSeconds: showSeconds\n      }),\n      React.createElement(\n        'div',\n        { className: 'md-picker-content-container' },\n        React.createElement(\n          'div',\n          { className: 'md-picker-content md-picker-content--clock' },\n          React.createElement(ClockFace, {\n            time: time,\n            minutes: timeMode === 'minute' || timeMode === 'second',\n            onChange: this._updateTime,\n            timePeriod: timePeriod,\n            hoverMode: hoverMode,\n            onTimeChosen: this._handleTimeChosen\n          })\n        ),\n        React.createElement(DialogFooter, { actions: actions })\n      )\n    );\n  };\n\n  return TimePicker;\n}(PureComponent);\n\nTimePicker.propTypes = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n  okLabel: PropTypes.node.isRequired,\n  okPrimary: PropTypes.bool.isRequired,\n  onOkClick: PropTypes.func.isRequired,\n  cancelLabel: PropTypes.node.isRequired,\n  cancelPrimary: PropTypes.bool.isRequired,\n  onCancelClick: PropTypes.func.isRequired,\n  DateTimeFormat: PropTypes.func.isRequired,\n  locales: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n  icon: PropTypes.bool,\n  inline: PropTypes.bool,\n  displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * A function that will switch the state from hour to minute.\n   */\n  setTimeMode: PropTypes.func.isRequired,\n\n  /**\n   * A function that will update the time for the TimePicker before\n   * the user selects ok. This function will be given a new Date object\n   * with a modified time.\n   */\n  setTempTime: PropTypes.func.isRequired,\n\n  /**\n   * The current display mode of the time picker.\n   */\n  timeMode: PropTypes.oneOf(['hour', 'minute', 'second']).isRequired,\n\n  /**\n   * The current time as a date object that is being displayed in the\n   * time picker.\n   */\n  tempTime: PropTypes.instanceOf(Date).isRequired,\n\n  /**\n   * A string that is a representation of the hours in the user's locale.\n   */\n  hours: PropTypes.string.isRequired,\n\n  /**\n   * A string that is a representation of the minutes in the user's locale.\n   * This will also include any separator the locale uses.\n   *\n   * Example: ':15' in '3:15 PM' for 'en-US'\n   */\n  minutes: PropTypes.string.isRequired,\n\n  /**\n   * A string that is a representation of the seconds in the user's locale.\n   * This will also include any separator the locale uses.\n   *\n   * Example: ':00' in '3:15:00 PM' for 'en-US'\n   */\n  seconds: PropTypes.string,\n\n  /**\n   * An optional time period if a user's locale uses it.\n   */\n  timePeriod: PropTypes.string,\n\n  /**\n   * If true the hover mode of the Time Picker is activated.\n   * In hover mode no clicks are required to start selecting an hour\n   * and the timemode switches automatically when a time was chosen.\n   * When a minute is selected the chosen time is applied automatically.\n   */\n  hoverMode: PropTypes.bool,\n\n  /**\n   * A boolean that if true, seconds are displayed\n   */\n  showSeconds: PropTypes.bool\n};\nexport default TimePicker;"]},"metadata":{},"sourceType":"module"}