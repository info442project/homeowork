{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport themeColors from '../utils/themeColors';\nimport Message from './Message';\n\nvar TextFieldMessage = function (_PureComponent) {\n  _inherits(TextFieldMessage, _PureComponent);\n\n  function TextFieldMessage(props) {\n    _classCallCheck(this, TextFieldMessage);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.state = {\n      message: props.error && props.errorText || props.helpText || props.errorText,\n      isMessageVisible: _this._isMessageVisible(props)\n    };\n    return _this;\n  }\n\n  TextFieldMessage.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var keys = ['active', 'error', 'helpOnFocus', 'helpText', 'errorText'];\n\n    if (this._anyChanges(keys, this.props, nextProps)) {\n      this.setState({\n        isMessageVisible: this._isMessageVisible(nextProps),\n        message: nextProps.error && nextProps.errorText || nextProps.helpText || nextProps.errorText\n      });\n    }\n  };\n\n  TextFieldMessage.prototype._anyChanges = function _anyChanges(keys, p1, p2) {\n    var changed = false;\n    keys.some(function (key) {\n      if (p1[key] !== p2[key]) {\n        changed = true;\n      }\n\n      return changed;\n    });\n    return changed;\n  };\n\n  TextFieldMessage.prototype._isMessageVisible = function _isMessageVisible(props) {\n    var error = props.error,\n        errorText = props.errorText,\n        helpText = props.helpText,\n        helpOnFocus = props.helpOnFocus,\n        active = props.active;\n\n    if (error && errorText) {\n      return true;\n    }\n\n    return !!(helpText && (!helpOnFocus || active));\n  };\n\n  TextFieldMessage.prototype.render = function render() {\n    var _props = this.props,\n        maxLength = _props.maxLength,\n        error = _props.error,\n        className = _props.className,\n        errorText = _props.errorText,\n        helpText = _props.helpText,\n        currentLength = _props.currentLength,\n        leftIcon = _props.leftIcon,\n        rightIcon = _props.rightIcon,\n        block = _props.block,\n        active = _props.active;\n    var _state = this.state,\n        isMessageVisible = _state.isMessageVisible,\n        message = _state.message;\n\n    if (currentLength === 'undefined' || !helpText && !errorText && !maxLength) {\n      return null;\n    }\n\n    return React.createElement('div', {\n      className: cn('md-text-field-message-container', {\n        'md-text-field-message-container--count-only': !message || !isMessageVisible,\n        'md-text-field-message-container--left-icon-offset': leftIcon,\n        'md-text-field-message-container--right-icon-offset': rightIcon,\n        'md-full-width': !block\n      }, themeColors({\n        error: error,\n        disabled: !error\n      }), className)\n    }, React.createElement(Message, {\n      key: 'message',\n      active: isMessageVisible\n    }, message), React.createElement(Message, {\n      key: 'counter',\n      className: 'md-text-field-message--counter',\n      active: active\n    }, maxLength ? currentLength + ' / ' + maxLength : null));\n  };\n\n  return TextFieldMessage;\n}(PureComponent);\n\nTextFieldMessage.propTypes = {\n  className: PropTypes.string,\n  error: PropTypes.bool,\n  helpText: PropTypes.node,\n  errorText: PropTypes.node,\n  active: PropTypes.bool,\n  helpOnFocus: PropTypes.bool,\n  maxLength: PropTypes.number,\n  currentLength: PropTypes.number,\n  leftIcon: PropTypes.bool,\n  rightIcon: PropTypes.bool,\n  block: PropTypes.bool\n};\nexport default TextFieldMessage;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/TextFields/TextFieldMessage.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","cn","themeColors","Message","TextFieldMessage","_PureComponent","props","_this","state","message","error","errorText","helpText","isMessageVisible","_isMessageVisible","componentWillReceiveProps","nextProps","keys","_anyChanges","setState","p1","p2","changed","some","key","helpOnFocus","active","render","_props","maxLength","className","currentLength","leftIcon","rightIcon","block","_state","createElement","disabled","propTypes","string","bool","node","number"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport Message from './Message';\n\nvar TextFieldMessage = function (_PureComponent) {\n  _inherits(TextFieldMessage, _PureComponent);\n\n  function TextFieldMessage(props) {\n    _classCallCheck(this, TextFieldMessage);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.state = {\n      message: props.error && props.errorText || props.helpText || props.errorText,\n      isMessageVisible: _this._isMessageVisible(props)\n    };\n    return _this;\n  }\n\n  TextFieldMessage.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var keys = ['active', 'error', 'helpOnFocus', 'helpText', 'errorText'];\n    if (this._anyChanges(keys, this.props, nextProps)) {\n      this.setState({\n        isMessageVisible: this._isMessageVisible(nextProps),\n        message: nextProps.error && nextProps.errorText || nextProps.helpText || nextProps.errorText\n      });\n    }\n  };\n\n  TextFieldMessage.prototype._anyChanges = function _anyChanges(keys, p1, p2) {\n    var changed = false;\n    keys.some(function (key) {\n      if (p1[key] !== p2[key]) {\n        changed = true;\n      }\n\n      return changed;\n    });\n\n    return changed;\n  };\n\n  TextFieldMessage.prototype._isMessageVisible = function _isMessageVisible(props) {\n    var error = props.error,\n        errorText = props.errorText,\n        helpText = props.helpText,\n        helpOnFocus = props.helpOnFocus,\n        active = props.active;\n\n    if (error && errorText) {\n      return true;\n    }\n\n    return !!(helpText && (!helpOnFocus || active));\n  };\n\n  TextFieldMessage.prototype.render = function render() {\n    var _props = this.props,\n        maxLength = _props.maxLength,\n        error = _props.error,\n        className = _props.className,\n        errorText = _props.errorText,\n        helpText = _props.helpText,\n        currentLength = _props.currentLength,\n        leftIcon = _props.leftIcon,\n        rightIcon = _props.rightIcon,\n        block = _props.block,\n        active = _props.active;\n    var _state = this.state,\n        isMessageVisible = _state.isMessageVisible,\n        message = _state.message;\n\n\n    if (currentLength === 'undefined' || !helpText && !errorText && !maxLength) {\n      return null;\n    }\n\n    return React.createElement(\n      'div',\n      {\n        className: cn('md-text-field-message-container', {\n          'md-text-field-message-container--count-only': !message || !isMessageVisible,\n          'md-text-field-message-container--left-icon-offset': leftIcon,\n          'md-text-field-message-container--right-icon-offset': rightIcon,\n          'md-full-width': !block\n        }, themeColors({ error: error, disabled: !error }), className)\n      },\n      React.createElement(\n        Message,\n        { key: 'message', active: isMessageVisible },\n        message\n      ),\n      React.createElement(\n        Message,\n        { key: 'counter', className: 'md-text-field-message--counter', active: active },\n        maxLength ? currentLength + ' / ' + maxLength : null\n      )\n    );\n  };\n\n  return TextFieldMessage;\n}(PureComponent);\n\nTextFieldMessage.propTypes = {\n  className: PropTypes.string,\n  error: PropTypes.bool,\n  helpText: PropTypes.node,\n  errorText: PropTypes.node,\n  active: PropTypes.bool,\n  helpOnFocus: PropTypes.bool,\n  maxLength: PropTypes.number,\n  currentLength: PropTypes.number,\n  leftIcon: PropTypes.bool,\n  rightIcon: PropTypes.bool,\n  block: PropTypes.bool\n};\nexport default TextFieldMessage;"]},"metadata":{},"sourceType":"module"}