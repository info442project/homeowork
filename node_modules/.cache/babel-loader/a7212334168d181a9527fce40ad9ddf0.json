{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ResizeObserverAPI from 'resize-observer-polyfill';\n/**\n * The `ResizeObserver` component is a component hook for the\n * [ResizeObserver](http://rawgit.com/WICG/ResizeObserver/master/index.html)\n * using the [resize-observer-polyfill](https://github.com/que-etc/resize-observer-polyfill)\n * for browsers that don't support it yet.\n *\n * This component displays an empty `span` with `aria-hidden` to allow access to the DOM. By\n * default it will attempt to watch changes on its parent component, but it can be configured\n * to watch any element by using the `target` prop.\n */\n\nvar ResizeObserver = function (_PureComponent) {\n  _inherits(ResizeObserver, _PureComponent);\n\n  function ResizeObserver() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ResizeObserver);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this._container = null, _this._target = null, _this._observer = null, _this._height = null, _this._width = null, _this._scrollHeight = null, _this._scrollWidth = null, _this._measure = function (entries) {\n      if (!_this._observer || !_this._target) {\n        return;\n      }\n\n      for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var entry = _ref;\n\n        if (!entry) {\n          return;\n        }\n\n        var _entry$contentRect = entry.contentRect,\n            height = _entry$contentRect.height,\n            width = _entry$contentRect.width;\n        var _entry$target = entry.target,\n            scrollHeight = _entry$target.scrollHeight,\n            scrollWidth = _entry$target.scrollWidth;\n\n        if (_this._isHeightChange(height, scrollHeight) || _this._isWidthChange(width, scrollWidth)) {\n          _this._height = height;\n          _this._width = width;\n          _this._scrollHeight = scrollHeight;\n          _this._scrollWidth = scrollWidth;\n\n          _this.props.onResize({\n            height: height,\n            width: width,\n            scrollHeight: scrollHeight,\n            scrollWidth: scrollWidth,\n            el: entry.target\n          });\n        }\n      }\n    }, _this._isHeightChange = function (height, scrollHeight) {\n      return _this.props.watchHeight && (height !== _this._height || scrollHeight !== _this._scrollHeight);\n    }, _this._isWidthChange = function (width, scrollWidth) {\n      return _this.props.watchWidth && (width !== _this._width || scrollWidth !== _this._scrollWidth);\n    }, _this._handleRef = function (container) {\n      if (container) {\n        _this._container = container;\n        _this._target = _this._getTarget(container, _this.props.target);\n        _this._observer = new ResizeObserverAPI(_this._measure);\n\n        if (_this._target) {\n          _this._observer.observe(_this._target);\n        }\n      } else {\n        if (_this._observer) {\n          _this._observer.disconnect();\n        }\n\n        _this._container = null;\n        _this._target = null;\n        _this._observer = null;\n        _this._height = null;\n        _this._width = null;\n        _this._scrollHeight = null;\n        _this._scrollWidth = null;\n      }\n\n      if (_this.props.elRef) {\n        _this.props.elRef(_this._target);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ResizeObserver.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var target = this.props.target;\n    var nextTarget = nextProps.target;\n\n    if (target === nextTarget) {\n      return;\n    } else if (nextTarget) {\n      if (this._target) {\n        this._observer.unobserve(this._target);\n      }\n\n      this._target = this._getTarget(this._container, nextTarget);\n\n      this._observer.observe(this._target);\n    }\n  };\n\n  ResizeObserver.prototype._getTarget = function _getTarget(container, target) {\n    if (target === null || target && typeof target !== 'string') {\n      return target;\n    }\n\n    var t = null;\n\n    if (target) {\n      t = document.getElementById(target) || document.querySelector(target);\n    } else {\n      t = container.parentNode;\n    }\n\n    if (!t) {\n      throw new Error('An HTMLDOMNode is required as the `ResizeObserver`\\'s watch target but none were provided/found. ' + ('Please update the target prop to find a valid node since the provided target is invalid. `' + target + '`.'));\n    }\n\n    return t;\n  };\n\n  ResizeObserver.prototype.render = function render() {\n    var Component = this.props.component;\n    return React.createElement(Component, {\n      ref: this._handleRef,\n      'aria-hidden': true\n    });\n  };\n\n  return ResizeObserver;\n}(PureComponent);\n\nResizeObserver.propTypes = {\n  /**\n   * Boolean if the height should be watched for the resize target.\n   */\n  watchHeight: PropTypes.bool,\n\n  /**\n   * Boolean if the width should be watched for the resize target.\n   */\n  watchWidth: PropTypes.bool,\n\n  /**\n   * An optional target that should be used for detecting resize events. This can either\n   * be a HTMLDOMNode or a string to use with `document.getElementById` or `document.querySelector`.\n   *\n   * If this prop is not provided and not null, it will default to the parent node of this component.\n   * If the provided `target={null}`, the observer will not begin until the `target` is `undefined` or\n   * it has been correctly passed a target string or object.\n   */\n  target: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component to be rendered as. This should normally just be the default `span`, but there are cases\n   * where the component should be switched to something else for valid html.\n   */\n  component: PropTypes.string,\n\n  /**\n   * A function to call when the height or width has been changed and that attribute is being watched.\n   * The callback will include the current height, width, scrollHeight and scrollWidth of the target.\n   *\n   * ```js\n   * onResize({\n   *   height: nextHeight,\n   *   width: nextWidth,\n   *   scrollHeight: nextScrollHeight,\n   *   scrollWidth: nextScrollWidth,\n   *   el: resizeTarget,\n   * });\n   * ```\n   */\n  onResize: PropTypes.func.isRequired,\n\n  /**\n   * An optional ref callback that will include the `target` or the parent node of the resize observer. Just\n   * like other refs, this will provide null when it unmounts.\n   *\n   * This is really only helpful if you'd like the DOM node for a parent Component without needing to use\n   * `ReactDOM.findDOMNode(this)`.\n   */\n  elRef: PropTypes.func\n};\nResizeObserver.defaultProps = {\n  watchHeight: false,\n  watchWidth: false,\n  component: 'span'\n};\nexport default ResizeObserver;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Helpers/ResizeObserver.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","ResizeObserverAPI","ResizeObserver","_PureComponent","_temp","_this","_ret","_len","arguments","length","args","Array","_key","apply","concat","_container","_target","_observer","_height","_width","_scrollHeight","_scrollWidth","_measure","entries","_iterator","_isArray","isArray","_i","Symbol","iterator","_ref","next","done","entry","_entry$contentRect","contentRect","height","width","_entry$target","target","scrollHeight","scrollWidth","_isHeightChange","_isWidthChange","props","onResize","el","watchHeight","watchWidth","_handleRef","container","_getTarget","observe","disconnect","elRef","componentWillReceiveProps","nextProps","nextTarget","unobserve","t","document","getElementById","querySelector","parentNode","Error","render","Component","component","createElement","ref","propTypes","bool","oneOfType","object","string","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ResizeObserverAPI from 'resize-observer-polyfill';\n\n/**\n * The `ResizeObserver` component is a component hook for the\n * [ResizeObserver](http://rawgit.com/WICG/ResizeObserver/master/index.html)\n * using the [resize-observer-polyfill](https://github.com/que-etc/resize-observer-polyfill)\n * for browsers that don't support it yet.\n *\n * This component displays an empty `span` with `aria-hidden` to allow access to the DOM. By\n * default it will attempt to watch changes on its parent component, but it can be configured\n * to watch any element by using the `target` prop.\n */\n\nvar ResizeObserver = function (_PureComponent) {\n  _inherits(ResizeObserver, _PureComponent);\n\n  function ResizeObserver() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ResizeObserver);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this._container = null, _this._target = null, _this._observer = null, _this._height = null, _this._width = null, _this._scrollHeight = null, _this._scrollWidth = null, _this._measure = function (entries) {\n      if (!_this._observer || !_this._target) {\n        return;\n      }\n\n      for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var entry = _ref;\n\n        if (!entry) {\n          return;\n        }\n\n        var _entry$contentRect = entry.contentRect,\n            height = _entry$contentRect.height,\n            width = _entry$contentRect.width;\n        var _entry$target = entry.target,\n            scrollHeight = _entry$target.scrollHeight,\n            scrollWidth = _entry$target.scrollWidth;\n\n        if (_this._isHeightChange(height, scrollHeight) || _this._isWidthChange(width, scrollWidth)) {\n          _this._height = height;\n          _this._width = width;\n          _this._scrollHeight = scrollHeight;\n          _this._scrollWidth = scrollWidth;\n          _this.props.onResize({ height: height, width: width, scrollHeight: scrollHeight, scrollWidth: scrollWidth, el: entry.target });\n        }\n      }\n    }, _this._isHeightChange = function (height, scrollHeight) {\n      return _this.props.watchHeight && (height !== _this._height || scrollHeight !== _this._scrollHeight);\n    }, _this._isWidthChange = function (width, scrollWidth) {\n      return _this.props.watchWidth && (width !== _this._width || scrollWidth !== _this._scrollWidth);\n    }, _this._handleRef = function (container) {\n      if (container) {\n        _this._container = container;\n        _this._target = _this._getTarget(container, _this.props.target);\n        _this._observer = new ResizeObserverAPI(_this._measure);\n\n        if (_this._target) {\n          _this._observer.observe(_this._target);\n        }\n      } else {\n        if (_this._observer) {\n          _this._observer.disconnect();\n        }\n\n        _this._container = null;\n        _this._target = null;\n        _this._observer = null;\n        _this._height = null;\n        _this._width = null;\n        _this._scrollHeight = null;\n        _this._scrollWidth = null;\n      }\n\n      if (_this.props.elRef) {\n        _this.props.elRef(_this._target);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ResizeObserver.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var target = this.props.target;\n\n    var nextTarget = nextProps.target;\n    if (target === nextTarget) {\n      return;\n    } else if (nextTarget) {\n      if (this._target) {\n        this._observer.unobserve(this._target);\n      }\n      this._target = this._getTarget(this._container, nextTarget);\n      this._observer.observe(this._target);\n    }\n  };\n\n  ResizeObserver.prototype._getTarget = function _getTarget(container, target) {\n    if (target === null || target && typeof target !== 'string') {\n      return target;\n    }\n\n    var t = null;\n    if (target) {\n      t = document.getElementById(target) || document.querySelector(target);\n    } else {\n      t = container.parentNode;\n    }\n\n    if (!t) {\n      throw new Error('An HTMLDOMNode is required as the `ResizeObserver`\\'s watch target but none were provided/found. ' + ('Please update the target prop to find a valid node since the provided target is invalid. `' + target + '`.'));\n    }\n\n    return t;\n  };\n\n  ResizeObserver.prototype.render = function render() {\n    var Component = this.props.component;\n\n    return React.createElement(Component, { ref: this._handleRef, 'aria-hidden': true });\n  };\n\n  return ResizeObserver;\n}(PureComponent);\n\nResizeObserver.propTypes = {\n  /**\n   * Boolean if the height should be watched for the resize target.\n   */\n  watchHeight: PropTypes.bool,\n\n  /**\n   * Boolean if the width should be watched for the resize target.\n   */\n  watchWidth: PropTypes.bool,\n\n  /**\n   * An optional target that should be used for detecting resize events. This can either\n   * be a HTMLDOMNode or a string to use with `document.getElementById` or `document.querySelector`.\n   *\n   * If this prop is not provided and not null, it will default to the parent node of this component.\n   * If the provided `target={null}`, the observer will not begin until the `target` is `undefined` or\n   * it has been correctly passed a target string or object.\n   */\n  target: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component to be rendered as. This should normally just be the default `span`, but there are cases\n   * where the component should be switched to something else for valid html.\n   */\n  component: PropTypes.string,\n\n  /**\n   * A function to call when the height or width has been changed and that attribute is being watched.\n   * The callback will include the current height, width, scrollHeight and scrollWidth of the target.\n   *\n   * ```js\n   * onResize({\n   *   height: nextHeight,\n   *   width: nextWidth,\n   *   scrollHeight: nextScrollHeight,\n   *   scrollWidth: nextScrollWidth,\n   *   el: resizeTarget,\n   * });\n   * ```\n   */\n  onResize: PropTypes.func.isRequired,\n\n  /**\n   * An optional ref callback that will include the `target` or the parent node of the resize observer. Just\n   * like other refs, this will provide null when it unmounts.\n   *\n   * This is really only helpful if you'd like the DOM node for a parent Component without needing to use\n   * `ReactDOM.findDOMNode(this)`.\n   */\n  elRef: PropTypes.func\n};\nResizeObserver.defaultProps = {\n  watchHeight: false,\n  watchWidth: false,\n  component: 'span'\n};\nexport default ResizeObserver;"]},"metadata":{},"sourceType":"module"}