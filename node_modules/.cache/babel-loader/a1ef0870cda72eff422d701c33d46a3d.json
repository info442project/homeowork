{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\nimport getField from '../utils/getField';\nimport omit from '../utils/omit';\nimport findIgnoreCase from '../utils/findIgnoreCase';\nimport fuzzyFilter from '../utils/fuzzyFilter';\nimport caseInsensitiveFilter from '../utils/caseInsensitiveFilter';\nimport getTextWidth from '../utils/Positioning/getTextWidth';\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport controlled from '../utils/PropTypes/controlled';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport { UP, DOWN, TAB } from '../constants/keyCodes';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport ListItem from '../Lists/ListItem';\nimport Menu from '../Menus/Menu';\nimport TextField from '../TextFields/TextField';\n/**\n * The `Autocomplete` component is useful for presenting real-time suggestions, completions,\n * or filtering.\n */\n\nvar Autocomplete = function (_PureComponent) {\n  _inherits(Autocomplete, _PureComponent);\n\n  function Autocomplete(props) {\n    _classCallCheck(this, Autocomplete);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var defaultValue = props.defaultValue,\n        data = props.data,\n        dataLabel = props.dataLabel,\n        filter = props.filter,\n        showUnfilteredData = props.showUnfilteredData;\n    var matches = [];\n\n    if (defaultValue && filter) {\n      matches = filter(data, defaultValue, dataLabel);\n    } else if (!filter || showUnfilteredData) {\n      matches = data;\n    }\n\n    _this.state = {\n      value: defaultValue,\n      matches: matches,\n      visible: false,\n      matchIndex: -1,\n      manualFocus: false,\n      suggestion: '',\n      suggestionIndex: -1\n    };\n    return _this;\n  }\n\n  Autocomplete.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var nextValue = nextProps.value,\n        data = nextProps.data,\n        filter = nextProps.filter,\n        dataLabel = nextProps.dataLabel;\n    var dataDiff = data !== this.props.data;\n\n    if (nextValue !== this.props.value || dataDiff) {\n      var _state = this.state,\n          visible = _state.visible,\n          matches = _state.matches;\n      var value = getField(nextProps, this.state, 'value');\n\n      if (filter) {\n        matches = filter(data, value, dataLabel);\n      } else if (dataDiff) {\n        matches = data;\n      }\n\n      if (this.state.focus) {\n        visible = !!matches.length;\n      }\n\n      this.setState({\n        matches: matches,\n        visible: visible\n      });\n    }\n  };\n\n  Autocomplete.prototype.componentWillUpdate = function componentWillUpdate(nextProps, nextState) {\n    if (this.state.visible !== nextState.visible) {\n      var menuFn = nextProps['onMenu' + (nextState.visible ? 'Open' : 'Close')];\n\n      if (menuFn) {\n        menuFn();\n      }\n    }\n  };\n  /**\n   * Gets the current value from the text field. This is used when you have an uncontrolled\n   * text field and simply need the value from a ref callback.\n   *\n   * @return {String} the text field's value\n   */\n\n\n  Autocomplete.prototype.render = function render() {\n    var _state2 = this.state,\n        visible = _state2.visible,\n        matches = _state2.matches,\n        tabbed = _state2.tabbed,\n        focus = _state2.focus,\n        suggestionStyle = _state2.suggestionStyle;\n\n    var _props = this.props,\n        fullWidth = _props.fullWidth,\n        block = _props.block,\n        style = _props.style,\n        className = _props.className,\n        listStyle = _props.listStyle,\n        listClassName = _props.listClassName,\n        textFieldStyle = _props.textFieldStyle,\n        textFieldClassName = _props.textFieldClassName,\n        inlineSuggestionStyle = _props.inlineSuggestionStyle,\n        inlineSuggestionClassName = _props.inlineSuggestionClassName,\n        menuId = _props.menuId,\n        inline = _props.inline,\n        anchor = _props.anchor,\n        belowAnchor = _props.belowAnchor,\n        position = _props.position,\n        fixedTo = _props.fixedTo,\n        listId = _props.listId,\n        listInline = _props.listInline,\n        listZDepth = _props.listZDepth,\n        listHeightRestricted = _props.listHeightRestricted,\n        xThreshold = _props.xThreshold,\n        yThreshold = _props.yThreshold,\n        closeOnOutsideClick = _props.closeOnOutsideClick,\n        transitionName = _props.transitionName,\n        transitionEnterTimeout = _props.transitionEnterTimeout,\n        transitionLeaveTimeout = _props.transitionLeaveTimeout,\n        centered = _props.centered,\n        sameWidth = _props.sameWidth,\n        repositionOnScroll = _props.repositionOnScroll,\n        repositionOnResize = _props.repositionOnResize,\n        simplifiedMenu = _props.simplifiedMenu,\n        minLeft = _props.minLeft,\n        minRight = _props.minRight,\n        minBottom = _props.minBottom,\n        fillViewportWidth = _props.fillViewportWidth,\n        fillViewportHeight = _props.fillViewportHeight,\n        propValue = _props.value,\n        total = _props.total,\n        offset = _props.offset,\n        filter = _props.filter,\n        data = _props.data,\n        dataLabel = _props.dataLabel,\n        dataValue = _props.dataValue,\n        deleteKeys = _props.deleteKeys,\n        defaultValue = _props.defaultValue,\n        clearOnAutocomplete = _props.clearOnAutocomplete,\n        autocompleteWithLabel = _props.autocompleteWithLabel,\n        findInlineSuggestion = _props.findInlineSuggestion,\n        inlineSuggestionPadding = _props.inlineSuggestionPadding,\n        onAutocomplete = _props.onAutocomplete,\n        onMenuOpen = _props.onMenuOpen,\n        onMenuClose = _props.onMenuClose,\n        onBlur = _props.onBlur,\n        onFocus = _props.onFocus,\n        onKeyDown = _props.onKeyDown,\n        onMouseDown = _props.onMouseDown,\n        onChange = _props.onChange,\n        showUnfilteredData = _props.showUnfilteredData,\n        props = _objectWithoutProperties(_props, ['fullWidth', 'block', 'style', 'className', 'listStyle', 'listClassName', 'textFieldStyle', 'textFieldClassName', 'inlineSuggestionStyle', 'inlineSuggestionClassName', 'menuId', 'inline', 'anchor', 'belowAnchor', 'position', 'fixedTo', 'listId', 'listInline', 'listZDepth', 'listHeightRestricted', 'xThreshold', 'yThreshold', 'closeOnOutsideClick', 'transitionName', 'transitionEnterTimeout', 'transitionLeaveTimeout', 'centered', 'sameWidth', 'repositionOnScroll', 'repositionOnResize', 'simplifiedMenu', 'minLeft', 'minRight', 'minBottom', 'fillViewportWidth', 'fillViewportHeight', 'value', 'total', 'offset', 'filter', 'data', 'dataLabel', 'dataValue', 'deleteKeys', 'defaultValue', 'clearOnAutocomplete', 'autocompleteWithLabel', 'findInlineSuggestion', 'inlineSuggestionPadding', 'onAutocomplete', 'onMenuOpen', 'onMenuClose', 'onBlur', 'onFocus', 'onKeyDown', 'onMouseDown', 'onChange', 'showUnfilteredData']);\n\n    delete props.focusInputOnAutocomplete;\n    var value = getField(this.props, this.state, 'value');\n    var autocomplete = React.createElement(TextField, _extends({}, props, {\n      'aria-autocomplete': inline ? 'inline' : 'list',\n      style: textFieldStyle,\n      className: cn('md-autocomplete', textFieldClassName),\n      key: 'autocomplete',\n      ref: this._setField,\n      value: value,\n      onKeyDown: this._handleTextFieldKeyDown,\n      onMouseDown: this._toggleMenu,\n      onChange: this._handleChange,\n      onFocus: this._handleFocus,\n      onBlur: this._handleBlur,\n      fullWidth: fullWidth,\n      block: block\n    }));\n\n    if (inline) {\n      var suggestion = void 0;\n\n      if (focus && this.state.suggestion) {\n        suggestion = React.createElement('span', {\n          key: 'suggestion',\n          style: _extends({}, suggestionStyle, inlineSuggestionStyle),\n          className: cn('md-autocomplete-suggestion', {\n            'md-autocomplete-suggestion--floating': props.label,\n            'md-autocomplete-suggestion--block': block\n          }, inlineSuggestionClassName)\n        }, this.state.suggestion);\n      }\n\n      return React.createElement(CSSTransitionGroup, {\n        component: 'div',\n        style: style,\n        className: cn('md-menu-container md-autocomplete-container', className, {\n          'md-full-width': fullWidth || block\n        }),\n        transitionName: 'opacity',\n        transitionEnterTimeout: 150,\n        transitionLeave: !tabbed,\n        transitionLeaveTimeout: 150,\n        onTouchStart: this._handleTouchStart\n      }, autocomplete, suggestion);\n    }\n\n    return React.createElement(Menu, {\n      id: menuId || props.id + '-menu',\n      listId: listId,\n      ref: this._setMenu,\n      toggle: autocomplete,\n      visible: visible,\n      onClick: this._handleClick,\n      onClose: this._close,\n      onKeyDown: this._handleMenuKeyDown,\n      simplified: simplifiedMenu,\n      sameWidth: sameWidth,\n      centered: centered,\n      anchor: anchor,\n      belowAnchor: belowAnchor,\n      position: position,\n      fixedTo: fixedTo,\n      listInline: listInline,\n      listZDepth: listZDepth,\n      listHeightRestricted: listHeightRestricted,\n      xThreshold: xThreshold,\n      yThreshold: yThreshold,\n      closeOnOutsideClick: closeOnOutsideClick,\n      transitionName: transitionName,\n      transitionEnterTimeout: transitionEnterTimeout,\n      transitionLeaveTimeout: transitionLeaveTimeout,\n      fullWidth: fullWidth || block,\n      style: style,\n      className: cn('md-autocomplete-container', className),\n      listStyle: listStyle,\n      listClassName: cn('md-autocomplete-list', listClassName),\n      repositionOnScroll: repositionOnScroll,\n      repositionOnResize: repositionOnResize,\n      minLeft: minLeft,\n      minRight: minRight,\n      minBottom: minBottom,\n      fillViewportWidth: fillViewportWidth,\n      fillViewportHeight: fillViewportHeight\n    }, matches.map(this._mapToListItem));\n  };\n\n  _createClass(Autocomplete, [{\n    key: 'value',\n    get: function get() {\n      return getField(this.props, this.state, 'value');\n    }\n    /**\n     * Just check if the click target is in a list item.. if it is, autocomplete the text field\n     * with that item.\n     */\n\n    /**\n     * The `mousedown` event is used instead of `click` because of the order\n     * of the `mousedown`, `focus`, and `click` events.\n     */\n\n    /**\n     * Allows touch devices to autocomplete the inline view by tapping:\n     * - the suggestion text\n     * - the text field IF there is a suggestion visible\n     */\n\n  }]);\n\n  return Autocomplete;\n}(PureComponent);\n\nAutocomplete.HorizontalAnchors = Menu.HorizontalAnchors;\nAutocomplete.VerticalAnchors = Menu.VerticalAnchors;\nAutocomplete.Positions = Menu.Positions;\nAutocomplete.fuzzyFilter = fuzzyFilter;\nAutocomplete.caseInsensitiveFilter = caseInsensitiveFilter;\nAutocomplete.findIgnoreCase = findIgnoreCase;\nAutocomplete.propTypes = {\n  /**\n   * An id to give the autocomplete. Either this or the `menuId` is required for accessibility.\n   *\n   * @see {@link #menuId}\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The menu id to provide to the autocomplete. Either this prop or the `id` prop is required. If\n   * this props is omitted, the menuId will become: `${id}-menu`\n   */\n  menuId: oneRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'id'),\n\n  /**\n   * An optional id to provide to the menu's list.\n   *\n   * @see {@link Menus/Menu#listId}\n   */\n  listId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional style to apply to the menu that contains the autocomplete.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the menu that contains the autocomplete.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the autocomplete's text field.\n   */\n  textFieldStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the autocomplete's text field.\n   */\n  textFieldClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the autocomplete's text field input itself.\n   */\n  inputStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the autocomplete's input field itself.\n   */\n  inputClassName: PropTypes.string,\n\n  /**\n   * The optional style to apply to the opened menu List if the\n   * `Autocomplete` is not using `inline` suggestions.\n   */\n  listStyle: PropTypes.object,\n\n  /**\n   * The optional className to apply to the opened menu List if the\n   * `Autocomplete` is not using `inline` suggestions.\n   */\n  listClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the inline suggestion when using `inline` mode.\n   */\n  inlineSuggestionStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the inline suggestion when using `inline` mode.\n   */\n  inlineSuggestionClassName: PropTypes.string,\n\n  /**\n   * Boolean if the autocomplete is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A label to display with the autocomplete.\n   */\n  label: PropTypes.node,\n\n  /**\n   * An optional value to use for the text field. This will force this component\n   * to be controlled and require the `onChange` function.\n   */\n  value: controlled(PropTypes.oneOfType([PropTypes.string, PropTypes.number]), 'onChange'),\n\n  /**\n   * The default value for the autocomplete's text field.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * An object key to use to extract the text to be compared for filtering.\n   * This will only be applied if the given `data` prop is an array of objects.\n   */\n  dataLabel: PropTypes.string.isRequired,\n\n  /**\n   * An optional object key to use to extract the `value` of the given `data` prop.\n   * This is really only used with generating a unique react key. The unique react\n   * key with either be:\n   * - the datum if it is a string or number\n   * - the `key` attribute of the datum object\n   * - the `datum[dataValue]`\n   * - or the `datum[dataLabel]`\n   */\n  dataValue: PropTypes.string,\n\n  /**\n   * A single key or an array of keys to delete from your data object before passing\n   * to the `ListItem` component.\n   */\n  deleteKeys: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\n  /**\n   * The data that will be used for autocomplete suggestions. This can either be\n   * an array of string, number, or object. If it is an array of objects, the key\n   * `dataLabel` is required.\n   *\n   * ```docgen\n   * PropTypes.arrayOf(PropTypes.oneOfType([\n   *   PropTypes.element,\n   *   PropTypes.string,\n   *   PropTypes.number,\n   *   PropTypes.shape({\n   *     [dataLabel]: PropTypes.oneOfType([\n   *       PropTypes.string,\n   *       PropTypes.number,\n   *       PropTypes.node,\n   *     ]).isRequired,\n   *   }),\n   * ])).isRequired\n   * ```\n   */\n  data: function data(props, propName, component) {\n    for (var _len = arguments.length, others = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      others[_key - 3] = arguments[_key];\n    }\n\n    var _PropTypes$arrayOf, _PropTypes$shape;\n\n    var dataLabel = props.dataLabel;\n    return (_PropTypes$arrayOf = PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.number, PropTypes.shape((_PropTypes$shape = {}, _PropTypes$shape[dataLabel] = PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.node]).isRequired, _PropTypes$shape))]))).isRequired.apply(_PropTypes$arrayOf, [props, propName, component].concat(others));\n  },\n\n  /**\n   * An optional number representing the total number of results in the `data` prop.\n   * This should really only be used when the data is paginated. When this is set,\n   * each item in the suggestion menu will be updated with the `aria-setsize` and\n   * `aria-posinset`.\n   *\n   * @see {@link #offset}\n   */\n  total: invalidIf(PropTypes.number, 'inline'),\n\n  /**\n   * An optional number representing the data's offset if the results were paginated.\n   * This is used for accessibility with the `aria-posinset` attribute.\n   *\n   * @see {@link #total}\n   */\n  offset: PropTypes.number.isRequired,\n\n  /**\n   * An optional function to use to filter the `data`. If you have a sexy backend\n   * using solr or some other search/indexer, it is recommended to set this prop to\n   * `null`.\n   */\n  filter: PropTypes.func,\n\n  /**\n   * An optional function to call when the `Autocomplete`'s text field has a `keydown` event.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the `Autocomplete`'s text field has a `mousedown` event.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the `Autocomplete`'s text field value changes.\n   * The callback will be given the new value and the change event.\n   *\n   * `onChange(textFeldValue, event)`\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * An optional function to call when the `Autocomplete`'s text field is focused.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * An optional function to call when the entire `Autocomplete` component is blurred.\n   * This will be triggered when the window is clicked or when a user tabs away from\n   * the autocomplete.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Boolean if this text field should be styled as a full width text field.\n   * Floating labels and the text field indicator will be removed automatically.\n   */\n  block: PropTypes.bool,\n\n  /**\n   * Boolean if the autocomplete should span the entire width.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Boolean if the `Autocomplete` should display suggestions inline instead\n   * of in a `Menu`.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * The amount of padding to use between the current text and the inline suggestion text.\n   */\n  inlineSuggestionPadding: PropTypes.number.isRequired,\n\n  /**\n   * The function to call to find a suggestion for an inline autocomplete. This function\n   * expects to return a single result of a number or a string.\n   *\n   * ```js\n   * @param {Array<Object|String|Number>} data - The data prop to search.\n   * @param {String} value - The current value to use for searching.\n   * @param {String} dataLabel - The `dataLabel` prop to use if a datum is an object.\n   * @return {String|Number} the found suggestion or false-ish\n   * ```\n   */\n  findInlineSuggestion: PropTypes.func,\n\n  /**\n   * An optional function to call when an autocomplete suggestion is clicked either\n   * by using the mouse, the enter/space key, or touch. The match index and current\n   * `dataLabel` will be given back.\n   *\n   * `onAutocomplete(suggestion, suggestionIndex, matches);`\n   *\n   * @see {@link #autocompleteWithLabel}\n   */\n  onAutocomplete: PropTypes.func,\n\n  /**\n   * Boolean if the `onAutocomplete` should attempt send the `suggestion[dataLabel]` instead\n   * of `suggestion[dataValue]` when the data is an object.\n   *\n   * @see {@link #onAutocomplete}\n   */\n  autocompleteWithLabel: PropTypes.bool,\n\n  /**\n   * A boolean if the text field's value should be reset to the empty string when\n   * an item is auto-completed. This is useful if you do not want a fully controlled\n   * component and the values are stored outside of the `TextField`. (like `Chips`).\n   */\n  clearOnAutocomplete: PropTypes.bool,\n\n  /**\n   * An optional function to call when the `Autocomplete` suggestion menu opens.\n   */\n  onMenuOpen: PropTypes.func,\n\n  /**\n   * An optional function to call when the `Autocomplete` suggestion menu closes.\n   */\n  onMenuClose: PropTypes.func,\n\n  /* eslint-disable max-len */\n\n  /**\n   * This prop is used for disabling the browser's default autocomplete suggestions\n   * of previously typed values in the text field. By default, this is set to `'off'`\n   * which most browsers will ignore when in forms. See the MDN Link on disabling\n   * autocomplete for some workarounds or fixes.\n   *\n   * @see [Disabling autocomplete](https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion#Disabling_autocompletion)\n   */\n  autoComplete: PropTypes.string,\n\n  /* eslint-enable max-len */\n\n  /**\n   * Boolean if the `input` should be focused again after a suggestion was clicked.\n   *\n   * This is really only added for keyboard support and the fact that each of suggestions\n   * are focusable.\n   */\n  focusInputOnAutocomplete: PropTypes.bool,\n\n  /**\n   * This is how the menu's `List` gets anchored to the `toggle` element.\n   *\n   * @see {@link Helpers/Layover#anchor}\n   */\n  anchor: anchorShape,\n\n  /**\n   * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n   *\n   * @see {@link Helpers/Layover#belowAnchor}\n   */\n  belowAnchor: anchorShape,\n\n  /**\n   * This is the animation position for the list that appears.\n   *\n   * @see {@link Helpers/Layover#animationPosition}\n   */\n  position: positionShape,\n\n  /**\n   * This is how the menu's list will be \"fixed\" to the `toggle` component.\n   *\n   * @see {@link Helpers/Layover#fixedTo}\n   */\n  fixedTo: fixedToShape,\n\n  /**\n   * Boolean if the menu's list should appear horizontally instead of vertically.\n   */\n  listInline: PropTypes.bool,\n\n  /**\n   * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\n   */\n  listZDepth: PropTypes.number,\n\n  /**\n   * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\n   * `$md-menu-desktop-max-height` values.\n   *\n   * @see [md-menu-mobile-max-height](/components/menus?tab=2#variable-md-menu-mobile-max-height)\n   * @see [md-menu-desktop-max-height](/components/menus?tab=2#variable-md-menu-desktop-max-height)\n   */\n  listHeightRestricted: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#xThreshold}\n   */\n  xThreshold: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#yThreshold}\n   */\n  yThreshold: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#closeOnOutsideClick}\n   */\n  closeOnOutsideClick: PropTypes.bool,\n\n  /**\n   * An optional transition name to use for the list appearing/disappearing.\n   *\n   * @see {@link Helpers/Layover#transitionName}\n   */\n  transitionName: PropTypes.string,\n\n  /**\n   * @see {@link Helpers/Layover#transitionEnterTimeout}\n   */\n  transitionEnterTimeout: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#transitionLeaveTimeout}\n   */\n  transitionLeaveTimeout: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#centered}\n   */\n  centered: Menu.propTypes.centered,\n\n  /**\n   * @see {@link Helpers/Layover#sameWidth}\n   */\n  sameWidth: Menu.propTypes.sameWidth,\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the `fixedTo` element scrolls.\n   *\n   * @see {@link Helpers/Layover#repositionOnScroll}\n   */\n  repositionOnScroll: PropTypes.bool,\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the window resizes.\n   *\n   * @see {@link Helpers/Layover#repositionOnResize}\n   */\n  repositionOnResize: PropTypes.bool,\n\n  /**\n   * Boolean if the menu logic should be simplified without any viewport logic and position\n   * based on the relative position of the menu. This will most like require some additional\n   * styles applied to the menu.\n   *\n   * @see {@link Helpers/Layover#simplified}\n   */\n  simplifiedMenu: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#minLeft}\n   */\n  minLeft: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#minRight}\n   */\n  minRight: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#minBottom}\n   */\n  minBottom: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#fillViewportWidth}\n   */\n  fillViewportWidth: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#fillViewportHeight}\n   */\n  fillViewportHeight: PropTypes.bool,\n\n  /**\n   * @see {@link TextFields#toolbar}\n   */\n  toolbar: PropTypes.bool,\n\n  /**\n   * Boolean if the list of data should be shown on focus when no filter value has been\n   * provided.\n   */\n  showUnfilteredData: PropTypes.bool\n};\nAutocomplete.defaultProps = {\n  autocompleteWithLabel: false,\n  position: Menu.Positions.BELOW,\n  sameWidth: true,\n  offset: 0,\n  fullWidth: true,\n  defaultValue: '',\n  dataLabel: 'primaryText',\n  filter: Autocomplete.fuzzyFilter,\n  findInlineSuggestion: Autocomplete.findIgnoreCase,\n  autoComplete: 'off',\n  repositionOnScroll: true,\n  repositionOnResize: true,\n  showUnfilteredData: false,\n  inlineSuggestionPadding: 6\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._close = function (e) {\n    if (_this2.props.onBlur) {\n      _this2.props.onBlur(e);\n    }\n\n    _this2.setState({\n      visible: false\n    });\n  };\n\n  this._handleChange = function (value, event) {\n    var _props2 = _this2.props,\n        onChange = _props2.onChange,\n        filter = _props2.filter,\n        findInlineSuggestion = _props2.findInlineSuggestion,\n        data = _props2.data,\n        dataLabel = _props2.dataLabel,\n        inline = _props2.inline,\n        showUnfilteredData = _props2.showUnfilteredData;\n\n    if (onChange) {\n      onChange(value, event);\n    }\n\n    if (inline) {\n      // If findInlineSuggestion does not exist, assume that `onChange` will handle it.\n      return findInlineSuggestion ? _this2._findInlineSuggestions(value) : null;\n    }\n\n    var visible = _this2.state.visible;\n    var hasValidValue = value || showUnfilteredData;\n    var matches = hasValidValue || !filter ? data : [];\n\n    if (value && filter) {\n      matches = filter(data, value, dataLabel);\n    }\n\n    if (filter) {\n      visible = !!matches.length;\n    }\n\n    return _this2.setState({\n      matches: matches,\n      visible: visible,\n      value: value\n    });\n  };\n\n  this._handleFocus = function (e) {\n    if (_this2.props.onFocus) {\n      _this2.props.onFocus(e);\n    }\n\n    var value = e.target.value;\n\n    if (_this2.props.inline && value) {\n      if (_this2.props.findInlineSuggestion) {\n        _this2._findInlineSuggestions(value);\n      }\n\n      return;\n    }\n\n    var hasValidValue = !!value || _this2.props.showUnfilteredData;\n\n    _this2.setState({\n      matchIndex: -1,\n      visible: !_this2.state.manualFocus && hasValidValue && !!_this2.state.matches.length,\n      manualFocus: false,\n      focus: true\n    });\n  };\n\n  this._handleBlur = function (e) {\n    if (_this2.props.inline || !_this2.state.matches.length) {\n      if (_this2.props.onBlur) {\n        _this2.props.onBlur(e);\n      }\n    }\n\n    _this2.setState({\n      focus: false\n    });\n  };\n\n  this._handleInlineAutocomplete = function () {\n    var _state3 = _this2.state,\n        suggestionIndex = _state3.suggestionIndex,\n        matches = _state3.matches;\n\n    if (suggestionIndex === -1) {\n      return;\n    }\n\n    var _props3 = _this2.props,\n        data = _props3.data,\n        dataLabel = _props3.dataLabel,\n        dataValue = _props3.dataValue,\n        label = _props3.autocompleteWithLabel,\n        onAutocomplete = _props3.onAutocomplete;\n    var value = data[suggestionIndex];\n\n    if (onAutocomplete) {\n      var v = value;\n\n      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n        if (!label) {\n          v = value[dataValue];\n        } else {\n          v = value[dataLabel];\n        }\n      }\n\n      onAutocomplete(v, suggestionIndex, matches);\n    }\n\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n      value = value[dataLabel];\n    }\n\n    _this2.setState({\n      value: value,\n      suggestion: '',\n      suggestionIndex: -1,\n      tabbed: true\n    });\n  };\n\n  this._handleTextFieldKeyDown = function (e) {\n    var _props4 = _this2.props,\n        inline = _props4.inline,\n        onKeyDown = _props4.onKeyDown;\n    var suggestionIndex = _this2.state.suggestionIndex;\n    var key = e.which || e.keyCode;\n\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    if (inline && key === TAB && suggestionIndex !== -1) {\n      // Autocomplete the text field\n      e.preventDefault();\n\n      _this2._handleInlineAutocomplete();\n    }\n  };\n\n  this._handleMenuKeyDown = function (e) {\n    var key = e.which || e.keyCode;\n\n    if (key === TAB) {\n      if (_this2.props.onBlur) {\n        _this2.props.onBlur(e);\n      }\n\n      _this2.setState({\n        visible: false\n      });\n    } else if (key === UP || key === DOWN) {\n      _this2._focusSuggestion(key === UP, e);\n    }\n  };\n\n  this._handleClick = function (e) {\n    var target = e.target;\n\n    while (_this2._menu && _this2._menu.contains(target)) {\n      if (target.classList.contains('md-list-item')) {\n        var items = target.parentNode.querySelectorAll('.md-list-item');\n        items = Array.prototype.slice.call(items);\n        return _this2._handleItemClick(items.indexOf(target));\n      }\n\n      target = target.parentNode;\n    }\n\n    return null;\n  };\n\n  this._handleItemClick = function (index) {\n    if (index === -1) {\n      return;\n    }\n\n    var matches = _this2.state.matches;\n    var _props5 = _this2.props,\n        data = _props5.data,\n        dataLabel = _props5.dataLabel,\n        dataValue = _props5.dataValue,\n        filter = _props5.filter,\n        onAutocomplete = _props5.onAutocomplete,\n        clearOnAutocomplete = _props5.clearOnAutocomplete,\n        focusInputOnAutocomplete = _props5.focusInputOnAutocomplete,\n        label = _props5.autocompleteWithLabel;\n    var value = matches.filter(function (m) {\n      return !React.isValidElement(m);\n    })[index];\n\n    if (onAutocomplete) {\n      var v = value;\n\n      if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object') {\n        if (!label) {\n          v = value[dataValue];\n        } else {\n          v = value[dataLabel];\n        }\n      }\n\n      onAutocomplete(v, index, matches);\n    }\n\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n      value = value[dataLabel];\n    }\n\n    value = clearOnAutocomplete ? '' : value;\n    var callback = void 0;\n\n    if (focusInputOnAutocomplete) {\n      callback = function callback() {\n        _this2._field.focus();\n      };\n    }\n\n    _this2.setState({\n      visible: false,\n      manualFocus: focusInputOnAutocomplete,\n      matches: filter ? filter(data, value, dataLabel) : matches,\n      value: value\n    }, callback);\n  };\n\n  this._focusSuggestion = function (negative, e) {\n    e.preventDefault();\n    var _state4 = _this2.state,\n        matchIndex = _state4.matchIndex,\n        matches = _state4.matches;\n    var l = matches.length;\n    var index = void 0;\n\n    if (negative && matchIndex === -1 || !negative && matchIndex >= l) {\n      return;\n    } else if (negative) {\n      index = matchIndex - 1;\n\n      if (index === -1) {\n        _this2._field.focus();\n      }\n    } else {\n      index = Math.min(l, matchIndex + 1);\n    }\n\n    if (index !== -1 && index !== matchIndex) {\n      var item = _this2._menu.querySelectorAll('.md-list-tile')[index];\n\n      if (item) {\n        item.focus();\n      }\n    }\n\n    _this2.setState({\n      matchIndex: index\n    });\n  };\n\n  this._findInlineSuggestions = function (value) {\n    var _props6 = _this2.props,\n        data = _props6.data,\n        dataLabel = _props6.dataLabel,\n        findInlineSuggestion = _props6.findInlineSuggestion,\n        inlineSuggestionPadding = _props6.inlineSuggestionPadding;\n    var suggestion = findInlineSuggestion(data, value, dataLabel);\n\n    if ((typeof suggestion === 'undefined' ? 'undefined' : _typeof(suggestion)) === 'object') {\n      throw new Error('`findInlineSuggestion` should return a string or a number, but got an object.', suggestion);\n    }\n\n    var suggestionStyle = _this2.state.suggestionStyle;\n    var suggestionIndex = -1;\n\n    if (suggestion) {\n      // Find index of suggestion\n      data.some(function (datum, i) {\n        var d = (typeof dataum === 'undefined' ? 'undefined' : _typeof(dataum)) === 'object' ? datum[dataLabel] : datum;\n\n        if (d === suggestion) {\n          suggestionIndex = i;\n        }\n\n        return suggestionIndex !== -1;\n      }); // Strip already used letters\n\n      suggestion = suggestion.toString().substring(value.length, suggestion.length); // Position the inline suggestion next to the text\n\n      var width = getTextWidth(value, _this2._field);\n\n      if (width !== null) {\n        width += inlineSuggestionPadding;\n      }\n\n      if (width !== null && (!suggestionStyle || suggestionStyle.left !== width)) {\n        suggestionStyle = {\n          left: width\n        };\n      }\n    }\n\n    _this2.setState({\n      value: value,\n      suggestion: suggestion,\n      suggestionIndex: suggestionIndex,\n      suggestionStyle: suggestionStyle,\n      tabbed: false,\n      focus: true\n    });\n  };\n\n  this._mapToListItem = function (match, i) {\n    if (React.isValidElement(match)) {\n      return match;\n    }\n\n    var _props7 = _this2.props,\n        dataLabel = _props7.dataLabel,\n        dataValue = _props7.dataValue,\n        deleteKeys = _props7.deleteKeys,\n        total = _props7.total,\n        offset = _props7.offset,\n        data = _props7.data;\n    var props = void 0;\n\n    switch (typeof match === 'undefined' ? 'undefined' : _typeof(match)) {\n      case 'string':\n      case 'number':\n        props = {\n          key: match,\n          primaryText: match\n        };\n        break;\n\n      default:\n        if (deleteKeys) {\n          props = omit(match, typeof deleteKeys === 'string' ? [deleteKeys] : deleteKeys);\n        } else {\n          props = match;\n        }\n\n        props = _extends({}, props, {\n          key: match.key || dataValue && match[dataValue] || match[dataLabel],\n          primaryText: match[dataLabel]\n        });\n    }\n\n    if (typeof total !== 'undefined' && data.length < total) {\n      props['aria-setsize'] = total;\n      props['aria-posinset'] = i + 1 + offset;\n    } // Allows focus, but does not let tab focus. This is so up and down keys work.\n\n\n    return React.createElement(ListItem, _extends({\n      tabIndex: -1\n    }, props));\n  };\n\n  this._toggleMenu = function (e) {\n    if (_this2.props.onMouseDown) {\n      _this2.props.onMouseDown(e);\n    }\n\n    if (!_this2.props.inline && _this2.state.matches.length && getField(_this2.props, _this2.state, 'value')) {\n      _this2.setState({\n        visible: !_this2.state.visible\n      });\n    }\n  };\n\n  this._handleTouchStart = function (e) {\n    var target = e.target;\n    var suggestion = _this2.state.suggestion;\n\n    if (target.classList.contains('md-autocomplete-suggestion') && suggestion) {\n      _this2._handleInlineAutocomplete();\n    }\n  };\n\n  this._setField = function (field) {\n    if (field) {\n      _this2._field = field.getField();\n    }\n  };\n\n  this._setMenu = function (menu) {\n    _this2._menu = findDOMNode(menu);\n  };\n};\n\nexport default Autocomplete;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Autocompletes/Autocomplete.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_extends","Object","assign","target","i","arguments","length","source","key","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_objectWithoutProperties","keys","indexOf","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","value","setPrototypeOf","__proto__","React","PureComponent","PropTypes","findDOMNode","CSSTransitionGroup","cn","getField","omit","findIgnoreCase","fuzzyFilter","caseInsensitiveFilter","getTextWidth","oneRequiredForA11y","controlled","invalidIf","UP","DOWN","TAB","anchorShape","fixedToShape","positionShape","ListItem","Menu","TextField","Autocomplete","_PureComponent","_this","_initialiseProps","defaultValue","data","dataLabel","filter","showUnfilteredData","matches","state","visible","matchIndex","manualFocus","suggestion","suggestionIndex","componentWillReceiveProps","nextProps","nextValue","dataDiff","_state","focus","setState","componentWillUpdate","nextState","menuFn","render","_state2","tabbed","suggestionStyle","_props","fullWidth","block","style","className","listStyle","listClassName","textFieldStyle","textFieldClassName","inlineSuggestionStyle","inlineSuggestionClassName","menuId","inline","anchor","belowAnchor","position","fixedTo","listId","listInline","listZDepth","listHeightRestricted","xThreshold","yThreshold","closeOnOutsideClick","transitionName","transitionEnterTimeout","transitionLeaveTimeout","centered","sameWidth","repositionOnScroll","repositionOnResize","simplifiedMenu","minLeft","minRight","minBottom","fillViewportWidth","fillViewportHeight","propValue","total","offset","dataValue","deleteKeys","clearOnAutocomplete","autocompleteWithLabel","findInlineSuggestion","inlineSuggestionPadding","onAutocomplete","onMenuOpen","onMenuClose","onBlur","onFocus","onKeyDown","onMouseDown","onChange","focusInputOnAutocomplete","autocomplete","createElement","ref","_setField","_handleTextFieldKeyDown","_toggleMenu","_handleChange","_handleFocus","_handleBlur","label","component","transitionLeave","onTouchStart","_handleTouchStart","id","_setMenu","toggle","onClick","_handleClick","onClose","_close","_handleMenuKeyDown","simplified","map","_mapToListItem","get","HorizontalAnchors","VerticalAnchors","Positions","propTypes","oneOfType","number","string","object","inputStyle","inputClassName","disabled","bool","node","isRequired","arrayOf","propName","_len","others","Array","_key","_PropTypes$arrayOf","_PropTypes$shape","element","shape","apply","concat","func","autoComplete","toolbar","defaultProps","BELOW","_this2","e","event","_props2","_findInlineSuggestions","hasValidValue","_handleInlineAutocomplete","_state3","_props3","v","_props4","which","keyCode","preventDefault","_focusSuggestion","_menu","contains","classList","items","parentNode","querySelectorAll","slice","_handleItemClick","index","_props5","m","isValidElement","callback","_field","negative","_state4","l","Math","min","item","_props6","Error","some","datum","d","dataum","toString","substring","width","left","match","_props7","primaryText","tabIndex","field","menu"],"mappings":"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","sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\n\nimport getField from '../utils/getField';\nimport omit from '../utils/omit';\nimport findIgnoreCase from '../utils/findIgnoreCase';\nimport fuzzyFilter from '../utils/fuzzyFilter';\nimport caseInsensitiveFilter from '../utils/caseInsensitiveFilter';\nimport getTextWidth from '../utils/Positioning/getTextWidth';\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport controlled from '../utils/PropTypes/controlled';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport { UP, DOWN, TAB } from '../constants/keyCodes';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\n\nimport ListItem from '../Lists/ListItem';\nimport Menu from '../Menus/Menu';\nimport TextField from '../TextFields/TextField';\n\n/**\n * The `Autocomplete` component is useful for presenting real-time suggestions, completions,\n * or filtering.\n */\n\nvar Autocomplete = function (_PureComponent) {\n  _inherits(Autocomplete, _PureComponent);\n\n  function Autocomplete(props) {\n    _classCallCheck(this, Autocomplete);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var defaultValue = props.defaultValue,\n        data = props.data,\n        dataLabel = props.dataLabel,\n        filter = props.filter,\n        showUnfilteredData = props.showUnfilteredData;\n\n\n    var matches = [];\n    if (defaultValue && filter) {\n      matches = filter(data, defaultValue, dataLabel);\n    } else if (!filter || showUnfilteredData) {\n      matches = data;\n    }\n\n    _this.state = {\n      value: defaultValue,\n      matches: matches,\n      visible: false,\n      matchIndex: -1,\n      manualFocus: false,\n      suggestion: '',\n      suggestionIndex: -1\n    };\n    return _this;\n  }\n\n  Autocomplete.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var nextValue = nextProps.value,\n        data = nextProps.data,\n        filter = nextProps.filter,\n        dataLabel = nextProps.dataLabel;\n\n    var dataDiff = data !== this.props.data;\n    if (nextValue !== this.props.value || dataDiff) {\n      var _state = this.state,\n          visible = _state.visible,\n          matches = _state.matches;\n\n      var value = getField(nextProps, this.state, 'value');\n\n      if (filter) {\n        matches = filter(data, value, dataLabel);\n      } else if (dataDiff) {\n        matches = data;\n      }\n\n      if (this.state.focus) {\n        visible = !!matches.length;\n      }\n\n      this.setState({ matches: matches, visible: visible });\n    }\n  };\n\n  Autocomplete.prototype.componentWillUpdate = function componentWillUpdate(nextProps, nextState) {\n    if (this.state.visible !== nextState.visible) {\n      var menuFn = nextProps['onMenu' + (nextState.visible ? 'Open' : 'Close')];\n      if (menuFn) {\n        menuFn();\n      }\n    }\n  };\n\n  /**\n   * Gets the current value from the text field. This is used when you have an uncontrolled\n   * text field and simply need the value from a ref callback.\n   *\n   * @return {String} the text field's value\n   */\n\n\n  Autocomplete.prototype.render = function render() {\n    var _state2 = this.state,\n        visible = _state2.visible,\n        matches = _state2.matches,\n        tabbed = _state2.tabbed,\n        focus = _state2.focus,\n        suggestionStyle = _state2.suggestionStyle;\n\n    var _props = this.props,\n        fullWidth = _props.fullWidth,\n        block = _props.block,\n        style = _props.style,\n        className = _props.className,\n        listStyle = _props.listStyle,\n        listClassName = _props.listClassName,\n        textFieldStyle = _props.textFieldStyle,\n        textFieldClassName = _props.textFieldClassName,\n        inlineSuggestionStyle = _props.inlineSuggestionStyle,\n        inlineSuggestionClassName = _props.inlineSuggestionClassName,\n        menuId = _props.menuId,\n        inline = _props.inline,\n        anchor = _props.anchor,\n        belowAnchor = _props.belowAnchor,\n        position = _props.position,\n        fixedTo = _props.fixedTo,\n        listId = _props.listId,\n        listInline = _props.listInline,\n        listZDepth = _props.listZDepth,\n        listHeightRestricted = _props.listHeightRestricted,\n        xThreshold = _props.xThreshold,\n        yThreshold = _props.yThreshold,\n        closeOnOutsideClick = _props.closeOnOutsideClick,\n        transitionName = _props.transitionName,\n        transitionEnterTimeout = _props.transitionEnterTimeout,\n        transitionLeaveTimeout = _props.transitionLeaveTimeout,\n        centered = _props.centered,\n        sameWidth = _props.sameWidth,\n        repositionOnScroll = _props.repositionOnScroll,\n        repositionOnResize = _props.repositionOnResize,\n        simplifiedMenu = _props.simplifiedMenu,\n        minLeft = _props.minLeft,\n        minRight = _props.minRight,\n        minBottom = _props.minBottom,\n        fillViewportWidth = _props.fillViewportWidth,\n        fillViewportHeight = _props.fillViewportHeight,\n        propValue = _props.value,\n        total = _props.total,\n        offset = _props.offset,\n        filter = _props.filter,\n        data = _props.data,\n        dataLabel = _props.dataLabel,\n        dataValue = _props.dataValue,\n        deleteKeys = _props.deleteKeys,\n        defaultValue = _props.defaultValue,\n        clearOnAutocomplete = _props.clearOnAutocomplete,\n        autocompleteWithLabel = _props.autocompleteWithLabel,\n        findInlineSuggestion = _props.findInlineSuggestion,\n        inlineSuggestionPadding = _props.inlineSuggestionPadding,\n        onAutocomplete = _props.onAutocomplete,\n        onMenuOpen = _props.onMenuOpen,\n        onMenuClose = _props.onMenuClose,\n        onBlur = _props.onBlur,\n        onFocus = _props.onFocus,\n        onKeyDown = _props.onKeyDown,\n        onMouseDown = _props.onMouseDown,\n        onChange = _props.onChange,\n        showUnfilteredData = _props.showUnfilteredData,\n        props = _objectWithoutProperties(_props, ['fullWidth', 'block', 'style', 'className', 'listStyle', 'listClassName', 'textFieldStyle', 'textFieldClassName', 'inlineSuggestionStyle', 'inlineSuggestionClassName', 'menuId', 'inline', 'anchor', 'belowAnchor', 'position', 'fixedTo', 'listId', 'listInline', 'listZDepth', 'listHeightRestricted', 'xThreshold', 'yThreshold', 'closeOnOutsideClick', 'transitionName', 'transitionEnterTimeout', 'transitionLeaveTimeout', 'centered', 'sameWidth', 'repositionOnScroll', 'repositionOnResize', 'simplifiedMenu', 'minLeft', 'minRight', 'minBottom', 'fillViewportWidth', 'fillViewportHeight', 'value', 'total', 'offset', 'filter', 'data', 'dataLabel', 'dataValue', 'deleteKeys', 'defaultValue', 'clearOnAutocomplete', 'autocompleteWithLabel', 'findInlineSuggestion', 'inlineSuggestionPadding', 'onAutocomplete', 'onMenuOpen', 'onMenuClose', 'onBlur', 'onFocus', 'onKeyDown', 'onMouseDown', 'onChange', 'showUnfilteredData']);\n\n    delete props.focusInputOnAutocomplete;\n\n    var value = getField(this.props, this.state, 'value');\n\n    var autocomplete = React.createElement(TextField, _extends({}, props, {\n      'aria-autocomplete': inline ? 'inline' : 'list',\n      style: textFieldStyle,\n      className: cn('md-autocomplete', textFieldClassName),\n      key: 'autocomplete',\n      ref: this._setField,\n      value: value,\n      onKeyDown: this._handleTextFieldKeyDown,\n      onMouseDown: this._toggleMenu,\n      onChange: this._handleChange,\n      onFocus: this._handleFocus,\n      onBlur: this._handleBlur,\n      fullWidth: fullWidth,\n      block: block\n    }));\n\n    if (inline) {\n      var suggestion = void 0;\n      if (focus && this.state.suggestion) {\n        suggestion = React.createElement(\n          'span',\n          {\n            key: 'suggestion',\n            style: _extends({}, suggestionStyle, inlineSuggestionStyle),\n            className: cn('md-autocomplete-suggestion', {\n              'md-autocomplete-suggestion--floating': props.label,\n              'md-autocomplete-suggestion--block': block\n            }, inlineSuggestionClassName)\n          },\n          this.state.suggestion\n        );\n      }\n\n      return React.createElement(\n        CSSTransitionGroup,\n        {\n          component: 'div',\n          style: style,\n          className: cn('md-menu-container md-autocomplete-container', className, {\n            'md-full-width': fullWidth || block\n          }),\n          transitionName: 'opacity',\n          transitionEnterTimeout: 150,\n          transitionLeave: !tabbed,\n          transitionLeaveTimeout: 150,\n          onTouchStart: this._handleTouchStart\n        },\n        autocomplete,\n        suggestion\n      );\n    }\n\n    return React.createElement(\n      Menu,\n      {\n        id: menuId || props.id + '-menu',\n        listId: listId,\n        ref: this._setMenu,\n        toggle: autocomplete,\n        visible: visible,\n        onClick: this._handleClick,\n        onClose: this._close,\n        onKeyDown: this._handleMenuKeyDown,\n        simplified: simplifiedMenu,\n        sameWidth: sameWidth,\n        centered: centered,\n        anchor: anchor,\n        belowAnchor: belowAnchor,\n        position: position,\n        fixedTo: fixedTo,\n        listInline: listInline,\n        listZDepth: listZDepth,\n        listHeightRestricted: listHeightRestricted,\n        xThreshold: xThreshold,\n        yThreshold: yThreshold,\n        closeOnOutsideClick: closeOnOutsideClick,\n        transitionName: transitionName,\n        transitionEnterTimeout: transitionEnterTimeout,\n        transitionLeaveTimeout: transitionLeaveTimeout,\n        fullWidth: fullWidth || block,\n        style: style,\n        className: cn('md-autocomplete-container', className),\n        listStyle: listStyle,\n        listClassName: cn('md-autocomplete-list', listClassName),\n        repositionOnScroll: repositionOnScroll,\n        repositionOnResize: repositionOnResize,\n        minLeft: minLeft,\n        minRight: minRight,\n        minBottom: minBottom,\n        fillViewportWidth: fillViewportWidth,\n        fillViewportHeight: fillViewportHeight\n      },\n      matches.map(this._mapToListItem)\n    );\n  };\n\n  _createClass(Autocomplete, [{\n    key: 'value',\n    get: function get() {\n      return getField(this.props, this.state, 'value');\n    }\n\n    /**\n     * Just check if the click target is in a list item.. if it is, autocomplete the text field\n     * with that item.\n     */\n\n\n    /**\n     * The `mousedown` event is used instead of `click` because of the order\n     * of the `mousedown`, `focus`, and `click` events.\n     */\n\n\n    /**\n     * Allows touch devices to autocomplete the inline view by tapping:\n     * - the suggestion text\n     * - the text field IF there is a suggestion visible\n     */\n\n  }]);\n\n  return Autocomplete;\n}(PureComponent);\n\nAutocomplete.HorizontalAnchors = Menu.HorizontalAnchors;\nAutocomplete.VerticalAnchors = Menu.VerticalAnchors;\nAutocomplete.Positions = Menu.Positions;\nAutocomplete.fuzzyFilter = fuzzyFilter;\nAutocomplete.caseInsensitiveFilter = caseInsensitiveFilter;\nAutocomplete.findIgnoreCase = findIgnoreCase;\nAutocomplete.propTypes = {\n  /**\n   * An id to give the autocomplete. Either this or the `menuId` is required for accessibility.\n   *\n   * @see {@link #menuId}\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The menu id to provide to the autocomplete. Either this prop or the `id` prop is required. If\n   * this props is omitted, the menuId will become: `${id}-menu`\n   */\n  menuId: oneRequiredForA11y(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'id'),\n\n  /**\n   * An optional id to provide to the menu's list.\n   *\n   * @see {@link Menus/Menu#listId}\n   */\n  listId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional style to apply to the menu that contains the autocomplete.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the menu that contains the autocomplete.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the autocomplete's text field.\n   */\n  textFieldStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the autocomplete's text field.\n   */\n  textFieldClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the autocomplete's text field input itself.\n   */\n  inputStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the autocomplete's input field itself.\n   */\n  inputClassName: PropTypes.string,\n\n  /**\n   * The optional style to apply to the opened menu List if the\n   * `Autocomplete` is not using `inline` suggestions.\n   */\n  listStyle: PropTypes.object,\n\n  /**\n   * The optional className to apply to the opened menu List if the\n   * `Autocomplete` is not using `inline` suggestions.\n   */\n  listClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the inline suggestion when using `inline` mode.\n   */\n  inlineSuggestionStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the inline suggestion when using `inline` mode.\n   */\n  inlineSuggestionClassName: PropTypes.string,\n\n  /**\n   * Boolean if the autocomplete is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A label to display with the autocomplete.\n   */\n  label: PropTypes.node,\n\n  /**\n   * An optional value to use for the text field. This will force this component\n   * to be controlled and require the `onChange` function.\n   */\n  value: controlled(PropTypes.oneOfType([PropTypes.string, PropTypes.number]), 'onChange'),\n\n  /**\n   * The default value for the autocomplete's text field.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * An object key to use to extract the text to be compared for filtering.\n   * This will only be applied if the given `data` prop is an array of objects.\n   */\n  dataLabel: PropTypes.string.isRequired,\n\n  /**\n   * An optional object key to use to extract the `value` of the given `data` prop.\n   * This is really only used with generating a unique react key. The unique react\n   * key with either be:\n   * - the datum if it is a string or number\n   * - the `key` attribute of the datum object\n   * - the `datum[dataValue]`\n   * - or the `datum[dataLabel]`\n   */\n  dataValue: PropTypes.string,\n\n  /**\n   * A single key or an array of keys to delete from your data object before passing\n   * to the `ListItem` component.\n   */\n  deleteKeys: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\n  /**\n   * The data that will be used for autocomplete suggestions. This can either be\n   * an array of string, number, or object. If it is an array of objects, the key\n   * `dataLabel` is required.\n   *\n   * ```docgen\n   * PropTypes.arrayOf(PropTypes.oneOfType([\n   *   PropTypes.element,\n   *   PropTypes.string,\n   *   PropTypes.number,\n   *   PropTypes.shape({\n   *     [dataLabel]: PropTypes.oneOfType([\n   *       PropTypes.string,\n   *       PropTypes.number,\n   *       PropTypes.node,\n   *     ]).isRequired,\n   *   }),\n   * ])).isRequired\n   * ```\n   */\n  data: function data(props, propName, component) {\n    for (var _len = arguments.length, others = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      others[_key - 3] = arguments[_key];\n    }\n\n    var _PropTypes$arrayOf, _PropTypes$shape;\n\n    var dataLabel = props.dataLabel;\n\n    return (_PropTypes$arrayOf = PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.number, PropTypes.shape((_PropTypes$shape = {}, _PropTypes$shape[dataLabel] = PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.node]).isRequired, _PropTypes$shape))]))).isRequired.apply(_PropTypes$arrayOf, [props, propName, component].concat(others));\n  },\n\n  /**\n   * An optional number representing the total number of results in the `data` prop.\n   * This should really only be used when the data is paginated. When this is set,\n   * each item in the suggestion menu will be updated with the `aria-setsize` and\n   * `aria-posinset`.\n   *\n   * @see {@link #offset}\n   */\n  total: invalidIf(PropTypes.number, 'inline'),\n\n  /**\n   * An optional number representing the data's offset if the results were paginated.\n   * This is used for accessibility with the `aria-posinset` attribute.\n   *\n   * @see {@link #total}\n   */\n  offset: PropTypes.number.isRequired,\n\n  /**\n   * An optional function to use to filter the `data`. If you have a sexy backend\n   * using solr or some other search/indexer, it is recommended to set this prop to\n   * `null`.\n   */\n  filter: PropTypes.func,\n\n  /**\n   * An optional function to call when the `Autocomplete`'s text field has a `keydown` event.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the `Autocomplete`'s text field has a `mousedown` event.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the `Autocomplete`'s text field value changes.\n   * The callback will be given the new value and the change event.\n   *\n   * `onChange(textFeldValue, event)`\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * An optional function to call when the `Autocomplete`'s text field is focused.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * An optional function to call when the entire `Autocomplete` component is blurred.\n   * This will be triggered when the window is clicked or when a user tabs away from\n   * the autocomplete.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Boolean if this text field should be styled as a full width text field.\n   * Floating labels and the text field indicator will be removed automatically.\n   */\n  block: PropTypes.bool,\n\n  /**\n   * Boolean if the autocomplete should span the entire width.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Boolean if the `Autocomplete` should display suggestions inline instead\n   * of in a `Menu`.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * The amount of padding to use between the current text and the inline suggestion text.\n   */\n  inlineSuggestionPadding: PropTypes.number.isRequired,\n\n  /**\n   * The function to call to find a suggestion for an inline autocomplete. This function\n   * expects to return a single result of a number or a string.\n   *\n   * ```js\n   * @param {Array<Object|String|Number>} data - The data prop to search.\n   * @param {String} value - The current value to use for searching.\n   * @param {String} dataLabel - The `dataLabel` prop to use if a datum is an object.\n   * @return {String|Number} the found suggestion or false-ish\n   * ```\n   */\n  findInlineSuggestion: PropTypes.func,\n\n  /**\n   * An optional function to call when an autocomplete suggestion is clicked either\n   * by using the mouse, the enter/space key, or touch. The match index and current\n   * `dataLabel` will be given back.\n   *\n   * `onAutocomplete(suggestion, suggestionIndex, matches);`\n   *\n   * @see {@link #autocompleteWithLabel}\n   */\n  onAutocomplete: PropTypes.func,\n\n  /**\n   * Boolean if the `onAutocomplete` should attempt send the `suggestion[dataLabel]` instead\n   * of `suggestion[dataValue]` when the data is an object.\n   *\n   * @see {@link #onAutocomplete}\n   */\n  autocompleteWithLabel: PropTypes.bool,\n\n  /**\n   * A boolean if the text field's value should be reset to the empty string when\n   * an item is auto-completed. This is useful if you do not want a fully controlled\n   * component and the values are stored outside of the `TextField`. (like `Chips`).\n   */\n  clearOnAutocomplete: PropTypes.bool,\n\n  /**\n   * An optional function to call when the `Autocomplete` suggestion menu opens.\n   */\n  onMenuOpen: PropTypes.func,\n\n  /**\n   * An optional function to call when the `Autocomplete` suggestion menu closes.\n   */\n  onMenuClose: PropTypes.func,\n\n  /* eslint-disable max-len */\n  /**\n   * This prop is used for disabling the browser's default autocomplete suggestions\n   * of previously typed values in the text field. By default, this is set to `'off'`\n   * which most browsers will ignore when in forms. See the MDN Link on disabling\n   * autocomplete for some workarounds or fixes.\n   *\n   * @see [Disabling autocomplete](https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion#Disabling_autocompletion)\n   */\n  autoComplete: PropTypes.string,\n  /* eslint-enable max-len */\n\n  /**\n   * Boolean if the `input` should be focused again after a suggestion was clicked.\n   *\n   * This is really only added for keyboard support and the fact that each of suggestions\n   * are focusable.\n   */\n  focusInputOnAutocomplete: PropTypes.bool,\n\n  /**\n   * This is how the menu's `List` gets anchored to the `toggle` element.\n   *\n   * @see {@link Helpers/Layover#anchor}\n   */\n  anchor: anchorShape,\n\n  /**\n   * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n   *\n   * @see {@link Helpers/Layover#belowAnchor}\n   */\n  belowAnchor: anchorShape,\n\n  /**\n   * This is the animation position for the list that appears.\n   *\n   * @see {@link Helpers/Layover#animationPosition}\n   */\n  position: positionShape,\n\n  /**\n   * This is how the menu's list will be \"fixed\" to the `toggle` component.\n   *\n   * @see {@link Helpers/Layover#fixedTo}\n   */\n  fixedTo: fixedToShape,\n\n  /**\n   * Boolean if the menu's list should appear horizontally instead of vertically.\n   */\n  listInline: PropTypes.bool,\n\n  /**\n   * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\n   */\n  listZDepth: PropTypes.number,\n\n  /**\n   * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\n   * `$md-menu-desktop-max-height` values.\n   *\n   * @see [md-menu-mobile-max-height](/components/menus?tab=2#variable-md-menu-mobile-max-height)\n   * @see [md-menu-desktop-max-height](/components/menus?tab=2#variable-md-menu-desktop-max-height)\n   */\n  listHeightRestricted: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#xThreshold}\n   */\n  xThreshold: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#yThreshold}\n   */\n  yThreshold: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#closeOnOutsideClick}\n   */\n  closeOnOutsideClick: PropTypes.bool,\n\n  /**\n   * An optional transition name to use for the list appearing/disappearing.\n   *\n   * @see {@link Helpers/Layover#transitionName}\n   */\n  transitionName: PropTypes.string,\n\n  /**\n   * @see {@link Helpers/Layover#transitionEnterTimeout}\n   */\n  transitionEnterTimeout: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#transitionLeaveTimeout}\n   */\n  transitionLeaveTimeout: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#centered}\n   */\n  centered: Menu.propTypes.centered,\n\n  /**\n   * @see {@link Helpers/Layover#sameWidth}\n   */\n  sameWidth: Menu.propTypes.sameWidth,\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the `fixedTo` element scrolls.\n   *\n   * @see {@link Helpers/Layover#repositionOnScroll}\n   */\n  repositionOnScroll: PropTypes.bool,\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the window resizes.\n   *\n   * @see {@link Helpers/Layover#repositionOnResize}\n   */\n  repositionOnResize: PropTypes.bool,\n\n  /**\n   * Boolean if the menu logic should be simplified without any viewport logic and position\n   * based on the relative position of the menu. This will most like require some additional\n   * styles applied to the menu.\n   *\n   * @see {@link Helpers/Layover#simplified}\n   */\n  simplifiedMenu: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#minLeft}\n   */\n  minLeft: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#minRight}\n   */\n  minRight: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#minBottom}\n   */\n  minBottom: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#fillViewportWidth}\n   */\n  fillViewportWidth: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#fillViewportHeight}\n   */\n  fillViewportHeight: PropTypes.bool,\n\n  /**\n   * @see {@link TextFields#toolbar}\n   */\n  toolbar: PropTypes.bool,\n\n  /**\n   * Boolean if the list of data should be shown on focus when no filter value has been\n   * provided.\n   */\n  showUnfilteredData: PropTypes.bool\n};\nAutocomplete.defaultProps = {\n  autocompleteWithLabel: false,\n  position: Menu.Positions.BELOW,\n  sameWidth: true,\n  offset: 0,\n  fullWidth: true,\n  defaultValue: '',\n  dataLabel: 'primaryText',\n  filter: Autocomplete.fuzzyFilter,\n  findInlineSuggestion: Autocomplete.findIgnoreCase,\n  autoComplete: 'off',\n  repositionOnScroll: true,\n  repositionOnResize: true,\n  showUnfilteredData: false,\n  inlineSuggestionPadding: 6\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._close = function (e) {\n    if (_this2.props.onBlur) {\n      _this2.props.onBlur(e);\n    }\n\n    _this2.setState({ visible: false });\n  };\n\n  this._handleChange = function (value, event) {\n    var _props2 = _this2.props,\n        onChange = _props2.onChange,\n        filter = _props2.filter,\n        findInlineSuggestion = _props2.findInlineSuggestion,\n        data = _props2.data,\n        dataLabel = _props2.dataLabel,\n        inline = _props2.inline,\n        showUnfilteredData = _props2.showUnfilteredData;\n\n\n    if (onChange) {\n      onChange(value, event);\n    }\n\n    if (inline) {\n      // If findInlineSuggestion does not exist, assume that `onChange` will handle it.\n      return findInlineSuggestion ? _this2._findInlineSuggestions(value) : null;\n    }\n\n    var visible = _this2.state.visible;\n\n    var hasValidValue = value || showUnfilteredData;\n\n    var matches = hasValidValue || !filter ? data : [];\n    if (value && filter) {\n      matches = filter(data, value, dataLabel);\n    }\n\n    if (filter) {\n      visible = !!matches.length;\n    }\n\n    return _this2.setState({ matches: matches, visible: visible, value: value });\n  };\n\n  this._handleFocus = function (e) {\n    if (_this2.props.onFocus) {\n      _this2.props.onFocus(e);\n    }\n\n    var value = e.target.value;\n\n    if (_this2.props.inline && value) {\n      if (_this2.props.findInlineSuggestion) {\n        _this2._findInlineSuggestions(value);\n      }\n\n      return;\n    }\n\n    var hasValidValue = !!value || _this2.props.showUnfilteredData;\n\n    _this2.setState({\n      matchIndex: -1,\n      visible: !_this2.state.manualFocus && hasValidValue && !!_this2.state.matches.length,\n      manualFocus: false,\n      focus: true\n    });\n  };\n\n  this._handleBlur = function (e) {\n    if (_this2.props.inline || !_this2.state.matches.length) {\n      if (_this2.props.onBlur) {\n        _this2.props.onBlur(e);\n      }\n    }\n\n    _this2.setState({ focus: false });\n  };\n\n  this._handleInlineAutocomplete = function () {\n    var _state3 = _this2.state,\n        suggestionIndex = _state3.suggestionIndex,\n        matches = _state3.matches;\n\n    if (suggestionIndex === -1) {\n      return;\n    }\n\n    var _props3 = _this2.props,\n        data = _props3.data,\n        dataLabel = _props3.dataLabel,\n        dataValue = _props3.dataValue,\n        label = _props3.autocompleteWithLabel,\n        onAutocomplete = _props3.onAutocomplete;\n\n\n    var value = data[suggestionIndex];\n    if (onAutocomplete) {\n      var v = value;\n      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n        if (!label) {\n          v = value[dataValue];\n        } else {\n          v = value[dataLabel];\n        }\n      }\n\n      onAutocomplete(v, suggestionIndex, matches);\n    }\n\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n      value = value[dataLabel];\n    }\n\n    _this2.setState({\n      value: value,\n      suggestion: '',\n      suggestionIndex: -1,\n      tabbed: true\n    });\n  };\n\n  this._handleTextFieldKeyDown = function (e) {\n    var _props4 = _this2.props,\n        inline = _props4.inline,\n        onKeyDown = _props4.onKeyDown;\n    var suggestionIndex = _this2.state.suggestionIndex;\n\n\n    var key = e.which || e.keyCode;\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    if (inline && key === TAB && suggestionIndex !== -1) {\n      // Autocomplete the text field\n      e.preventDefault();\n      _this2._handleInlineAutocomplete();\n    }\n  };\n\n  this._handleMenuKeyDown = function (e) {\n    var key = e.which || e.keyCode;\n    if (key === TAB) {\n      if (_this2.props.onBlur) {\n        _this2.props.onBlur(e);\n      }\n\n      _this2.setState({ visible: false });\n    } else if (key === UP || key === DOWN) {\n      _this2._focusSuggestion(key === UP, e);\n    }\n  };\n\n  this._handleClick = function (e) {\n    var target = e.target;\n    while (_this2._menu && _this2._menu.contains(target)) {\n      if (target.classList.contains('md-list-item')) {\n        var items = target.parentNode.querySelectorAll('.md-list-item');\n        items = Array.prototype.slice.call(items);\n\n        return _this2._handleItemClick(items.indexOf(target));\n      }\n\n      target = target.parentNode;\n    }\n\n    return null;\n  };\n\n  this._handleItemClick = function (index) {\n    if (index === -1) {\n      return;\n    }\n\n    var matches = _this2.state.matches;\n    var _props5 = _this2.props,\n        data = _props5.data,\n        dataLabel = _props5.dataLabel,\n        dataValue = _props5.dataValue,\n        filter = _props5.filter,\n        onAutocomplete = _props5.onAutocomplete,\n        clearOnAutocomplete = _props5.clearOnAutocomplete,\n        focusInputOnAutocomplete = _props5.focusInputOnAutocomplete,\n        label = _props5.autocompleteWithLabel;\n\n\n    var value = matches.filter(function (m) {\n      return !React.isValidElement(m);\n    })[index];\n    if (onAutocomplete) {\n      var v = value;\n      if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object') {\n        if (!label) {\n          v = value[dataValue];\n        } else {\n          v = value[dataLabel];\n        }\n      }\n\n      onAutocomplete(v, index, matches);\n    }\n\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n      value = value[dataLabel];\n    }\n\n    value = clearOnAutocomplete ? '' : value;\n    var callback = void 0;\n    if (focusInputOnAutocomplete) {\n      callback = function callback() {\n        _this2._field.focus();\n      };\n    }\n\n    _this2.setState({\n      visible: false,\n      manualFocus: focusInputOnAutocomplete,\n      matches: filter ? filter(data, value, dataLabel) : matches,\n      value: value\n    }, callback);\n  };\n\n  this._focusSuggestion = function (negative, e) {\n    e.preventDefault();\n    var _state4 = _this2.state,\n        matchIndex = _state4.matchIndex,\n        matches = _state4.matches;\n\n    var l = matches.length;\n\n    var index = void 0;\n    if (negative && matchIndex === -1 || !negative && matchIndex >= l) {\n      return;\n    } else if (negative) {\n      index = matchIndex - 1;\n      if (index === -1) {\n        _this2._field.focus();\n      }\n    } else {\n      index = Math.min(l, matchIndex + 1);\n    }\n\n    if (index !== -1 && index !== matchIndex) {\n      var item = _this2._menu.querySelectorAll('.md-list-tile')[index];\n      if (item) {\n        item.focus();\n      }\n    }\n\n    _this2.setState({ matchIndex: index });\n  };\n\n  this._findInlineSuggestions = function (value) {\n    var _props6 = _this2.props,\n        data = _props6.data,\n        dataLabel = _props6.dataLabel,\n        findInlineSuggestion = _props6.findInlineSuggestion,\n        inlineSuggestionPadding = _props6.inlineSuggestionPadding;\n\n\n    var suggestion = findInlineSuggestion(data, value, dataLabel);\n    if ((typeof suggestion === 'undefined' ? 'undefined' : _typeof(suggestion)) === 'object') {\n      throw new Error('`findInlineSuggestion` should return a string or a number, but got an object.', suggestion);\n    }\n\n    var suggestionStyle = _this2.state.suggestionStyle;\n\n    var suggestionIndex = -1;\n    if (suggestion) {\n      // Find index of suggestion\n      data.some(function (datum, i) {\n        var d = (typeof dataum === 'undefined' ? 'undefined' : _typeof(dataum)) === 'object' ? datum[dataLabel] : datum;\n        if (d === suggestion) {\n          suggestionIndex = i;\n        }\n\n        return suggestionIndex !== -1;\n      });\n\n      // Strip already used letters\n      suggestion = suggestion.toString().substring(value.length, suggestion.length);\n\n      // Position the inline suggestion next to the text\n      var width = getTextWidth(value, _this2._field);\n      if (width !== null) {\n        width += inlineSuggestionPadding;\n      }\n\n      if (width !== null && (!suggestionStyle || suggestionStyle.left !== width)) {\n        suggestionStyle = { left: width };\n      }\n    }\n\n    _this2.setState({\n      value: value,\n      suggestion: suggestion,\n      suggestionIndex: suggestionIndex,\n      suggestionStyle: suggestionStyle,\n      tabbed: false,\n      focus: true\n    });\n  };\n\n  this._mapToListItem = function (match, i) {\n    if (React.isValidElement(match)) {\n      return match;\n    }\n\n    var _props7 = _this2.props,\n        dataLabel = _props7.dataLabel,\n        dataValue = _props7.dataValue,\n        deleteKeys = _props7.deleteKeys,\n        total = _props7.total,\n        offset = _props7.offset,\n        data = _props7.data;\n\n    var props = void 0;\n    switch (typeof match === 'undefined' ? 'undefined' : _typeof(match)) {\n      case 'string':\n      case 'number':\n        props = {\n          key: match,\n          primaryText: match\n        };\n        break;\n      default:\n        if (deleteKeys) {\n          props = omit(match, typeof deleteKeys === 'string' ? [deleteKeys] : deleteKeys);\n        } else {\n          props = match;\n        }\n\n        props = _extends({}, props, {\n          key: match.key || dataValue && match[dataValue] || match[dataLabel],\n          primaryText: match[dataLabel]\n        });\n    }\n\n    if (typeof total !== 'undefined' && data.length < total) {\n      props['aria-setsize'] = total;\n      props['aria-posinset'] = i + 1 + offset;\n    }\n\n    // Allows focus, but does not let tab focus. This is so up and down keys work.\n    return React.createElement(ListItem, _extends({ tabIndex: -1 }, props));\n  };\n\n  this._toggleMenu = function (e) {\n    if (_this2.props.onMouseDown) {\n      _this2.props.onMouseDown(e);\n    }\n\n    if (!_this2.props.inline && _this2.state.matches.length && getField(_this2.props, _this2.state, 'value')) {\n      _this2.setState({ visible: !_this2.state.visible });\n    }\n  };\n\n  this._handleTouchStart = function (e) {\n    var target = e.target;\n    var suggestion = _this2.state.suggestion;\n\n    if (target.classList.contains('md-autocomplete-suggestion') && suggestion) {\n      _this2._handleInlineAutocomplete();\n    }\n  };\n\n  this._setField = function (field) {\n    if (field) {\n      _this2._field = field.getField();\n    }\n  };\n\n  this._setMenu = function (menu) {\n    _this2._menu = findDOMNode(menu);\n  };\n};\n\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}