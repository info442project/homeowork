{"ast":null,"code":"/** @module utils/DateUtils/formatTime */\n\n/**\n * Formats a date as a time string using the DateTimeFormat function and locales.\n *\n * @param {function} DateTimeFormat the DateTimeFormat function to use.\n * @param {string|string[]} locales the locales to use.\n * @param {Boolean} showSeconds boolean if seconds should be formatted\n * @param {Date} time the time to format into a string.\n * @return a string of the formatted time.\n */\nexport default function formatTime(DateTimeFormat, locales, showSeconds, time) {\n  var format = void 0;\n\n  if (showSeconds === true) {\n    format = {\n      hour: 'numeric',\n      minute: '2-digit',\n      second: '2-digit'\n    };\n  } else {\n    format = {\n      hour: 'numeric',\n      minute: '2-digit'\n    };\n  }\n\n  return new DateTimeFormat(locales, format).format(time);\n}","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/utils/DateUtils/formatTime.js"],"names":["formatTime","DateTimeFormat","locales","showSeconds","time","format","hour","minute","second"],"mappings":"AAAA;;AAEA;;;;;;;;;AASA,eAAe,SAASA,UAAT,CAAoBC,cAApB,EAAoCC,OAApC,EAA6CC,WAA7C,EAA0DC,IAA1D,EAAgE;AAC7E,MAAIC,MAAM,GAAG,KAAK,CAAlB;;AACA,MAAIF,WAAW,KAAK,IAApB,EAA0B;AACxBE,IAAAA,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,MAAM,EAAE,SAA3B;AAAsCC,MAAAA,MAAM,EAAE;AAA9C,KAAT;AACD,GAFD,MAEO;AACLH,IAAAA,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAAT;AACD;;AAED,SAAO,IAAIN,cAAJ,CAAmBC,OAAnB,EAA4BG,MAA5B,EAAoCA,MAApC,CAA2CD,IAA3C,CAAP;AACD","sourcesContent":["/** @module utils/DateUtils/formatTime */\n\n/**\n * Formats a date as a time string using the DateTimeFormat function and locales.\n *\n * @param {function} DateTimeFormat the DateTimeFormat function to use.\n * @param {string|string[]} locales the locales to use.\n * @param {Boolean} showSeconds boolean if seconds should be formatted\n * @param {Date} time the time to format into a string.\n * @return a string of the formatted time.\n */\nexport default function formatTime(DateTimeFormat, locales, showSeconds, time) {\n  var format = void 0;\n  if (showSeconds === true) {\n    format = { hour: 'numeric', minute: '2-digit', second: '2-digit' };\n  } else {\n    format = { hour: 'numeric', minute: '2-digit' };\n  }\n\n  return new DateTimeFormat(locales, format).format(time);\n}"]},"metadata":{},"sourceType":"module"}