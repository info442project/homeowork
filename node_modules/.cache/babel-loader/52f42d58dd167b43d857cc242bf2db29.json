{"ast":null,"code":"/** @module utils/NumberUtils/minMaxLoop */\n\n/**\n * Keeps a number within the min and max values. When the number becomes less\n * than the min, it will loop around and be the max value. When the number is\n * greater than the max, it will loop around and be the min value.\n *\n * @param {Number} current - the current number\n * @param {Number} min - the minimum number allowed\n * @param {Number} max - the maximum number allowed\n * @param {Boolean} increment - boolean if the value should be incremented or decremented by\n *    1.\n * @return {Number} the next number\n */\nexport default function minMaxLoop(current, min, max) {\n  var increment = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var next = current + (increment ? 1 : -1);\n\n  if (max < next) {\n    next = min;\n  } else if (next < min) {\n    next = max;\n  }\n\n  return next;\n}","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/utils/NumberUtils/minMaxLoop.js"],"names":["minMaxLoop","current","min","max","increment","arguments","length","undefined","next"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;AAYA,eAAe,SAASA,UAAT,CAAoBC,OAApB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuC;AACpD,MAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAApF;AAEA,MAAIG,IAAI,GAAGP,OAAO,IAAIG,SAAS,GAAG,CAAH,GAAO,CAAC,CAArB,CAAlB;;AACA,MAAID,GAAG,GAAGK,IAAV,EAAgB;AACdA,IAAAA,IAAI,GAAGN,GAAP;AACD,GAFD,MAEO,IAAIM,IAAI,GAAGN,GAAX,EAAgB;AACrBM,IAAAA,IAAI,GAAGL,GAAP;AACD;;AAED,SAAOK,IAAP;AACD","sourcesContent":["/** @module utils/NumberUtils/minMaxLoop */\n\n/**\n * Keeps a number within the min and max values. When the number becomes less\n * than the min, it will loop around and be the max value. When the number is\n * greater than the max, it will loop around and be the min value.\n *\n * @param {Number} current - the current number\n * @param {Number} min - the minimum number allowed\n * @param {Number} max - the maximum number allowed\n * @param {Boolean} increment - boolean if the value should be incremented or decremented by\n *    1.\n * @return {Number} the next number\n */\nexport default function minMaxLoop(current, min, max) {\n  var increment = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  var next = current + (increment ? 1 : -1);\n  if (max < next) {\n    next = min;\n  } else if (next < min) {\n    next = max;\n  }\n\n  return next;\n}"]},"metadata":{},"sourceType":"module"}