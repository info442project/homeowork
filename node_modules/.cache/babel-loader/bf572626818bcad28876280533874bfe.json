{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport { ENTER, ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport themeColors from '../utils/themeColors';\nimport viewport from '../utils/Positioning/viewport';\nimport controlled from '../utils/PropTypes/controlled';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Layover from '../Helpers/Layover';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport TextField from '../TextFields/TextField';\nimport TableColumn from './TableColumn';\nimport EditDialog from './EditDialog';\nimport findTable from './findTable';\nimport findFixedTo from './findFixedTo';\n/**\n * The `EditDialogColumn` is used when there should be used when a table column's value\n * can be changed. It can either be displayed as a dialog or inline.\n *\n * All props that are not documented but provided will be passed on to the `TextField`\n * component.\n */\n\nvar EditDialogColumn = function (_PureComponent) {\n  _inherits(EditDialogColumn, _PureComponent);\n\n  function EditDialogColumn(props) {\n    _classCallCheck(this, EditDialogColumn);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.state = {\n      visible: props.defaultVisible,\n      value: props.defaultValue,\n      cancelValue: props.defaultValue,\n      actions: _this._makeActions(props),\n      cellIndex: undefined\n    };\n    return _this;\n  }\n\n  EditDialogColumn.prototype.componentDidMount = function componentDidMount() {\n    this._column = findDOMNode(this);\n    this._table = findTable(this._column);\n    this._fixedTo = findFixedTo(this._table); // If a developer creates their own component to wrap the EditDialogColumn, the cellIndex prop\n    // might not be defined if they don't pass ...props\n\n    var cellIndex = this.props.cellIndex;\n\n    if (!cellIndex && cellIndex !== 0) {\n      var columns = [].slice.call(this._column.parentNode.querySelectorAll('th,td'));\n      this.setState({\n        cellIndex: columns.indexOf(this._column)\n      }); // eslint-disable-line react/no-did-mount-set-state\n    }\n  };\n\n  EditDialogColumn.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        okLabel = _props.okLabel,\n        okPrimary = _props.okPrimary,\n        okSecondary = _props.okSecondary,\n        okProps = _props.okProps,\n        cancelLabel = _props.cancelLabel,\n        cancelPrimary = _props.cancelPrimary,\n        cancelSecondary = _props.cancelSecondary,\n        cancelProps = _props.cancelProps;\n\n    if (okLabel !== nextProps.okLabel || okPrimary !== nextProps.okPrimary || okSecondary !== nextProps.okSecondary || cancelLabel !== nextProps.cancelLabel || cancelPrimary !== nextProps.cancelPrimary || cancelSecondary !== nextProps.cancelSecondary || okProps !== nextProps.okProps || cancelProps !== nextProps.cancelProps) {\n      this.setState({\n        actions: this._makeActions(nextProps)\n      });\n    }\n  };\n\n  EditDialogColumn.prototype.render = function render() {\n    var rowId = this.context.rowId;\n\n    var _props2 = this.props,\n        style = _props2.style,\n        className = _props2.className,\n        layoverStyle = _props2.layoverStyle,\n        layoverClassName = _props2.layoverClassName,\n        dialogStyle = _props2.dialogStyle,\n        dialogClassName = _props2.dialogClassName,\n        dialogContentStyle = _props2.dialogContentStyle,\n        dialogContentClassName = _props2.dialogContentClassName,\n        dialogZDepth = _props2.dialogZDepth,\n        textFieldStyle = _props2.textFieldStyle,\n        textFieldClassName = _props2.textFieldClassName,\n        inputClassName = _props2.inputClassName,\n        large = _props2.large,\n        title = _props2.title,\n        inline = _props2.inline,\n        inlineIcon = _props2.inlineIcon,\n        maxLength = _props2.maxLength,\n        label = _props2.label,\n        placeholder = _props2.placeholder,\n        header = _props2.header,\n        anchor = _props2.anchor,\n        belowAnchor = _props2.belowAnchor,\n        fixedTo = _props2.fixedTo,\n        animationPosition = _props2.animationPosition,\n        xThreshold = _props2.xThreshold,\n        yThreshold = _props2.yThreshold,\n        centered = _props2.centered,\n        sameWidth = _props2.sameWidth,\n        repositionOnScroll = _props2.repositionOnScroll,\n        repositionOnResize = _props2.repositionOnResize,\n        transitionName = _props2.transitionName,\n        transitionEnterTimeout = _props2.transitionEnterTimeout,\n        transitionLeaveTimeout = _props2.transitionLeaveTimeout,\n        tooltipLabel = _props2.tooltipLabel,\n        tooltipDelay = _props2.tooltipDelay,\n        tooltipPosition = _props2.tooltipPosition,\n        onClick = _props2.onClick,\n        onMouseDown = _props2.onMouseDown,\n        onMouseUp = _props2.onMouseUp,\n        onTouchStart = _props2.onTouchStart,\n        onTouchEnd = _props2.onTouchEnd,\n        onMouseEnter = _props2.onMouseEnter,\n        onMouseOver = _props2.onMouseOver,\n        onMouseLeave = _props2.onMouseLeave,\n        onTouchMove = _props2.onTouchMove,\n        simplifiedDialog = _props2.simplifiedDialog,\n        minLeft = _props2.minLeft,\n        minRight = _props2.minRight,\n        minBottom = _props2.minBottom,\n        noIcon = _props2.noIcon,\n        inlineIconChildren = _props2.inlineIconChildren,\n        inlineIconClassName = _props2.inlineIconClassName,\n        propId = _props2.id,\n        propDialogId = _props2.dialogId,\n        propCellIndex = _props2.cellIndex,\n        onOkClick = _props2.onOkClick,\n        okLabel = _props2.okLabel,\n        okPrimary = _props2.okPrimary,\n        okSecondary = _props2.okSecondary,\n        okProps = _props2.okProps,\n        onCancelClick = _props2.onCancelClick,\n        cancelLabel = _props2.cancelLabel,\n        cancelPrimary = _props2.cancelPrimary,\n        cancelSecondary = _props2.cancelSecondary,\n        cancelProps = _props2.cancelProps,\n        okOnOutsideClick = _props2.okOnOutsideClick,\n        defaultValue = _props2.defaultValue,\n        adjusted = _props2.adjusted,\n        scrollIntoView = _props2.scrollIntoView,\n        scrollIntoViewPadding = _props2.scrollIntoViewPadding,\n        defaultVisible = _props2.defaultVisible,\n        visibleOnFocus = _props2.visibleOnFocus,\n        scrollThreshold = _props2.scrollThreshold,\n        enforceMinWidth = _props2.enforceMinWidth,\n        transitionDuration = _props2.transitionDuration,\n        props = _objectWithoutProperties(_props2, ['style', 'className', 'layoverStyle', 'layoverClassName', 'dialogStyle', 'dialogClassName', 'dialogContentStyle', 'dialogContentClassName', 'dialogZDepth', 'textFieldStyle', 'textFieldClassName', 'inputClassName', 'large', 'title', 'inline', 'inlineIcon', 'maxLength', 'label', 'placeholder', 'header', 'anchor', 'belowAnchor', 'fixedTo', 'animationPosition', 'xThreshold', 'yThreshold', 'centered', 'sameWidth', 'repositionOnScroll', 'repositionOnResize', 'transitionName', 'transitionEnterTimeout', 'transitionLeaveTimeout', 'tooltipLabel', 'tooltipDelay', 'tooltipPosition', 'onClick', 'onMouseDown', 'onMouseUp', 'onTouchStart', 'onTouchEnd', 'onMouseEnter', 'onMouseOver', 'onMouseLeave', 'onTouchMove', 'simplifiedDialog', 'minLeft', 'minRight', 'minBottom', 'noIcon', 'inlineIconChildren', 'inlineIconClassName', 'id', 'dialogId', 'cellIndex', 'onOkClick', 'okLabel', 'okPrimary', 'okSecondary', 'okProps', 'onCancelClick', 'cancelLabel', 'cancelPrimary', 'cancelSecondary', 'cancelProps', 'okOnOutsideClick', 'defaultValue', 'adjusted', 'scrollIntoView', 'scrollIntoViewPadding', 'defaultVisible', 'visibleOnFocus', 'scrollThreshold', 'enforceMinWidth', 'transitionDuration']);\n\n    var _state = this.state,\n        visible = _state.visible,\n        actions = _state.actions;\n    var value = getField(this.props, this.state, 'value');\n    var cellIndex = getField(this.props, this.state, 'cellIndex');\n    var _props3 = this.props,\n        id = _props3.id,\n        dialogId = _props3.dialogId;\n\n    if (!dialogId) {\n      dialogId = (id || rowId + '-' + cellIndex) + '-edit-dialog';\n    }\n\n    if (!id) {\n      id = dialogId + '-field';\n    }\n\n    var inlineEditIcon = void 0;\n\n    if (inline && !noIcon) {\n      var icon = getDeprecatedIcon(inlineIconClassName, inlineIconChildren, inlineIcon);\n\n      if (icon) {\n        inlineEditIcon = React.cloneElement(icon, {\n          key: 'edit-icon'\n        });\n      }\n    }\n\n    var numeric = props.type === 'number';\n    var field = React.createElement(TextField, _extends({}, props, {\n      ref: this._setField,\n      style: textFieldStyle,\n      className: cn({\n        'md-edit-dialog__blocked-field': inline\n      }, textFieldClassName),\n      inputClassName: cn({\n        'md-edit-dialog__header': header && inline,\n        'md-text-right': numeric\n      }, themeColors({\n        hint: header && inline\n      }), inputClassName),\n      id: id,\n      label: label,\n      placeholder: placeholder,\n      value: value,\n      onFocus: this._handleFocus,\n      onChange: this._handleChange,\n      onKeyDown: this._handleKeyDown,\n      block: inline,\n      maxLength: visible ? maxLength : null,\n      rightIcon: inlineEditIcon\n    }));\n    var children = void 0;\n\n    if (inline) {\n      children = field;\n    } else {\n      var dialogLabel = value || value === 0 ? value : placeholder || label;\n      children = React.createElement(EditDialog, {\n        style: layoverStyle,\n        className: layoverClassName,\n        dialogStyle: dialogStyle,\n        dialogClassName: dialogClassName,\n        dialogContentStyle: dialogContentStyle,\n        dialogContentClassName: dialogContentClassName,\n        id: dialogId,\n        textFieldId: id,\n        visible: visible,\n        onOpen: this._handleOpen,\n        onClose: this._handleClose,\n        label: dialogLabel,\n        actions: actions,\n        large: large,\n        title: title,\n        header: header,\n        placeholder: dialogLabel === placeholder || dialogLabel === label,\n        simplified: simplifiedDialog,\n        anchor: anchor,\n        belowAnchor: belowAnchor,\n        animationPosition: animationPosition,\n        xThreshold: xThreshold,\n        yThreshold: yThreshold,\n        centered: centered,\n        sameWidth: sameWidth,\n        minLeft: minLeft,\n        minRight: minRight,\n        minBottom: minBottom,\n        fixedTo: typeof fixedTo !== 'undefined' ? fixedTo : this._fixedTo,\n        dialogZDepth: dialogZDepth,\n        repositionOnScroll: repositionOnScroll,\n        repositionOnResize: repositionOnResize,\n        transitionName: transitionName,\n        transitionEnterTimeout: transitionEnterTimeout,\n        transitionLeaveTimeout: transitionLeaveTimeout\n      }, field);\n    }\n\n    return React.createElement(TableColumn, {\n      style: style,\n      numeric: numeric,\n      className: cn('md-edit-dialog-column', className),\n      header: header,\n      adjusted: false,\n      tooltipLabel: tooltipLabel,\n      tooltipDelay: tooltipDelay,\n      tooltipPosition: tooltipPosition,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      onMouseUp: onMouseUp,\n      onTouchStart: onTouchStart,\n      onTouchMove: onTouchMove,\n      onMouseEnter: onMouseEnter,\n      onMouseOver: onMouseOver,\n      onMouseLeave: onMouseLeave,\n      onTouchEnd: onTouchEnd\n    }, children);\n  };\n\n  return EditDialogColumn;\n}(PureComponent);\n\nEditDialogColumn.VerticalAnchors = Layover.VerticalAnchors;\nEditDialogColumn.HorizontalAnchors = Layover.HorizontalAnchors;\nEditDialogColumn.Positions = Layover.Positions;\nEditDialogColumn.propTypes = {\n  /**\n   * An optional id to use for the text field in the column. If this is omitted,\n   * the id will be `${dialogId}-field`.\n   *\n   * @see {@link #dialogId}\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to use for the dialog that appears in the column. If this is omitted,\n   * the id will be `${rowId}-${cellIndex}-edit-dialog-field`.\n   */\n  dialogId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The optional style to apply to the edit dialog's column.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The optional className to apply to the edit dialog's column.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the dialog's surrounding `Layover` component.\n   */\n  layoverStyle: PropTypes.object,\n\n  /**\n   * An optional className to the dialog's surrounding `Layover` component.\n   */\n  layoverClassName: PropTypes.string,\n\n  /**\n   * The optional style to apply to the edit dialog.\n   */\n  dialogStyle: PropTypes.object,\n\n  /**\n   * The optional className to apply to the edit dialog.\n   */\n  dialogClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the dialog's content area. This is the area\n   * that holds the text field.\n   */\n  dialogContentStyle: PropTypes.object,\n\n  /**\n   * An optional class name to apply to the dialog's content area. This is the area\n   * that holds the text field.\n   */\n  dialogContentClassName: PropTypes.string,\n\n  /**\n   * The zDepth to apply to the dialog when not inline.\n   *\n   * @see {@link Papers/Paper#zDepth}\n   */\n  dialogZDepth: PropTypes.number.isRequired,\n\n  /**\n   * An optional style to apply to the text field.\n   */\n  textFieldStyle: PropTypes.object,\n\n  /**\n   * An optional class name to apply to the text field.\n   */\n  textFieldClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the text field's input.\n   */\n  inputStyle: PropTypes.object,\n\n  /**\n   * An optional class name to apply to the text field's input.\n   */\n  inputClassName: PropTypes.string,\n\n  /**\n   * Boolean if the edit dialog is currently disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Boolean if the text field should be editable inline instead of in a dialog.\n   *\n   * @see {@link #inlineIcon}\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * An optional icon to set for the inline edit dialog column. Setting this prop to null\n   * will not render an icon.\n   */\n  inlineIcon: PropTypes.element,\n\n  /**\n   * The default value to use for the text field.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * A value to use for the edit dialog text field. This will make the component controlled\n   * so you will need to provide an `onChange` function.\n   */\n  value: controlled(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'onChange', 'defaultValue'),\n\n  /**\n   * An optional function to call when the text field's value has changed. This is required\n   * if the `value` prop has been defined.\n   *\n   * @see {@link TextFields/TextField#onChange}\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * An optional function to call when the text field gains focus.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * An optional function to call when the keydown event is triggered on the text field.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * An optional label for the text field. When displaying an `inline` edit dialog column,\n   * the `placeholder` prop should be used instead. This is because the text field changes\n   * to the `block` type when `inline`.\n   *\n   * @see {@link #inline}\n   * @see {@link #placeholder}\n   * @see {@link TextFields/TextField#block}\n   */\n  label: PropTypes.node,\n\n  /**\n   * An optional placeholder for the text field.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Boolean if the edit dialog should become a large dialog. When the dialog is large,\n   * the `title` prop is required.\n   *\n   * A large dialog has a Title followed by the text field, and then a cancel and ok action\n   * buttons below.\n   */\n  large: PropTypes.bool,\n\n  /**\n   * The title to use for the large edit dialog. This prop is required if the `large` prop\n   * is enabled.\n   */\n  title: PropTypes.node,\n\n  /**\n   * An optional `maxLength` to apply to the text field.\n   *\n   * @see {@link TextFields/TextField#maxLength}\n   */\n  maxLength: PropTypes.number,\n\n  /**\n   * An optional function to call when the \"Ok\" button has been clicked, the user presses enter\n   * on * the text field or when the `okOnOutsideClick` prop has been enabled and the user clicks\n   * somewhere on the page.\n   *\n   * The callback will include the current value and the click or keypress event.\n   * ```js\n   * onOkClick(value, event)\n   * ```\n   *\n   * @see {@link #large}\n   */\n  onOkClick: PropTypes.func,\n\n  /**\n   * The label to use for the \"Ok\" button in large dialogs.\n   *\n   * @see {@link #large}\n   */\n  okLabel: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the \"Ok\" button in large dialogs should be styled with the primary color.\n   * To get a `default` styled button, set both `okPrimary` and `okSecondary` (or omit `okSecondary`)\n   * to `false`.\n   *\n   * @see {@link #large}\n   * @see {@link #okSecondary}\n   */\n  okPrimary: PropTypes.bool,\n\n  /**\n   * Boolean if the \"Ok\" button in large dialogs should be styled with the secondary color.\n   *\n   * @see {@link #large}\n   * @see {@link #okPrimary}\n   */\n  okSecondary: PropTypes.bool,\n\n  /**\n   * Any additional props to apply to the \"Ok\" button. This will override any of the other\n   * button props.\n   *\n   * @see {@link #okLabel}\n   * @see {@link #okPrimary}\n   * @see {@link #okSecondary}\n   */\n  okProps: PropTypes.object,\n\n  /**\n   * An optional function to call when the \"Cancel\" button has been clicked in large edit dialogs.\n   * The callback will include the text field's value before any edits occurred and the click event.\n   *\n   * ```js\n   * onCancelClick(previousValue, event)\n   * ```\n   *\n   * @see {@link #large}\n   */\n  onCancelClick: PropTypes.func,\n\n  /**\n   * The label to give to the \"Cancel\" button in large edit dialogs.\n   *\n   * @see {@link #large}\n   */\n  cancelLabel: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the \"Cancel\" button in large dialogs should be styled with the primary color.\n   * To get a `default` styled button, set both `cancelPrimary` and `cancelSecondary` (or\n   * omit `cancelSecondary`) to `false`.\n   *\n   * @see {@link #large}\n   * @see {@link #cancelSecondary}\n   */\n  cancelPrimary: PropTypes.bool,\n\n  /**\n   * Boolean if the \"Cancel\" button in large dialogs should be styled with the secondary color.\n   *\n   * @see {@link #large}\n   * @see {@link #cancelPrimary}\n   */\n  cancelSecondary: PropTypes.bool,\n\n  /**\n   * Any additional props to apply to the \"Cancel\" button. This will override any of the other\n   * button props.\n   *\n   * @see {@link #cancelLabel}\n   * @see {@link #cancelPrimary}\n   * @see {@link #cancelSecondary}\n   */\n  cancelProps: PropTypes.object,\n\n  /**\n   * Boolean if the action for clicking somewhere on on the page while the dialog is open\n   * saves the changes or cancels to the previous value before opening the dialog.\n   *\n   * @see {@link #onOkClick}\n   * @see {@link #onCancelClick}\n   */\n  okOnOutsideClick: PropTypes.bool,\n\n  /**\n   * An optional function to call when a user clicks out of the text field.\n   */\n  onOutsideClick: PropTypes.func,\n\n  /**\n   * Boolean if the edit dialog should be closed if the user clicks somewhere else on the page\n   * while the dialog is open.\n   */\n  closeOnOutsideClick: PropTypes.bool,\n\n  /**\n   * Boolean if the Edit Dialog should be visible by default. This only applies when the `inline` prop\n   * is not enabled.\n   */\n  defaultVisible: PropTypes.bool,\n\n  /**\n   * Boolean if the edit dialog should automatically open when the text field is focused for non-inline\n   * dialogs. This is enabled by default for backwards compatibility.\n   */\n  visibleOnFocus: PropTypes.bool,\n\n  /**\n   * The type for the text field in the edit dialog.\n   *\n   * @see {@link TextFields/TextField#type}\n   */\n  type: PropTypes.string,\n\n  /**\n   * This is how the dialog gets \"anchored\" to the table column.\n   *\n   * @see {@link Helpers/Layover#anchor}\n   */\n  anchor: anchorShape,\n\n  /**\n   * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n   *\n   * @see {@link Helpers/Layover#belowAnchor}\n   */\n  belowAnchor: anchorShape,\n\n  /**\n   * This is the animation position to use for the dialog.\n   *\n   * @see {@link Helpers/Layover#animationPosition}\n   */\n  animationPosition: positionShape,\n\n  /**\n   * This is how the dialog should be fixed within the table. When this is omitted, it will\n   * automatically use the responsive table as the fixture so that the dialog will close/adjust itself\n   * to the scrolling of the table.\n   *\n   * @see {@link Helpers/Layover#fixedTo}\n   */\n  fixedTo: fixedToShape,\n\n  /**\n   * @see {@link Helpers/Layover#xThreshold}\n   */\n  xThreshold: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#yThreshold}\n   */\n  yThreshold: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#centered}\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#sameWidth}\n   */\n  sameWidth: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#transitionName}\n   */\n  transitionName: PropTypes.string,\n\n  /**\n   * @see {@link Helpers/Layover#transitionEnterTimeout}\n   */\n  transitionEnterTimeout: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#transitionLeaveTimeout}\n   */\n  transitionLeaveTimeout: PropTypes.number,\n\n  /**\n   * The optional tooltip to render on hover.\n   */\n  tooltipLabel: PropTypes.node,\n\n  /**\n   * An optional delay to apply to the tooltip before it appears.\n   */\n  tooltipDelay: PropTypes.number,\n\n  /**\n   * The position of the tooltip.\n   */\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the `fixedTo` element scrolls.\n   *\n   * @see {@link Helpers/Layover#repositionOnScroll}\n   */\n  repositionOnScroll: PropTypes.bool,\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the window resizes.\n   *\n   * @see {@link Helpers/Layover#repositionOnResize}\n   */\n  repositionOnResize: PropTypes.bool,\n\n  /**\n   * Boolean if the dialog logic should be simplified without any viewport logic and position\n   * based on the relative position of the menu. This will most like require some additional\n   * styles applied to the dialog.\n   *\n   * @see {@link Helpers/Layover#simplified}\n   */\n  simplifiedDialog: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#minLeft}\n   */\n  minLeft: Layover.propTypes.minLeft,\n\n  /**\n   * @see {@link Helpers/Layover#minRight}\n   */\n  minRight: Layover.propTypes.minLeft,\n\n  /**\n   * @see {@link Helpers/Layover#minBottom}\n   */\n  minBottom: Layover.propTypes.minBottom,\n\n  /**\n   * Boolean if the edit dialog should attempt to scroll into view if the full\n   * dialog can not be displayed in the viewport when it was toggled open.\n   *\n   * @see {@link #scrollIntoViewPadding}\n   */\n  scrollIntoView: PropTypes.bool,\n\n  /**\n   * The amount of padding that should be applied when the cell is scrolled into view.\n   * This will be applied to the left of the cell.\n   */\n  scrollIntoViewPadding: PropTypes.number,\n\n  /**\n   * An optional function to call when the `click` event is triggered in the column.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mousedown` event is triggered in the column.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseup` event is triggered in the column.\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * An optional function to call when the `touchstart` event is triggered in the column.\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * An optional function to call when the `touchend` event is triggered in the column.\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseenter` event is triggered in the column.\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseover` event is triggered in the column.\n   */\n  onMouseOver: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseleave` event is triggered in the column.\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * An optional function to call when the `touchmove` event is triggered in the column.\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * This is injected by the `TableRow` component.\n   * @access private\n   */\n  header: PropTypes.bool,\n\n  /**\n   * This is injected by the `TableRow` component and used to help generate the unique id for the text\n   * field.\n   *\n   * @access private\n   */\n  cellIndex: PropTypes.number,\n\n  /**\n   * @access private\n   */\n  adjusted: PropTypes.bool,\n  inlineIconChildren: deprecated(PropTypes.node, 'Use the `inlineIcon` prop instead'),\n  inlineIconClassName: deprecated(PropTypes.string, 'Use the `inlineIcon` prop instead'),\n  noIcon: deprecated(PropTypes.bool, 'Set the `inlineIcon` prop to `null` instead'),\n  enforceMinWidth: deprecated(PropTypes.bool, 'The min width will always be enforced based on the `$md-edit-dialog-min-width` Sass variable'),\n  scrollThreshold: deprecated(PropTypes.number, 'Use `xThreshold` and `yThreshold` instead'),\n  transitionDuration: deprecated(PropTypes.number, 'use `transitionEnterTimeout` and `transitionLeaveTimeout` instead')\n};\nEditDialogColumn.defaultProps = {\n  type: 'text',\n  defaultValue: '',\n  okOnOutsideClick: true,\n  inlineIcon: React.createElement(FontIcon, null, 'edit'),\n  okLabel: 'Save',\n  okPrimary: true,\n  cancelLabel: 'Cancel',\n  cancelPrimary: true,\n  animationPosition: EditDialogColumn.Positions.BELOW,\n  dialogZDepth: 1,\n  repositionOnScroll: true,\n  repositionOnResize: false,\n  scrollIntoView: true,\n  scrollIntoViewPadding: 16,\n  minLeft: 0,\n  minRight: 0,\n  minBottom: 0,\n  visibleOnFocus: true,\n  defaultVisible: false\n};\nEditDialogColumn.contextTypes = {\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setField = function (field) {\n    _this2._field = field;\n  };\n\n  this._makeActions = function (props) {\n    var okLabel = props.okLabel,\n        okPrimary = props.okPrimary,\n        okSecondary = props.okSecondary,\n        okProps = props.okProps,\n        cancelLabel = props.cancelLabel,\n        cancelPrimary = props.cancelPrimary,\n        cancelSecondary = props.cancelSecondary,\n        cancelProps = props.cancelProps;\n    return [_extends({\n      key: 'cancel',\n      children: cancelLabel,\n      primary: cancelPrimary && !cancelSecondary,\n      secondary: cancelSecondary\n    }, cancelProps, {\n      onClick: _this2._handleCancel\n    }), _extends({\n      key: 'ok',\n      children: okLabel,\n      primary: okPrimary && !okSecondary,\n      secondary: okSecondary\n    }, okProps, {\n      onClick: _this2._handleOk\n    })];\n  };\n\n  this._handleOpen = function (e) {\n    if (_this2._skipNextOpen) {\n      _this2._skipNextOpen = false;\n    } else if (_this2.props.visibleOnFocus || !e || e.type !== 'focus') {\n      var _props4 = _this2.props,\n          scrollIntoView = _props4.scrollIntoView,\n          scrollIntoViewPadding = _props4.scrollIntoViewPadding;\n\n      if (scrollIntoView) {\n        var vp = viewport(_this2._column);\n\n        if (vp !== true && _this2._table && _this2._column && !_this2.props.inline) {\n          _this2._table.scrollLeft = _this2._column.offsetLeft - scrollIntoViewPadding;\n        }\n      }\n\n      _this2.setState({\n        visible: true,\n        cancelValue: getField(_this2.props, _this2.state, 'value')\n      });\n    }\n  };\n\n  this._handleClose = function (e) {\n    var _props5 = _this2.props,\n        onOutsideClick = _props5.onOutsideClick,\n        okOnOutsideClick = _props5.okOnOutsideClick;\n\n    if (onOutsideClick) {\n      onOutsideClick(e);\n    }\n\n    if (okOnOutsideClick) {\n      _this2._handleOk(e);\n    } else {\n      _this2._handleCancel(e);\n    }\n  };\n\n  this._handleChange = function (value, e) {\n    if (_this2.props.onChange) {\n      _this2.props.onChange(value, e);\n    }\n\n    if (typeof _this2.props.value === 'undefined') {\n      _this2.setState({\n        value: value\n      });\n    }\n  };\n\n  this._handleFocus = function (e) {\n    if (_this2.props.onFocus) {\n      _this2.props.onFocus(e);\n    }\n\n    if (_this2.props.inline) {\n      _this2.setState({\n        cancelValue: e.target.value\n      });\n    }\n  };\n\n  this._handleKeyDown = function (e) {\n    var _props6 = _this2.props,\n        onKeyDown = _props6.onKeyDown,\n        okOnOutsideClick = _props6.okOnOutsideClick,\n        large = _props6.large;\n\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    var key = e.which || e.keyCode;\n\n    if (key === ENTER) {\n      _this2._handleOk(e);\n    } else if (key === ESC) {\n      _this2._handleCancel(e);\n    } else if (key === TAB && !large) {\n      // infinitely opens otherwise...\n      _this2._skipNextOpen = e.shiftKey;\n\n      if (okOnOutsideClick) {\n        _this2._handleOk(e);\n      } else {\n        _this2._handleCancel(e);\n      }\n    }\n  };\n\n  this._handleOk = function (e) {\n    if (_this2.props.onOkClick) {\n      _this2.props.onOkClick(getField(_this2.props, _this2.state, 'value'), e);\n    }\n\n    _this2.setState({\n      visible: false\n    });\n  };\n\n  this._handleCancel = function (e) {\n    var value = _this2.state.cancelValue;\n\n    if (_this2.props.onCancelClick) {\n      _this2.props.onCancelClick(value, e);\n    }\n\n    var state = {\n      visible: false\n    };\n\n    if (typeof _this2.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    _this2.setState(state);\n  };\n};\n\nexport default EditDialogColumn;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/DataTables/EditDialogColumn.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","findDOMNode","cn","deprecated","ENTER","ESC","TAB","getField","themeColors","viewport","controlled","anchorShape","fixedToShape","positionShape","Layover","FontIcon","getDeprecatedIcon","TextField","TableColumn","EditDialog","findTable","findFixedTo","EditDialogColumn","_PureComponent","props","_this","_initialiseProps","state","visible","defaultVisible","defaultValue","cancelValue","actions","_makeActions","cellIndex","undefined","componentDidMount","_column","_table","_fixedTo","columns","slice","parentNode","querySelectorAll","setState","componentWillReceiveProps","nextProps","_props","okLabel","okPrimary","okSecondary","okProps","cancelLabel","cancelPrimary","cancelSecondary","cancelProps","render","rowId","context","_props2","style","className","layoverStyle","layoverClassName","dialogStyle","dialogClassName","dialogContentStyle","dialogContentClassName","dialogZDepth","textFieldStyle","textFieldClassName","inputClassName","large","title","inline","inlineIcon","maxLength","label","placeholder","header","anchor","belowAnchor","fixedTo","animationPosition","xThreshold","yThreshold","centered","sameWidth","repositionOnScroll","repositionOnResize","transitionName","transitionEnterTimeout","transitionLeaveTimeout","tooltipLabel","tooltipDelay","tooltipPosition","onClick","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onMouseEnter","onMouseOver","onMouseLeave","onTouchMove","simplifiedDialog","minLeft","minRight","minBottom","noIcon","inlineIconChildren","inlineIconClassName","propId","id","propDialogId","dialogId","propCellIndex","onOkClick","onCancelClick","okOnOutsideClick","adjusted","scrollIntoView","scrollIntoViewPadding","visibleOnFocus","scrollThreshold","enforceMinWidth","transitionDuration","_state","_props3","inlineEditIcon","icon","cloneElement","numeric","type","field","createElement","ref","_setField","hint","onFocus","_handleFocus","onChange","_handleChange","onKeyDown","_handleKeyDown","block","rightIcon","children","dialogLabel","textFieldId","onOpen","_handleOpen","onClose","_handleClose","simplified","VerticalAnchors","HorizontalAnchors","Positions","propTypes","oneOfType","number","string","object","isRequired","inputStyle","disabled","bool","element","func","node","onOutsideClick","closeOnOutsideClick","oneOf","defaultProps","BELOW","contextTypes","_this2","_field","primary","secondary","_handleCancel","_handleOk","e","_skipNextOpen","_props4","vp","scrollLeft","offsetLeft","_props5","_props6","which","keyCode","shiftKey"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { ENTER, ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport themeColors from '../utils/themeColors';\nimport viewport from '../utils/Positioning/viewport';\nimport controlled from '../utils/PropTypes/controlled';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Layover from '../Helpers/Layover';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport TextField from '../TextFields/TextField';\nimport TableColumn from './TableColumn';\nimport EditDialog from './EditDialog';\nimport findTable from './findTable';\nimport findFixedTo from './findFixedTo';\n\n/**\n * The `EditDialogColumn` is used when there should be used when a table column's value\n * can be changed. It can either be displayed as a dialog or inline.\n *\n * All props that are not documented but provided will be passed on to the `TextField`\n * component.\n */\n\nvar EditDialogColumn = function (_PureComponent) {\n  _inherits(EditDialogColumn, _PureComponent);\n\n  function EditDialogColumn(props) {\n    _classCallCheck(this, EditDialogColumn);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.state = {\n      visible: props.defaultVisible,\n      value: props.defaultValue,\n      cancelValue: props.defaultValue,\n      actions: _this._makeActions(props),\n      cellIndex: undefined\n    };\n    return _this;\n  }\n\n  EditDialogColumn.prototype.componentDidMount = function componentDidMount() {\n    this._column = findDOMNode(this);\n    this._table = findTable(this._column);\n    this._fixedTo = findFixedTo(this._table);\n\n    // If a developer creates their own component to wrap the EditDialogColumn, the cellIndex prop\n    // might not be defined if they don't pass ...props\n    var cellIndex = this.props.cellIndex;\n\n    if (!cellIndex && cellIndex !== 0) {\n      var columns = [].slice.call(this._column.parentNode.querySelectorAll('th,td'));\n      this.setState({ cellIndex: columns.indexOf(this._column) }); // eslint-disable-line react/no-did-mount-set-state\n    }\n  };\n\n  EditDialogColumn.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        okLabel = _props.okLabel,\n        okPrimary = _props.okPrimary,\n        okSecondary = _props.okSecondary,\n        okProps = _props.okProps,\n        cancelLabel = _props.cancelLabel,\n        cancelPrimary = _props.cancelPrimary,\n        cancelSecondary = _props.cancelSecondary,\n        cancelProps = _props.cancelProps;\n\n\n    if (okLabel !== nextProps.okLabel || okPrimary !== nextProps.okPrimary || okSecondary !== nextProps.okSecondary || cancelLabel !== nextProps.cancelLabel || cancelPrimary !== nextProps.cancelPrimary || cancelSecondary !== nextProps.cancelSecondary || okProps !== nextProps.okProps || cancelProps !== nextProps.cancelProps) {\n      this.setState({ actions: this._makeActions(nextProps) });\n    }\n  };\n\n  EditDialogColumn.prototype.render = function render() {\n    var rowId = this.context.rowId;\n\n    var _props2 = this.props,\n        style = _props2.style,\n        className = _props2.className,\n        layoverStyle = _props2.layoverStyle,\n        layoverClassName = _props2.layoverClassName,\n        dialogStyle = _props2.dialogStyle,\n        dialogClassName = _props2.dialogClassName,\n        dialogContentStyle = _props2.dialogContentStyle,\n        dialogContentClassName = _props2.dialogContentClassName,\n        dialogZDepth = _props2.dialogZDepth,\n        textFieldStyle = _props2.textFieldStyle,\n        textFieldClassName = _props2.textFieldClassName,\n        inputClassName = _props2.inputClassName,\n        large = _props2.large,\n        title = _props2.title,\n        inline = _props2.inline,\n        inlineIcon = _props2.inlineIcon,\n        maxLength = _props2.maxLength,\n        label = _props2.label,\n        placeholder = _props2.placeholder,\n        header = _props2.header,\n        anchor = _props2.anchor,\n        belowAnchor = _props2.belowAnchor,\n        fixedTo = _props2.fixedTo,\n        animationPosition = _props2.animationPosition,\n        xThreshold = _props2.xThreshold,\n        yThreshold = _props2.yThreshold,\n        centered = _props2.centered,\n        sameWidth = _props2.sameWidth,\n        repositionOnScroll = _props2.repositionOnScroll,\n        repositionOnResize = _props2.repositionOnResize,\n        transitionName = _props2.transitionName,\n        transitionEnterTimeout = _props2.transitionEnterTimeout,\n        transitionLeaveTimeout = _props2.transitionLeaveTimeout,\n        tooltipLabel = _props2.tooltipLabel,\n        tooltipDelay = _props2.tooltipDelay,\n        tooltipPosition = _props2.tooltipPosition,\n        onClick = _props2.onClick,\n        onMouseDown = _props2.onMouseDown,\n        onMouseUp = _props2.onMouseUp,\n        onTouchStart = _props2.onTouchStart,\n        onTouchEnd = _props2.onTouchEnd,\n        onMouseEnter = _props2.onMouseEnter,\n        onMouseOver = _props2.onMouseOver,\n        onMouseLeave = _props2.onMouseLeave,\n        onTouchMove = _props2.onTouchMove,\n        simplifiedDialog = _props2.simplifiedDialog,\n        minLeft = _props2.minLeft,\n        minRight = _props2.minRight,\n        minBottom = _props2.minBottom,\n        noIcon = _props2.noIcon,\n        inlineIconChildren = _props2.inlineIconChildren,\n        inlineIconClassName = _props2.inlineIconClassName,\n        propId = _props2.id,\n        propDialogId = _props2.dialogId,\n        propCellIndex = _props2.cellIndex,\n        onOkClick = _props2.onOkClick,\n        okLabel = _props2.okLabel,\n        okPrimary = _props2.okPrimary,\n        okSecondary = _props2.okSecondary,\n        okProps = _props2.okProps,\n        onCancelClick = _props2.onCancelClick,\n        cancelLabel = _props2.cancelLabel,\n        cancelPrimary = _props2.cancelPrimary,\n        cancelSecondary = _props2.cancelSecondary,\n        cancelProps = _props2.cancelProps,\n        okOnOutsideClick = _props2.okOnOutsideClick,\n        defaultValue = _props2.defaultValue,\n        adjusted = _props2.adjusted,\n        scrollIntoView = _props2.scrollIntoView,\n        scrollIntoViewPadding = _props2.scrollIntoViewPadding,\n        defaultVisible = _props2.defaultVisible,\n        visibleOnFocus = _props2.visibleOnFocus,\n        scrollThreshold = _props2.scrollThreshold,\n        enforceMinWidth = _props2.enforceMinWidth,\n        transitionDuration = _props2.transitionDuration,\n        props = _objectWithoutProperties(_props2, ['style', 'className', 'layoverStyle', 'layoverClassName', 'dialogStyle', 'dialogClassName', 'dialogContentStyle', 'dialogContentClassName', 'dialogZDepth', 'textFieldStyle', 'textFieldClassName', 'inputClassName', 'large', 'title', 'inline', 'inlineIcon', 'maxLength', 'label', 'placeholder', 'header', 'anchor', 'belowAnchor', 'fixedTo', 'animationPosition', 'xThreshold', 'yThreshold', 'centered', 'sameWidth', 'repositionOnScroll', 'repositionOnResize', 'transitionName', 'transitionEnterTimeout', 'transitionLeaveTimeout', 'tooltipLabel', 'tooltipDelay', 'tooltipPosition', 'onClick', 'onMouseDown', 'onMouseUp', 'onTouchStart', 'onTouchEnd', 'onMouseEnter', 'onMouseOver', 'onMouseLeave', 'onTouchMove', 'simplifiedDialog', 'minLeft', 'minRight', 'minBottom', 'noIcon', 'inlineIconChildren', 'inlineIconClassName', 'id', 'dialogId', 'cellIndex', 'onOkClick', 'okLabel', 'okPrimary', 'okSecondary', 'okProps', 'onCancelClick', 'cancelLabel', 'cancelPrimary', 'cancelSecondary', 'cancelProps', 'okOnOutsideClick', 'defaultValue', 'adjusted', 'scrollIntoView', 'scrollIntoViewPadding', 'defaultVisible', 'visibleOnFocus', 'scrollThreshold', 'enforceMinWidth', 'transitionDuration']);\n\n    var _state = this.state,\n        visible = _state.visible,\n        actions = _state.actions;\n\n    var value = getField(this.props, this.state, 'value');\n    var cellIndex = getField(this.props, this.state, 'cellIndex');\n\n    var _props3 = this.props,\n        id = _props3.id,\n        dialogId = _props3.dialogId;\n\n    if (!dialogId) {\n      dialogId = (id || rowId + '-' + cellIndex) + '-edit-dialog';\n    }\n\n    if (!id) {\n      id = dialogId + '-field';\n    }\n\n    var inlineEditIcon = void 0;\n    if (inline && !noIcon) {\n      var icon = getDeprecatedIcon(inlineIconClassName, inlineIconChildren, inlineIcon);\n      if (icon) {\n        inlineEditIcon = React.cloneElement(icon, { key: 'edit-icon' });\n      }\n    }\n\n    var numeric = props.type === 'number';\n    var field = React.createElement(TextField, _extends({}, props, {\n      ref: this._setField,\n      style: textFieldStyle,\n      className: cn({ 'md-edit-dialog__blocked-field': inline }, textFieldClassName),\n      inputClassName: cn({\n        'md-edit-dialog__header': header && inline,\n        'md-text-right': numeric\n      }, themeColors({ hint: header && inline }), inputClassName),\n      id: id,\n      label: label,\n      placeholder: placeholder,\n      value: value,\n      onFocus: this._handleFocus,\n      onChange: this._handleChange,\n      onKeyDown: this._handleKeyDown,\n      block: inline,\n      maxLength: visible ? maxLength : null,\n      rightIcon: inlineEditIcon\n    }));\n\n    var children = void 0;\n    if (inline) {\n      children = field;\n    } else {\n      var dialogLabel = value || value === 0 ? value : placeholder || label;\n      children = React.createElement(\n        EditDialog,\n        {\n          style: layoverStyle,\n          className: layoverClassName,\n          dialogStyle: dialogStyle,\n          dialogClassName: dialogClassName,\n          dialogContentStyle: dialogContentStyle,\n          dialogContentClassName: dialogContentClassName,\n          id: dialogId,\n          textFieldId: id,\n          visible: visible,\n          onOpen: this._handleOpen,\n          onClose: this._handleClose,\n          label: dialogLabel,\n          actions: actions,\n          large: large,\n          title: title,\n          header: header,\n          placeholder: dialogLabel === placeholder || dialogLabel === label,\n          simplified: simplifiedDialog,\n          anchor: anchor,\n          belowAnchor: belowAnchor,\n          animationPosition: animationPosition,\n          xThreshold: xThreshold,\n          yThreshold: yThreshold,\n          centered: centered,\n          sameWidth: sameWidth,\n          minLeft: minLeft,\n          minRight: minRight,\n          minBottom: minBottom,\n          fixedTo: typeof fixedTo !== 'undefined' ? fixedTo : this._fixedTo,\n          dialogZDepth: dialogZDepth,\n          repositionOnScroll: repositionOnScroll,\n          repositionOnResize: repositionOnResize,\n          transitionName: transitionName,\n          transitionEnterTimeout: transitionEnterTimeout,\n          transitionLeaveTimeout: transitionLeaveTimeout\n        },\n        field\n      );\n    }\n\n    return React.createElement(\n      TableColumn,\n      {\n        style: style,\n        numeric: numeric,\n        className: cn('md-edit-dialog-column', className),\n        header: header,\n        adjusted: false,\n        tooltipLabel: tooltipLabel,\n        tooltipDelay: tooltipDelay,\n        tooltipPosition: tooltipPosition,\n        onClick: onClick,\n        onMouseDown: onMouseDown,\n        onMouseUp: onMouseUp,\n        onTouchStart: onTouchStart,\n        onTouchMove: onTouchMove,\n        onMouseEnter: onMouseEnter,\n        onMouseOver: onMouseOver,\n        onMouseLeave: onMouseLeave,\n        onTouchEnd: onTouchEnd\n      },\n      children\n    );\n  };\n\n  return EditDialogColumn;\n}(PureComponent);\n\nEditDialogColumn.VerticalAnchors = Layover.VerticalAnchors;\nEditDialogColumn.HorizontalAnchors = Layover.HorizontalAnchors;\nEditDialogColumn.Positions = Layover.Positions;\nEditDialogColumn.propTypes = {\n  /**\n   * An optional id to use for the text field in the column. If this is omitted,\n   * the id will be `${dialogId}-field`.\n   *\n   * @see {@link #dialogId}\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to use for the dialog that appears in the column. If this is omitted,\n   * the id will be `${rowId}-${cellIndex}-edit-dialog-field`.\n   */\n  dialogId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The optional style to apply to the edit dialog's column.\n   */\n  style: PropTypes.object,\n\n  /**\n   * The optional className to apply to the edit dialog's column.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the dialog's surrounding `Layover` component.\n   */\n  layoverStyle: PropTypes.object,\n\n  /**\n   * An optional className to the dialog's surrounding `Layover` component.\n   */\n  layoverClassName: PropTypes.string,\n\n  /**\n   * The optional style to apply to the edit dialog.\n   */\n  dialogStyle: PropTypes.object,\n\n  /**\n   * The optional className to apply to the edit dialog.\n   */\n  dialogClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the dialog's content area. This is the area\n   * that holds the text field.\n   */\n  dialogContentStyle: PropTypes.object,\n\n  /**\n   * An optional class name to apply to the dialog's content area. This is the area\n   * that holds the text field.\n   */\n  dialogContentClassName: PropTypes.string,\n\n  /**\n   * The zDepth to apply to the dialog when not inline.\n   *\n   * @see {@link Papers/Paper#zDepth}\n   */\n  dialogZDepth: PropTypes.number.isRequired,\n\n  /**\n   * An optional style to apply to the text field.\n   */\n  textFieldStyle: PropTypes.object,\n\n  /**\n   * An optional class name to apply to the text field.\n   */\n  textFieldClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the text field's input.\n   */\n  inputStyle: PropTypes.object,\n\n  /**\n   * An optional class name to apply to the text field's input.\n   */\n  inputClassName: PropTypes.string,\n\n  /**\n   * Boolean if the edit dialog is currently disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Boolean if the text field should be editable inline instead of in a dialog.\n   *\n   * @see {@link #inlineIcon}\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * An optional icon to set for the inline edit dialog column. Setting this prop to null\n   * will not render an icon.\n   */\n  inlineIcon: PropTypes.element,\n\n  /**\n   * The default value to use for the text field.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * A value to use for the edit dialog text field. This will make the component controlled\n   * so you will need to provide an `onChange` function.\n   */\n  value: controlled(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'onChange', 'defaultValue'),\n\n  /**\n   * An optional function to call when the text field's value has changed. This is required\n   * if the `value` prop has been defined.\n   *\n   * @see {@link TextFields/TextField#onChange}\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * An optional function to call when the text field gains focus.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * An optional function to call when the keydown event is triggered on the text field.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * An optional label for the text field. When displaying an `inline` edit dialog column,\n   * the `placeholder` prop should be used instead. This is because the text field changes\n   * to the `block` type when `inline`.\n   *\n   * @see {@link #inline}\n   * @see {@link #placeholder}\n   * @see {@link TextFields/TextField#block}\n   */\n  label: PropTypes.node,\n\n  /**\n   * An optional placeholder for the text field.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Boolean if the edit dialog should become a large dialog. When the dialog is large,\n   * the `title` prop is required.\n   *\n   * A large dialog has a Title followed by the text field, and then a cancel and ok action\n   * buttons below.\n   */\n  large: PropTypes.bool,\n\n  /**\n   * The title to use for the large edit dialog. This prop is required if the `large` prop\n   * is enabled.\n   */\n  title: PropTypes.node,\n\n  /**\n   * An optional `maxLength` to apply to the text field.\n   *\n   * @see {@link TextFields/TextField#maxLength}\n   */\n  maxLength: PropTypes.number,\n\n  /**\n   * An optional function to call when the \"Ok\" button has been clicked, the user presses enter\n   * on * the text field or when the `okOnOutsideClick` prop has been enabled and the user clicks\n   * somewhere on the page.\n   *\n   * The callback will include the current value and the click or keypress event.\n   * ```js\n   * onOkClick(value, event)\n   * ```\n   *\n   * @see {@link #large}\n   */\n  onOkClick: PropTypes.func,\n\n  /**\n   * The label to use for the \"Ok\" button in large dialogs.\n   *\n   * @see {@link #large}\n   */\n  okLabel: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the \"Ok\" button in large dialogs should be styled with the primary color.\n   * To get a `default` styled button, set both `okPrimary` and `okSecondary` (or omit `okSecondary`)\n   * to `false`.\n   *\n   * @see {@link #large}\n   * @see {@link #okSecondary}\n   */\n  okPrimary: PropTypes.bool,\n\n  /**\n   * Boolean if the \"Ok\" button in large dialogs should be styled with the secondary color.\n   *\n   * @see {@link #large}\n   * @see {@link #okPrimary}\n   */\n  okSecondary: PropTypes.bool,\n\n  /**\n   * Any additional props to apply to the \"Ok\" button. This will override any of the other\n   * button props.\n   *\n   * @see {@link #okLabel}\n   * @see {@link #okPrimary}\n   * @see {@link #okSecondary}\n   */\n  okProps: PropTypes.object,\n\n  /**\n   * An optional function to call when the \"Cancel\" button has been clicked in large edit dialogs.\n   * The callback will include the text field's value before any edits occurred and the click event.\n   *\n   * ```js\n   * onCancelClick(previousValue, event)\n   * ```\n   *\n   * @see {@link #large}\n   */\n  onCancelClick: PropTypes.func,\n\n  /**\n   * The label to give to the \"Cancel\" button in large edit dialogs.\n   *\n   * @see {@link #large}\n   */\n  cancelLabel: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the \"Cancel\" button in large dialogs should be styled with the primary color.\n   * To get a `default` styled button, set both `cancelPrimary` and `cancelSecondary` (or\n   * omit `cancelSecondary`) to `false`.\n   *\n   * @see {@link #large}\n   * @see {@link #cancelSecondary}\n   */\n  cancelPrimary: PropTypes.bool,\n\n  /**\n   * Boolean if the \"Cancel\" button in large dialogs should be styled with the secondary color.\n   *\n   * @see {@link #large}\n   * @see {@link #cancelPrimary}\n   */\n  cancelSecondary: PropTypes.bool,\n\n  /**\n   * Any additional props to apply to the \"Cancel\" button. This will override any of the other\n   * button props.\n   *\n   * @see {@link #cancelLabel}\n   * @see {@link #cancelPrimary}\n   * @see {@link #cancelSecondary}\n   */\n  cancelProps: PropTypes.object,\n\n  /**\n   * Boolean if the action for clicking somewhere on on the page while the dialog is open\n   * saves the changes or cancels to the previous value before opening the dialog.\n   *\n   * @see {@link #onOkClick}\n   * @see {@link #onCancelClick}\n   */\n  okOnOutsideClick: PropTypes.bool,\n\n  /**\n   * An optional function to call when a user clicks out of the text field.\n   */\n  onOutsideClick: PropTypes.func,\n\n  /**\n   * Boolean if the edit dialog should be closed if the user clicks somewhere else on the page\n   * while the dialog is open.\n   */\n  closeOnOutsideClick: PropTypes.bool,\n\n  /**\n   * Boolean if the Edit Dialog should be visible by default. This only applies when the `inline` prop\n   * is not enabled.\n   */\n  defaultVisible: PropTypes.bool,\n\n  /**\n   * Boolean if the edit dialog should automatically open when the text field is focused for non-inline\n   * dialogs. This is enabled by default for backwards compatibility.\n   */\n  visibleOnFocus: PropTypes.bool,\n\n  /**\n   * The type for the text field in the edit dialog.\n   *\n   * @see {@link TextFields/TextField#type}\n   */\n  type: PropTypes.string,\n\n  /**\n   * This is how the dialog gets \"anchored\" to the table column.\n   *\n   * @see {@link Helpers/Layover#anchor}\n   */\n  anchor: anchorShape,\n\n  /**\n   * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n   *\n   * @see {@link Helpers/Layover#belowAnchor}\n   */\n  belowAnchor: anchorShape,\n\n  /**\n   * This is the animation position to use for the dialog.\n   *\n   * @see {@link Helpers/Layover#animationPosition}\n   */\n  animationPosition: positionShape,\n\n  /**\n   * This is how the dialog should be fixed within the table. When this is omitted, it will\n   * automatically use the responsive table as the fixture so that the dialog will close/adjust itself\n   * to the scrolling of the table.\n   *\n   * @see {@link Helpers/Layover#fixedTo}\n   */\n  fixedTo: fixedToShape,\n\n  /**\n   * @see {@link Helpers/Layover#xThreshold}\n   */\n  xThreshold: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#yThreshold}\n   */\n  yThreshold: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#centered}\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#sameWidth}\n   */\n  sameWidth: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#transitionName}\n   */\n  transitionName: PropTypes.string,\n\n  /**\n   * @see {@link Helpers/Layover#transitionEnterTimeout}\n   */\n  transitionEnterTimeout: PropTypes.number,\n\n  /**\n   * @see {@link Helpers/Layover#transitionLeaveTimeout}\n   */\n  transitionLeaveTimeout: PropTypes.number,\n\n  /**\n   * The optional tooltip to render on hover.\n   */\n  tooltipLabel: PropTypes.node,\n\n  /**\n   * An optional delay to apply to the tooltip before it appears.\n   */\n  tooltipDelay: PropTypes.number,\n\n  /**\n   * The position of the tooltip.\n   */\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the `fixedTo` element scrolls.\n   *\n   * @see {@link Helpers/Layover#repositionOnScroll}\n   */\n  repositionOnScroll: PropTypes.bool,\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the window resizes.\n   *\n   * @see {@link Helpers/Layover#repositionOnResize}\n   */\n  repositionOnResize: PropTypes.bool,\n\n  /**\n   * Boolean if the dialog logic should be simplified without any viewport logic and position\n   * based on the relative position of the menu. This will most like require some additional\n   * styles applied to the dialog.\n   *\n   * @see {@link Helpers/Layover#simplified}\n   */\n  simplifiedDialog: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#minLeft}\n   */\n  minLeft: Layover.propTypes.minLeft,\n\n  /**\n   * @see {@link Helpers/Layover#minRight}\n   */\n  minRight: Layover.propTypes.minLeft,\n\n  /**\n   * @see {@link Helpers/Layover#minBottom}\n   */\n  minBottom: Layover.propTypes.minBottom,\n\n  /**\n   * Boolean if the edit dialog should attempt to scroll into view if the full\n   * dialog can not be displayed in the viewport when it was toggled open.\n   *\n   * @see {@link #scrollIntoViewPadding}\n   */\n  scrollIntoView: PropTypes.bool,\n\n  /**\n   * The amount of padding that should be applied when the cell is scrolled into view.\n   * This will be applied to the left of the cell.\n   */\n  scrollIntoViewPadding: PropTypes.number,\n\n  /**\n   * An optional function to call when the `click` event is triggered in the column.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mousedown` event is triggered in the column.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseup` event is triggered in the column.\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * An optional function to call when the `touchstart` event is triggered in the column.\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * An optional function to call when the `touchend` event is triggered in the column.\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseenter` event is triggered in the column.\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseover` event is triggered in the column.\n   */\n  onMouseOver: PropTypes.func,\n\n  /**\n   * An optional function to call when the `mouseleave` event is triggered in the column.\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * An optional function to call when the `touchmove` event is triggered in the column.\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * This is injected by the `TableRow` component.\n   * @access private\n   */\n  header: PropTypes.bool,\n\n  /**\n   * This is injected by the `TableRow` component and used to help generate the unique id for the text\n   * field.\n   *\n   * @access private\n   */\n  cellIndex: PropTypes.number,\n\n  /**\n   * @access private\n   */\n  adjusted: PropTypes.bool,\n\n  inlineIconChildren: deprecated(PropTypes.node, 'Use the `inlineIcon` prop instead'),\n  inlineIconClassName: deprecated(PropTypes.string, 'Use the `inlineIcon` prop instead'),\n  noIcon: deprecated(PropTypes.bool, 'Set the `inlineIcon` prop to `null` instead'),\n  enforceMinWidth: deprecated(PropTypes.bool, 'The min width will always be enforced based on the `$md-edit-dialog-min-width` Sass variable'),\n  scrollThreshold: deprecated(PropTypes.number, 'Use `xThreshold` and `yThreshold` instead'),\n  transitionDuration: deprecated(PropTypes.number, 'use `transitionEnterTimeout` and `transitionLeaveTimeout` instead')\n};\nEditDialogColumn.defaultProps = {\n  type: 'text',\n  defaultValue: '',\n  okOnOutsideClick: true,\n  inlineIcon: React.createElement(\n    FontIcon,\n    null,\n    'edit'\n  ),\n  okLabel: 'Save',\n  okPrimary: true,\n  cancelLabel: 'Cancel',\n  cancelPrimary: true,\n  animationPosition: EditDialogColumn.Positions.BELOW,\n  dialogZDepth: 1,\n  repositionOnScroll: true,\n  repositionOnResize: false,\n  scrollIntoView: true,\n  scrollIntoViewPadding: 16,\n  minLeft: 0,\n  minRight: 0,\n  minBottom: 0,\n  visibleOnFocus: true,\n  defaultVisible: false\n};\nEditDialogColumn.contextTypes = {\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setField = function (field) {\n    _this2._field = field;\n  };\n\n  this._makeActions = function (props) {\n    var okLabel = props.okLabel,\n        okPrimary = props.okPrimary,\n        okSecondary = props.okSecondary,\n        okProps = props.okProps,\n        cancelLabel = props.cancelLabel,\n        cancelPrimary = props.cancelPrimary,\n        cancelSecondary = props.cancelSecondary,\n        cancelProps = props.cancelProps;\n\n\n    return [_extends({\n      key: 'cancel',\n      children: cancelLabel,\n      primary: cancelPrimary && !cancelSecondary,\n      secondary: cancelSecondary\n    }, cancelProps, {\n      onClick: _this2._handleCancel\n    }), _extends({\n      key: 'ok',\n      children: okLabel,\n      primary: okPrimary && !okSecondary,\n      secondary: okSecondary\n    }, okProps, {\n      onClick: _this2._handleOk\n    })];\n  };\n\n  this._handleOpen = function (e) {\n    if (_this2._skipNextOpen) {\n      _this2._skipNextOpen = false;\n    } else if (_this2.props.visibleOnFocus || !e || e.type !== 'focus') {\n      var _props4 = _this2.props,\n          scrollIntoView = _props4.scrollIntoView,\n          scrollIntoViewPadding = _props4.scrollIntoViewPadding;\n\n      if (scrollIntoView) {\n        var vp = viewport(_this2._column);\n        if (vp !== true && _this2._table && _this2._column && !_this2.props.inline) {\n          _this2._table.scrollLeft = _this2._column.offsetLeft - scrollIntoViewPadding;\n        }\n      }\n\n      _this2.setState({ visible: true, cancelValue: getField(_this2.props, _this2.state, 'value') });\n    }\n  };\n\n  this._handleClose = function (e) {\n    var _props5 = _this2.props,\n        onOutsideClick = _props5.onOutsideClick,\n        okOnOutsideClick = _props5.okOnOutsideClick;\n\n    if (onOutsideClick) {\n      onOutsideClick(e);\n    }\n\n    if (okOnOutsideClick) {\n      _this2._handleOk(e);\n    } else {\n      _this2._handleCancel(e);\n    }\n  };\n\n  this._handleChange = function (value, e) {\n    if (_this2.props.onChange) {\n      _this2.props.onChange(value, e);\n    }\n\n    if (typeof _this2.props.value === 'undefined') {\n      _this2.setState({ value: value });\n    }\n  };\n\n  this._handleFocus = function (e) {\n    if (_this2.props.onFocus) {\n      _this2.props.onFocus(e);\n    }\n\n    if (_this2.props.inline) {\n      _this2.setState({ cancelValue: e.target.value });\n    }\n  };\n\n  this._handleKeyDown = function (e) {\n    var _props6 = _this2.props,\n        onKeyDown = _props6.onKeyDown,\n        okOnOutsideClick = _props6.okOnOutsideClick,\n        large = _props6.large;\n\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    var key = e.which || e.keyCode;\n    if (key === ENTER) {\n      _this2._handleOk(e);\n    } else if (key === ESC) {\n      _this2._handleCancel(e);\n    } else if (key === TAB && !large) {\n      // infinitely opens otherwise...\n      _this2._skipNextOpen = e.shiftKey;\n\n      if (okOnOutsideClick) {\n        _this2._handleOk(e);\n      } else {\n        _this2._handleCancel(e);\n      }\n    }\n  };\n\n  this._handleOk = function (e) {\n    if (_this2.props.onOkClick) {\n      _this2.props.onOkClick(getField(_this2.props, _this2.state, 'value'), e);\n    }\n\n    _this2.setState({ visible: false });\n  };\n\n  this._handleCancel = function (e) {\n    var value = _this2.state.cancelValue;\n    if (_this2.props.onCancelClick) {\n      _this2.props.onCancelClick(value, e);\n    }\n\n    var state = { visible: false };\n    if (typeof _this2.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    _this2.setState(state);\n  };\n};\n\nexport default EditDialogColumn;"]},"metadata":{},"sourceType":"module"}