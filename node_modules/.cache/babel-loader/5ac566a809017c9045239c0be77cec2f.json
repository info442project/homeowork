{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n/** @module utils/findIgnoreCase */\n\n\nimport React from 'react';\n/**\n * This function finds the first item in a `haystack` that starts with every\n * letter of the `value` in order. It will ignore:\n *  - null or undefined\n *  - valid React components\n *\n * @param {Array.<string|number|Object|function>} haystack - the haystack to search.\n * @param {string} value - the current value to use.\n * @param {string=} dataLabel - the object key to use to extract the comparing value.\n *\n * @return {string} the found element or the empty string.\n */\n\nexport default function findIgnoreCase(haystack, value, dataLabel) {\n  var needle = value ? value.toLowerCase() : '';\n\n  if (!needle) {\n    return needle;\n  }\n\n  var suggestion = '';\n  haystack.some(function (hay) {\n    if (hay === null || typeof hay === 'undefined' || React.isValidElement(hay)) {\n      return false;\n    }\n\n    var hayStr = (typeof hay === 'undefined' ? 'undefined' : _typeof(hay)) === 'object' ? hay[dataLabel] : hay.toString();\n\n    if (hayStr.toLowerCase().indexOf(needle) === 0) {\n      suggestion = hayStr;\n    }\n\n    return suggestion;\n  });\n  return suggestion;\n}","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/utils/findIgnoreCase.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","React","findIgnoreCase","haystack","value","dataLabel","needle","toLowerCase","suggestion","some","hay","isValidElement","hayStr","toString","indexOf"],"mappings":"AAAA,IAAIA,OAAO,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA3D,GAAsE,UAAUC,GAAV,EAAe;AAAE,SAAO,OAAOA,GAAd;AAAoB,CAA3G,GAA8G,UAAUA,GAAV,EAAe;AAAE,SAAOA,GAAG,IAAI,OAAOF,MAAP,KAAkB,UAAzB,IAAuCE,GAAG,CAACC,WAAJ,KAAoBH,MAA3D,IAAqEE,GAAG,KAAKF,MAAM,CAACI,SAApF,GAAgG,QAAhG,GAA2G,OAAOF,GAAzH;AAA+H,CAA5Q;AAEA;;;AACA,OAAOG,KAAP,MAAkB,OAAlB;AAEA;;;;;;;;;;;;;AAYA,eAAe,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,KAAlC,EAAyCC,SAAzC,EAAoD;AACjE,MAAIC,MAAM,GAAGF,KAAK,GAAGA,KAAK,CAACG,WAAN,EAAH,GAAyB,EAA3C;;AAEA,MAAI,CAACD,MAAL,EAAa;AACX,WAAOA,MAAP;AACD;;AAED,MAAIE,UAAU,GAAG,EAAjB;AACAL,EAAAA,QAAQ,CAACM,IAAT,CAAc,UAAUC,GAAV,EAAe;AAC3B,QAAIA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,WAA/B,IAA8CT,KAAK,CAACU,cAAN,CAAqBD,GAArB,CAAlD,EAA6E;AAC3E,aAAO,KAAP;AACD;;AAED,QAAIE,MAAM,GAAG,CAAC,OAAOF,GAAP,KAAe,WAAf,GAA6B,WAA7B,GAA2Cf,OAAO,CAACe,GAAD,CAAnD,MAA8D,QAA9D,GAAyEA,GAAG,CAACL,SAAD,CAA5E,GAA0FK,GAAG,CAACG,QAAJ,EAAvG;;AAEA,QAAID,MAAM,CAACL,WAAP,GAAqBO,OAArB,CAA6BR,MAA7B,MAAyC,CAA7C,EAAgD;AAC9CE,MAAAA,UAAU,GAAGI,MAAb;AACD;;AAED,WAAOJ,UAAP;AACD,GAZD;AAcA,SAAOA,UAAP;AACD","sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/** @module utils/findIgnoreCase */\nimport React from 'react';\n\n/**\n * This function finds the first item in a `haystack` that starts with every\n * letter of the `value` in order. It will ignore:\n *  - null or undefined\n *  - valid React components\n *\n * @param {Array.<string|number|Object|function>} haystack - the haystack to search.\n * @param {string} value - the current value to use.\n * @param {string=} dataLabel - the object key to use to extract the comparing value.\n *\n * @return {string} the found element or the empty string.\n */\nexport default function findIgnoreCase(haystack, value, dataLabel) {\n  var needle = value ? value.toLowerCase() : '';\n\n  if (!needle) {\n    return needle;\n  }\n\n  var suggestion = '';\n  haystack.some(function (hay) {\n    if (hay === null || typeof hay === 'undefined' || React.isValidElement(hay)) {\n      return false;\n    }\n\n    var hayStr = (typeof hay === 'undefined' ? 'undefined' : _typeof(hay)) === 'object' ? hay[dataLabel] : hay.toString();\n\n    if (hayStr.toLowerCase().indexOf(needle) === 0) {\n      suggestion = hayStr;\n    }\n\n    return suggestion;\n  });\n\n  return suggestion;\n}"]},"metadata":{},"sourceType":"module"}