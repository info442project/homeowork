{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport controlled from '../utils/PropTypes/controlled';\nimport mapToListParts from '../utils/mapToListParts';\nimport getField from '../utils/getField';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Menu from './Menu';\n/**\n * The `DropdownMenu` is just a simple wrapper to the `Menu` component. The main differences\n * is that the `toggle` component will now be the children and the list of items to display\n * will be the `menuItems` prop.\n *\n * The dropdown menu is mostly used to control the state of the menu and render a single element\n * as the toggle.\n */\n\nvar DropdownMenu = function (_PureComponent) {\n  _inherits(DropdownMenu, _PureComponent);\n\n  function DropdownMenu(props) {\n    _classCallCheck(this, DropdownMenu);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this._handleClick = function (e) {\n      var _this$props = _this.props,\n          onVisibilityChange = _this$props.onVisibilityChange,\n          children = _this$props.children;\n      var visible = !getField(_this.props, _this.state, 'visible');\n\n      if (onVisibilityChange) {\n        onVisibilityChange(visible, e);\n      }\n\n      var toggle = React.Children.only(children);\n\n      if (toggle.props.onClick) {\n        toggle.props.onClick(e);\n      }\n\n      if (typeof _this.props.visible === 'undefined') {\n        _this.setState({\n          visible: visible\n        });\n      }\n    };\n\n    _this._handleClose = function (e) {\n      var onVisibilityChange = _this.props.onVisibilityChange;\n      var visible = false;\n\n      if (onVisibilityChange) {\n        onVisibilityChange(visible, e);\n      }\n\n      if (typeof _this.props.visible === 'undefined') {\n        _this.setState({\n          visible: visible\n        });\n      }\n    };\n\n    _this.state = {};\n\n    if (typeof props.visible === 'undefined') {\n      _this.state.visible = props.defaultVisible;\n    }\n\n    return _this;\n  }\n\n  DropdownMenu.prototype.render = function render() {\n    var _props = this.props,\n        id = _props.id,\n        listId = _props.listId,\n        menuItems = _props.menuItems,\n        propChildren = _props.children,\n        simplifiedMenu = _props.simplifiedMenu,\n        propVisible = _props.visible,\n        onVisibilityChange = _props.onVisibilityChange,\n        defaultVisible = _props.defaultVisible,\n        props = _objectWithoutProperties(_props, ['id', 'listId', 'menuItems', 'children', 'simplifiedMenu', 'visible', 'onVisibilityChange', 'defaultVisible']);\n\n    var visible = getField(this.props, this.state, 'visible');\n    var children = React.Children.only(propChildren);\n    var toggle = React.cloneElement(children, {\n      id: children.props.id || id + '-toggle',\n      onClick: this._handleClick\n    });\n    var items = void 0;\n\n    if (!Array.isArray(menuItems)) {\n      items = mapToListParts(menuItems);\n    } else {\n      items = menuItems.map(mapToListParts);\n    }\n\n    return React.createElement(Menu, _extends({}, props, {\n      simplified: simplifiedMenu,\n      id: id,\n      listId: listId,\n      toggle: toggle,\n      visible: visible,\n      onClose: this._handleClose\n    }), items);\n  };\n\n  return DropdownMenu;\n}(PureComponent);\n\nDropdownMenu.Positions = Menu.Positions;\nDropdownMenu.HorizontalAnchors = Menu.HorizontalAnchors;\nDropdownMenu.VerticalAnchors = Menu.VerticalAnchors;\nDropdownMenu.propTypes = {\n  /**\n   * An id to use for the menu. This is required for accessibility.\n   *\n   * @see {@link Menus/Menu#id}\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the menu's list.\n   *\n   * @see {@link Menus/Menu#listId}\n   */\n  listId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional style to apply to the menu.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the menu.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the list.\n   */\n  listStyle: PropTypes.object,\n\n  /**\n   * An optional class name to apply to the list.\n   */\n  listClassName: PropTypes.string,\n\n  /**\n   * Any additional props to provide to the list.\n   *\n   * @see {@link Menus/Menu#listProps}\n   */\n  listProps: PropTypes.object,\n\n  /**\n   * The z-depth to use for the list.\n   *\n   * @see {@link Menus/Menu/listZDepth}\n   */\n  listZDepth: PropTypes.number,\n\n  /**\n   * Boolean if the list should be displayed inline.\n   *\n   * @see {@link Lists/List#inline}\n   */\n  listInline: PropTypes.bool,\n\n  /**\n   * Boolean if the list's height should be restricted.\n   *\n   * @see {@link Menus/Menu#listHeightRestricted}\n   */\n  listHeightRestricted: PropTypes.bool,\n\n  /**\n   * Boolean if the menu's list is currently visible. If this is defined, it will\n   * require the `onVisibilityChange` function to be defined since it will become\n   * a controlled component.\n   */\n  visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n  /**\n   * Boolean if the menu's list should be visible by default.\n   */\n  defaultVisible: PropTypes.bool.isRequired,\n\n  /**\n   * An optional function to call when the button is clicked.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * An optional function to call when the visibility changes for the menu. The callback will\n   * include the next visibility state and the event that triggered the change.\n   *\n   * ```js\n   * onVisibilityChange(visible, event);\n   * ```\n   */\n  onVisibilityChange: PropTypes.func,\n\n  /**\n   * This is a 0 to many relationship of `ListItem` to display in the menu's `List`. If the type\n   * of the item is a number or string, it will be passed to the `ListItem` as the `primaryText`.\n   * If it is an object, it should be the shape of the `ListItem` props. If it is a node, it will\n   * just be rendered in the `List`.\n   *\n   * @see {@link Lists/ListItem}\n   * @see {@link Menus/Menu#children}\n   */\n  menuItems: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.object, PropTypes.node, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object, PropTypes.node]))]),\n\n  /**\n   * @see {@link Menus/Menu#toggle}\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * The anchor position of the menu's list.\n   *\n   * @see {@link Helpers/Layover#anchor}\n   */\n  anchor: anchorShape,\n\n  /**\n   * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n   *\n   * @see {@link Helpers/Layover#belowAnchor}\n   */\n  belowAnchor: anchorShape,\n\n  /**\n   * This is how the menu's list is fixed to the toggle.\n   *\n   * @see {@link Menus/Menu#fixedTo}\n   */\n  fixedTo: fixedToShape,\n\n  /**\n   * This is the animation position for the menu's list.\n   *\n   * @see {@link Menus/Menu#position}\n   */\n  position: positionShape,\n\n  /**\n   * Boolean if the menu's list should gain the cascading styles.\n   *\n   * @see {@link Menus/Menu#cascading}\n   */\n  cascading: PropTypes.bool,\n\n  /**\n   * The zDepth to use for the lists that appear in cascading menus.\n   *\n   * @see {@link Menus/Menu#cascadingZDepth}\n   */\n  cascadingZDepth: PropTypes.number,\n\n  /**\n   * The anchor position for the cascading lists.\n   *\n   * @see {@link Menus/Menu#cascadingAnchor}\n   */\n  cascadingAnchor: anchorShape,\n\n  /**\n   * Boolean if the menu should display as a full width container. This will *not* update the button\n   * to be full width as well.\n   *\n   * @see {@link Menus/Menu#fullWidth}\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Boolean if the menu's container should display as `block` instead of `inline-block`.\n   *\n   * @see {@link Menus/Menu#block}\n   */\n  block: PropTypes.bool,\n\n  /**\n   * Boolean if the list should appear centered related to the button.\n   *\n   * @see {@link Menus/Menu#centered}\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * Boolean if the menu's list should be the same width as the button.\n   *\n   * @see {@link Menus/Menu#sameWidth}\n   */\n  sameWidth: PropTypes.bool,\n\n  /**\n   * @see {@link Menus/Menu#xThreshold}\n   */\n  xThreshold: PropTypes.number,\n\n  /**\n   * @see {@link Menus/Menu#yThreshold}\n   */\n  yThreshold: PropTypes.number,\n\n  /**\n   * Boolean if the menu's list should be closed when an element outside of the menu has been clicked.\n   *\n   * @see {@link Menus/Menu#closeOnOutsideClick}\n   */\n  closeOnOutsideClick: PropTypes.bool,\n\n  /**\n   * The transition name to use for the menu's list visibility changes.\n   *\n   * @see {@link Menus/Menu#transitionName}\n   */\n  transitionName: PropTypes.string,\n\n  /**\n   * The transition name to use when the menu's list gains visibility.\n   *\n   * @see {@link Menus/Menu#transitionEnterTimeout}\n   */\n  transitionEnterTimeout: PropTypes.number,\n\n  /**\n   * The transition timeout to use when the menu's list loses visibility.\n   *\n   * @see {@link Menus/Menu#transitionLeaveTimeout}\n   */\n  transitionLeaveTimeout: PropTypes.number,\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the `fixedTo` element scrolls.\n   *\n   * @see {@link Helpers/Layover#repositionOnScroll}\n   */\n  repositionOnScroll: PropTypes.bool,\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the window resizes.\n   *\n   * @see {@link Helpers/Layover#repositionOnResize}\n   */\n  repositionOnResize: PropTypes.bool,\n\n  /**\n   * Boolean if the menu logic should be simplified without any viewport logic and position\n   * based on the relative position of the menu. This will most like require some additional\n   * styles applied to the menu.\n   *\n   * @see {@link Helpers/Layover#simplified}\n   */\n  simplifiedMenu: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#minLeft}\n   */\n  minLeft: Menu.propTypes.minLeft,\n\n  /**\n   * @see {@link Helpers/Layover#minRight}\n   */\n  minRight: Menu.propTypes.minLeft,\n\n  /**\n   * @see {@link Helpers/Layover#minBottom}\n   */\n  minBottom: Menu.propTypes.minBottom,\n\n  /**\n   * @see {@link Helpers/Layover#fillViewportWidth}\n   */\n  fillViewportWidth: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#fillViewportHeight}\n   */\n  fillViewportHeight: PropTypes.bool\n};\nDropdownMenu.defaultProps = {\n  defaultVisible: false,\n  repositionOnScroll: true,\n  repositionOnResize: false\n};\nexport default DropdownMenu;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Menus/DropdownMenu.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","controlled","mapToListParts","getField","anchorShape","fixedToShape","positionShape","Menu","DropdownMenu","_PureComponent","props","_this","_handleClick","e","_this$props","onVisibilityChange","children","visible","state","toggle","Children","only","onClick","setState","_handleClose","defaultVisible","render","_props","id","listId","menuItems","propChildren","simplifiedMenu","propVisible","cloneElement","items","Array","isArray","map","createElement","simplified","onClose","Positions","HorizontalAnchors","VerticalAnchors","propTypes","oneOfType","number","string","style","object","className","listStyle","listClassName","listProps","listZDepth","listInline","bool","listHeightRestricted","isRequired","func","node","arrayOf","element","anchor","belowAnchor","fixedTo","position","cascading","cascadingZDepth","cascadingAnchor","fullWidth","block","centered","sameWidth","xThreshold","yThreshold","closeOnOutsideClick","transitionName","transitionEnterTimeout","transitionLeaveTimeout","repositionOnScroll","repositionOnResize","minLeft","minRight","minBottom","fillViewportWidth","fillViewportHeight","defaultProps"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport mapToListParts from '../utils/mapToListParts';\nimport getField from '../utils/getField';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Menu from './Menu';\n\n/**\n * The `DropdownMenu` is just a simple wrapper to the `Menu` component. The main differences\n * is that the `toggle` component will now be the children and the list of items to display\n * will be the `menuItems` prop.\n *\n * The dropdown menu is mostly used to control the state of the menu and render a single element\n * as the toggle.\n */\n\nvar DropdownMenu = function (_PureComponent) {\n  _inherits(DropdownMenu, _PureComponent);\n\n  function DropdownMenu(props) {\n    _classCallCheck(this, DropdownMenu);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this._handleClick = function (e) {\n      var _this$props = _this.props,\n          onVisibilityChange = _this$props.onVisibilityChange,\n          children = _this$props.children;\n\n      var visible = !getField(_this.props, _this.state, 'visible');\n      if (onVisibilityChange) {\n        onVisibilityChange(visible, e);\n      }\n\n      var toggle = React.Children.only(children);\n      if (toggle.props.onClick) {\n        toggle.props.onClick(e);\n      }\n\n      if (typeof _this.props.visible === 'undefined') {\n        _this.setState({ visible: visible });\n      }\n    };\n\n    _this._handleClose = function (e) {\n      var onVisibilityChange = _this.props.onVisibilityChange;\n\n      var visible = false;\n      if (onVisibilityChange) {\n        onVisibilityChange(visible, e);\n      }\n\n      if (typeof _this.props.visible === 'undefined') {\n        _this.setState({ visible: visible });\n      }\n    };\n\n    _this.state = {};\n    if (typeof props.visible === 'undefined') {\n      _this.state.visible = props.defaultVisible;\n    }\n    return _this;\n  }\n\n  DropdownMenu.prototype.render = function render() {\n    var _props = this.props,\n        id = _props.id,\n        listId = _props.listId,\n        menuItems = _props.menuItems,\n        propChildren = _props.children,\n        simplifiedMenu = _props.simplifiedMenu,\n        propVisible = _props.visible,\n        onVisibilityChange = _props.onVisibilityChange,\n        defaultVisible = _props.defaultVisible,\n        props = _objectWithoutProperties(_props, ['id', 'listId', 'menuItems', 'children', 'simplifiedMenu', 'visible', 'onVisibilityChange', 'defaultVisible']);\n\n    var visible = getField(this.props, this.state, 'visible');\n\n    var children = React.Children.only(propChildren);\n    var toggle = React.cloneElement(children, {\n      id: children.props.id || id + '-toggle',\n      onClick: this._handleClick\n    });\n\n    var items = void 0;\n    if (!Array.isArray(menuItems)) {\n      items = mapToListParts(menuItems);\n    } else {\n      items = menuItems.map(mapToListParts);\n    }\n\n    return React.createElement(\n      Menu,\n      _extends({}, props, {\n        simplified: simplifiedMenu,\n        id: id,\n        listId: listId,\n        toggle: toggle,\n        visible: visible,\n        onClose: this._handleClose\n      }),\n      items\n    );\n  };\n\n  return DropdownMenu;\n}(PureComponent);\n\nDropdownMenu.Positions = Menu.Positions;\nDropdownMenu.HorizontalAnchors = Menu.HorizontalAnchors;\nDropdownMenu.VerticalAnchors = Menu.VerticalAnchors;\nDropdownMenu.propTypes = {\n  /**\n   * An id to use for the menu. This is required for accessibility.\n   *\n   * @see {@link Menus/Menu#id}\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional id to provide to the menu's list.\n   *\n   * @see {@link Menus/Menu#listId}\n   */\n  listId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional style to apply to the menu.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the menu.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the list.\n   */\n  listStyle: PropTypes.object,\n\n  /**\n   * An optional class name to apply to the list.\n   */\n  listClassName: PropTypes.string,\n\n  /**\n   * Any additional props to provide to the list.\n   *\n   * @see {@link Menus/Menu#listProps}\n   */\n  listProps: PropTypes.object,\n\n  /**\n   * The z-depth to use for the list.\n   *\n   * @see {@link Menus/Menu/listZDepth}\n   */\n  listZDepth: PropTypes.number,\n\n  /**\n   * Boolean if the list should be displayed inline.\n   *\n   * @see {@link Lists/List#inline}\n   */\n  listInline: PropTypes.bool,\n\n  /**\n   * Boolean if the list's height should be restricted.\n   *\n   * @see {@link Menus/Menu#listHeightRestricted}\n   */\n  listHeightRestricted: PropTypes.bool,\n\n  /**\n   * Boolean if the menu's list is currently visible. If this is defined, it will\n   * require the `onVisibilityChange` function to be defined since it will become\n   * a controlled component.\n   */\n  visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n  /**\n   * Boolean if the menu's list should be visible by default.\n   */\n  defaultVisible: PropTypes.bool.isRequired,\n\n  /**\n   * An optional function to call when the button is clicked.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * An optional function to call when the visibility changes for the menu. The callback will\n   * include the next visibility state and the event that triggered the change.\n   *\n   * ```js\n   * onVisibilityChange(visible, event);\n   * ```\n   */\n  onVisibilityChange: PropTypes.func,\n\n  /**\n   * This is a 0 to many relationship of `ListItem` to display in the menu's `List`. If the type\n   * of the item is a number or string, it will be passed to the `ListItem` as the `primaryText`.\n   * If it is an object, it should be the shape of the `ListItem` props. If it is a node, it will\n   * just be rendered in the `List`.\n   *\n   * @see {@link Lists/ListItem}\n   * @see {@link Menus/Menu#children}\n   */\n  menuItems: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.object, PropTypes.node, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object, PropTypes.node]))]),\n\n  /**\n   * @see {@link Menus/Menu#toggle}\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * The anchor position of the menu's list.\n   *\n   * @see {@link Helpers/Layover#anchor}\n   */\n  anchor: anchorShape,\n\n  /**\n   * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n   *\n   * @see {@link Helpers/Layover#belowAnchor}\n   */\n  belowAnchor: anchorShape,\n\n  /**\n   * This is how the menu's list is fixed to the toggle.\n   *\n   * @see {@link Menus/Menu#fixedTo}\n   */\n  fixedTo: fixedToShape,\n\n  /**\n   * This is the animation position for the menu's list.\n   *\n   * @see {@link Menus/Menu#position}\n   */\n  position: positionShape,\n\n  /**\n   * Boolean if the menu's list should gain the cascading styles.\n   *\n   * @see {@link Menus/Menu#cascading}\n   */\n  cascading: PropTypes.bool,\n\n  /**\n   * The zDepth to use for the lists that appear in cascading menus.\n   *\n   * @see {@link Menus/Menu#cascadingZDepth}\n   */\n  cascadingZDepth: PropTypes.number,\n\n  /**\n   * The anchor position for the cascading lists.\n   *\n   * @see {@link Menus/Menu#cascadingAnchor}\n   */\n  cascadingAnchor: anchorShape,\n\n  /**\n   * Boolean if the menu should display as a full width container. This will *not* update the button\n   * to be full width as well.\n   *\n   * @see {@link Menus/Menu#fullWidth}\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Boolean if the menu's container should display as `block` instead of `inline-block`.\n   *\n   * @see {@link Menus/Menu#block}\n   */\n  block: PropTypes.bool,\n\n  /**\n   * Boolean if the list should appear centered related to the button.\n   *\n   * @see {@link Menus/Menu#centered}\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * Boolean if the menu's list should be the same width as the button.\n   *\n   * @see {@link Menus/Menu#sameWidth}\n   */\n  sameWidth: PropTypes.bool,\n\n  /**\n   * @see {@link Menus/Menu#xThreshold}\n   */\n  xThreshold: PropTypes.number,\n\n  /**\n   * @see {@link Menus/Menu#yThreshold}\n   */\n  yThreshold: PropTypes.number,\n\n  /**\n   * Boolean if the menu's list should be closed when an element outside of the menu has been clicked.\n   *\n   * @see {@link Menus/Menu#closeOnOutsideClick}\n   */\n  closeOnOutsideClick: PropTypes.bool,\n\n  /**\n   * The transition name to use for the menu's list visibility changes.\n   *\n   * @see {@link Menus/Menu#transitionName}\n   */\n  transitionName: PropTypes.string,\n\n  /**\n   * The transition name to use when the menu's list gains visibility.\n   *\n   * @see {@link Menus/Menu#transitionEnterTimeout}\n   */\n  transitionEnterTimeout: PropTypes.number,\n\n  /**\n   * The transition timeout to use when the menu's list loses visibility.\n   *\n   * @see {@link Menus/Menu#transitionLeaveTimeout}\n   */\n  transitionLeaveTimeout: PropTypes.number,\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the `fixedTo` element scrolls.\n   *\n   * @see {@link Helpers/Layover#repositionOnScroll}\n   */\n  repositionOnScroll: PropTypes.bool,\n\n  /**\n   * Boolean if the menu should automatically try to reposition itself to stay within\n   * the viewport when the window resizes.\n   *\n   * @see {@link Helpers/Layover#repositionOnResize}\n   */\n  repositionOnResize: PropTypes.bool,\n\n  /**\n   * Boolean if the menu logic should be simplified without any viewport logic and position\n   * based on the relative position of the menu. This will most like require some additional\n   * styles applied to the menu.\n   *\n   * @see {@link Helpers/Layover#simplified}\n   */\n  simplifiedMenu: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#minLeft}\n   */\n  minLeft: Menu.propTypes.minLeft,\n\n  /**\n   * @see {@link Helpers/Layover#minRight}\n   */\n  minRight: Menu.propTypes.minLeft,\n\n  /**\n   * @see {@link Helpers/Layover#minBottom}\n   */\n  minBottom: Menu.propTypes.minBottom,\n\n  /**\n   * @see {@link Helpers/Layover#fillViewportWidth}\n   */\n  fillViewportWidth: PropTypes.bool,\n\n  /**\n   * @see {@link Helpers/Layover#fillViewportHeight}\n   */\n  fillViewportHeight: PropTypes.bool\n};\nDropdownMenu.defaultProps = {\n  defaultVisible: false,\n  repositionOnScroll: true,\n  repositionOnResize: false\n};\nexport default DropdownMenu;"]},"metadata":{},"sourceType":"module"}