{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport requiredForA11yIfNot from '../utils/PropTypes/requiredForA11yIfNot';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport contextTypes from './contextTypes';\n/**\n * The `DataTable` component is used to manage the state of all rows.\n * This can either be a __plain__ table or a __data__ table.\n *\n * A __data__ table will include checkboxes on each row while a __plain__ table\n * will not.\n */\n\nvar DataTable = function (_PureComponent) {\n  _inherits(DataTable, _PureComponent);\n\n  function DataTable(props) {\n    _classCallCheck(this, DataTable);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this));\n\n    _initialiseProps.call(_this);\n\n    var rows = props.defaultSelectedRows;\n    _this.state = {\n      header: false,\n      indeterminate: props.indeterminate ? false : undefined,\n      allSelected: _this._allSelected(rows),\n      selectedRows: rows\n    };\n    _this._removed = 0;\n    _this._initial = true;\n    return _this;\n  }\n\n  DataTable.prototype.getChildContext = function getChildContext() {\n    var _props = this.props,\n        checkedIcon = _props.checkedIcon,\n        uncheckedIcon = _props.uncheckedIcon,\n        indeterminateIcon = _props.indeterminateIcon,\n        plain = _props.plain,\n        baseId = _props.baseId,\n        selectableRows = _props.selectableRows,\n        checkboxHeaderLabel = _props.checkboxHeaderLabel,\n        checkboxLabelTemplate = _props.checkboxLabelTemplate,\n        fixedHeader = _props.fixedHeader,\n        fixedFooter = _props.fixedFooter,\n        checkedIconChildren = _props.checkedIconChildren,\n        checkedIconClassName = _props.checkedIconClassName,\n        uncheckedIconChildren = _props.uncheckedIconChildren,\n        uncheckedIconClassName = _props.uncheckedIconClassName,\n        indeterminateIconChildren = _props.indeterminateIconChildren,\n        indeterminateIconClassName = _props.indeterminateIconClassName;\n    return {\n      checkedIcon: getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon),\n      uncheckedIcon: getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon),\n      indeterminateIcon: getDeprecatedIcon(indeterminateIconClassName, indeterminateIconChildren, indeterminateIcon),\n      indeterminate: this.state.indeterminate,\n      plain: plain,\n      allSelected: this.state.allSelected,\n      selectedRows: this.state.selectedRows,\n      toggleSelectedRow: this._toggleSelectedRow,\n      createCheckbox: this._createCheckbox,\n      removeCheckbox: this._removeCheckbox,\n      baseId: baseId,\n      baseName: baseId + '-control',\n      selectableRows: selectableRows,\n      checkboxHeaderLabel: checkboxHeaderLabel,\n      checkboxLabelTemplate: checkboxLabelTemplate,\n      fixedHeader: fixedHeader,\n      fixedFooter: fixedFooter\n    };\n  };\n\n  DataTable.prototype.componentDidUpdate = function componentDidUpdate() {\n    this._removed = 0;\n    this._initial = false;\n  };\n\n  DataTable.prototype._allSelected = function _allSelected(rows) {\n    var all = rows.length !== 0;\n    rows.some(function (checked) {\n      if (!checked) {\n        all = false;\n      }\n\n      return !all;\n    });\n    return all;\n  };\n\n  DataTable.prototype.render = function render() {\n    var _cn;\n\n    var _props2 = this.props,\n        style = _props2.style,\n        className = _props2.className,\n        tableStyle = _props2.tableStyle,\n        tableClassName = _props2.tableClassName,\n        fixedWrapperStyle = _props2.fixedWrapperStyle,\n        fixedWrapperClassName = _props2.fixedWrapperClassName,\n        fixedScrollWrapperStyle = _props2.fixedScrollWrapperStyle,\n        fixedScrollWrapperClassName = _props2.fixedScrollWrapperClassName,\n        children = _props2.children,\n        plain = _props2.plain,\n        responsive = _props2.responsive,\n        fixedHeader = _props2.fixedHeader,\n        fixedFooter = _props2.fixedFooter,\n        fixedDividers = _props2.fixedDividers,\n        fixedHeight = _props2.fixedHeight,\n        fixedWidth = _props2.fixedWidth,\n        headerHeight = _props2.headerHeight,\n        footerHeight = _props2.footerHeight,\n        fullWidth = _props2.fullWidth,\n        indeterminate = _props2.indeterminate,\n        indeterminateIcon = _props2.indeterminateIcon,\n        checkedIcon = _props2.checkedIcon,\n        uncheckedIcon = _props2.uncheckedIcon,\n        defaultSelectedRows = _props2.defaultSelectedRows,\n        baseId = _props2.baseId,\n        onRowToggle = _props2.onRowToggle,\n        selectableRows = _props2.selectableRows,\n        checkboxHeaderLabel = _props2.checkboxHeaderLabel,\n        checkboxLabelTemplate = _props2.checkboxLabelTemplate,\n        checkedIconChildren = _props2.checkedIconChildren,\n        checkedIconClassName = _props2.checkedIconClassName,\n        uncheckedIconChildren = _props2.uncheckedIconChildren,\n        uncheckedIconClassName = _props2.uncheckedIconClassName,\n        indeterminateIconChildren = _props2.indeterminateIconChildren,\n        indeterminateIconClassName = _props2.indeterminateIconClassName,\n        props = _objectWithoutProperties(_props2, ['style', 'className', 'tableStyle', 'tableClassName', 'fixedWrapperStyle', 'fixedWrapperClassName', 'fixedScrollWrapperStyle', 'fixedScrollWrapperClassName', 'children', 'plain', 'responsive', 'fixedHeader', 'fixedFooter', 'fixedDividers', 'fixedHeight', 'fixedWidth', 'headerHeight', 'footerHeight', 'fullWidth', 'indeterminate', 'indeterminateIcon', 'checkedIcon', 'uncheckedIcon', 'defaultSelectedRows', 'baseId', 'onRowToggle', 'selectableRows', 'checkboxHeaderLabel', 'checkboxLabelTemplate', 'checkedIconChildren', 'checkedIconClassName', 'uncheckedIconChildren', 'uncheckedIconClassName', 'indeterminateIconChildren', 'indeterminateIconClassName']);\n\n    var table = React.createElement('table', _extends({}, props, {\n      ref: this._setTable,\n      style: responsive ? tableStyle : style,\n      className: cn('md-data-table', (_cn = {\n        'md-data-table--plain': plain,\n        'md-data-table--full-width': fullWidth\n      }, _cn[className] = !responsive && className, _cn[tableClassName] = responsive && tableClassName, _cn))\n    }), children);\n\n    if (!responsive) {\n      return table;\n    }\n\n    var content = table;\n\n    if (fixedHeader || fixedFooter) {\n      var height = fixedHeight;\n\n      if (fixedHeight) {\n        if (fixedHeader) {\n          height -= headerHeight;\n        }\n\n        if (fixedFooter) {\n          height -= footerHeight;\n        }\n      }\n\n      var borderTop = fixedHeader;\n      var borderBot = fixedFooter;\n\n      if (typeof fixedDividers === 'boolean') {\n        borderTop = borderTop && fixedDividers;\n        borderBot = borderBot && fixedDividers;\n      } else {\n        borderTop = borderTop && (typeof fixedDividers.header === 'undefined' || fixedDividers.header);\n        borderBot = borderBot && (typeof fixedDividers.footer === 'undefined' || fixedDividers.footer);\n      }\n\n      content = React.createElement('div', {\n        style: fixedWrapperStyle,\n        className: cn('md-data-table__fixed-wrapper', {\n          'md-data-table__fixed-wrapper--header': fixedHeader,\n          'md-data-table__fixed-wrapper--footer': fixedFooter\n        }, fixedWrapperClassName)\n      }, React.createElement('div', {\n        style: _extends({\n          height: height\n        }, fixedScrollWrapperStyle),\n        className: cn('md-data-table__scroll-wrapper', {\n          'md-divider-border': fixedDividers,\n          'md-divider-border--top': borderTop,\n          'md-divider-border--bottom': borderBot\n        }, fixedScrollWrapperClassName)\n      }, table));\n    }\n\n    return React.createElement('div', {\n      style: _extends({\n        width: fixedWidth\n      }, style),\n      className: cn('md-data-table--responsive', {\n        'md-data-table--fixed': fixedHeader || fixedFooter\n      }, className)\n    }, content);\n  };\n\n  return DataTable;\n}(PureComponent);\n\nDataTable.propTypes = {\n  /**\n   * A base id to use for every checkbox or `EditDialogColumn` in the data table. This is\n   * required for a11y if the data table is not plain. It is recommended to always provide\n   * this prop if you are using any of the advanced table components to auto-generate unique\n   * ids for each element.\n   *\n   * @see {@link DataTables/EditDialogColumn}\n   * @see {@link DataTables/SelectFieldColumn}\n   * @see {@link DataTables/DropdownMenuColumn}\n   * @see {@link DataTables/MenuButtonColumn}\n   * @see {@link DataTables/TablePagination}\n   */\n  baseId: requiredForA11yIfNot(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'plain'),\n\n  /**\n   * Optional style to apply to the table. If the table is `responsive`, this will be applied to the surrounding `div`\n   * instead of the table itself. Use the `tableStyle` in this case.\n   *\n   * @see {@link #tableStyle}\n   * @see {@link #responsive}\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the table. If the table is `responsive`, this will be applied to the\n   * surrounding `div` instead of the table itself. Use the `tableClassName` in this case.\n   *\n   * @see {@link #tableClassName}\n   * @see {@link #responsive}\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\n   * `responsive`, use the `style` prop.\n   *\n   * @see {@link #style}\n   * @see {@link #responsive}\n   */\n  tableStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\n   * `responsive`, use the `className` prop.\n   *\n   * @see {@link #className}\n   * @see {@link #responsive}\n   */\n  tableClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the fixed table wrapper that appears when there is a fixed\n   * header or a fixed footer.\n   *\n   * @see {@link #fixedHeader}\n   * @see {@link #fixedFooter}\n   * @see {@link #fixedWrapperClassName}\n   * @see {@link #fixedScrollWrapperStyle}\n   * @see {@link #fixedScrollWrapperClassName}\n   */\n  fixedWrapperStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the fixed table wrapper that appears when there is a fixed\n   * header or a fixed footer.\n   *\n   * @see {@link #fixedHeader}\n   * @see {@link #fixedFooter}\n   * @see {@link #fixedWrapperStyle}\n   * @see {@link #fixedScrollWrapperStyle}\n   * @see {@link #fixedScrollWrapperClassName}\n   */\n  fixedWrapperClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the fixed table wrapper's scroll container that appears when there is a fixed\n   * header or a fixed footer.\n   *\n   * @see {@link #fixedHeader}\n   * @see {@link #fixedFooter}\n   * @see {@link #fixedWrapperStyle}\n   * @see {@link #fixedWrapperClassName}\n   * @see {@link #fixedScrollWrapperStyle}\n   */\n  fixedScrollWrapperStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the fixed table wrapper's scroll container that appears when there is a fixed\n   * header or a fixed footer.\n   *\n   * @see {@link #fixedHeader}\n   * @see {@link #fixedFooter}\n   * @see {@link #fixedWrapperStyle}\n   * @see {@link #fixedWrapperClassName}\n   * @see {@link #fixedScrollWrapperStyle}\n   */\n  fixedScrollWrapperClassName: PropTypes.string,\n\n  /**\n   * The table contents to display. This *should* be a list of `TableHeader` and `TableBody`\n   * components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * An optional array of booleans denoting if a row is selected.\n   * This is an associative array so the index must match the row\n   * number in the `TableBody` component.\n   */\n  defaultSelectedRows: PropTypes.arrayOf(PropTypes.bool).isRequired,\n\n  /**\n   * Boolean if the table is responsive. This will wrap the table in a container\n   * that allows scrolling to the right if overflow exists.\n   */\n  responsive: PropTypes.bool.isRequired,\n\n  /**\n   * Boolean if this table should not include the checkboxes on each row.\n   * This really means that the entire table is unselectable and you wish\n   * to display as a normal table.\n   */\n  plain: PropTypes.bool,\n\n  /**\n   * The checked checkbox icon to display when a row is selected. This really defaults\n   * to the `checkedCheckboxIcon` prop from the `SelectionControl`.\n   *\n   * @see {@link SelectionControls/SelectionControl#checkedCheckboxIcon}\n   */\n  checkedIcon: PropTypes.element,\n\n  /**\n   * The unchecked checkbox icon to display when a row is selected. This really defaults\n   * to the `uncheckedCheckboxIcon` prop from the `SelectionControl`.\n   *\n   * @see {@link SelectionControls/SelectionControl#uncheckedCheckboxIcon}\n   */\n  uncheckedIcon: PropTypes.element,\n\n  /**\n   * An optional function to call when a non-plain data table has a row toggled. The callback\n   * will include:\n   * - the row id\n   * - boolean if the row is now checked\n   * - the total count of rows selected\n   * - the change event\n   *\n   * All rows will be toggled on or off when the row id is 0 and a `thead` exists in the table.\n   */\n  onRowToggle: invalidIf(PropTypes.func, 'plain'),\n\n  /**\n   * Boolean if the `DataTable` should inject checkboxes at the start of each row.\n   */\n  selectableRows: PropTypes.bool,\n\n  /**\n   * Boolean if the checkboxes in the table should also include an _indeterminate_ state.\n   * It will use the `indeterminateIconChildren` and `indeterminateIconClassName` when at least\n   * 1 row has been checked, but not all rows.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * An optional icon to display when the selected state is indeterminate.\n   *\n   * @see {@link #indeterminate}\n   */\n  indeterminateIcon: PropTypes.element,\n\n  /**\n   * This is the aria-label to apply to the checkbox in the table's header. This\n   * is just used for accessibility since the checkboxes have no visible label.\n   */\n  checkboxHeaderLabel: PropTypes.string.isRequired,\n\n  /**\n   * This is the aria-label to apply to a checkbox in the table's body. This can either\n   * be a constant string that will replace `{{row}}` with the current row index, or\n   * a function that takes the row index and returns a string.\n   *\n   * ```js\n   * checkboxLabelTemplate={rowIndex => `Toggle row ${row}`}\n   * ```\n   */\n  checkboxLabelTemplate: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired,\n\n  /**\n   * Boolean if the table should include a fixed header. This will allow the `TableHeader` component\n   * to stay fixed to the top of the table while the `TableBody` scrolls horizontally.\n   *\n   * @see {@link #fixedFooter}\n   * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\n   */\n  fixedHeader: PropTypes.bool,\n\n  /**\n   * Boolean if the table should include a fixed footer. This will allow the `TableFooter` component\n   * to stay fixed to the bottom of the table while the `TableBody` scrolls horizontally.\n   *\n   * @see {@link #fixedHeader}\n   * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\n   */\n  fixedFooter: PropTypes.bool,\n\n  /**\n   * Either a boolean or a shape of booleans for if a divider should appear at the top or bottom of the table\n   * when there is a fixed header/footer. By default, this will automatically create dividers.\n   *\n   * @see {@link #fixedHeader}\n   * @see {@link #fixedFooter}\n   */\n  fixedDividers: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    header: PropTypes.bool,\n    footer: PropTypes.bool\n  })]),\n\n  /**\n   * An optional height to set for a table with a fixed header and/or a fixed footer. It is recommended to use\n   * the related `react-md-make-fixed-table` mixin instead.\n   *\n   * @see {@link #headerHeight}\n   * @see {@link #footerHeight}\n   */\n  fixedHeight: PropTypes.number,\n\n  /**\n   * An optional width to set for a table with a fixed header and/or a fixed footer. It is recommended to use\n   * the related `react-md-make-fixed-table` mixin instead.\n   */\n  fixedWidth: PropTypes.number,\n\n  /**\n   * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\n   * variable.\n   *\n   * @see [md-data-table-header-height](/components/data-tables?tab=2#variable-md-data-table-header-height)\n   * @see {@link #fixedHeight}\n   */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\n   * variable.\n   *\n   * @see [md-data-table-column-height](/components/data-tables?tab=2#variable-md-data-table-column-height)\n   * @see {@link #fixedHeight}\n   */\n  footerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Boolean if the `<table>` element should always span the entire width of its container.\n   */\n  fullWidth: PropTypes.bool,\n  indeterminateIconChildren: deprecated(PropTypes.node, 'Use the `indeterminateIcon` prop instead'),\n  indeterminateIconClassName: deprecated(PropTypes.string, 'Use the `indeterminateIcon` prop instead'),\n  checkedIconClassName: deprecated(PropTypes.string, 'Use the `checkedIcon` prop instead'),\n  checkedIconChildren: deprecated(PropTypes.node, 'Use the `checkedIcon` prop instead'),\n  uncheckedIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedIcon` prop instead'),\n  uncheckedIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedIcon` prop instead')\n};\nDataTable.defaultProps = {\n  indeterminateIcon: React.createElement(FontIcon, null, 'indeterminate_check_box'),\n  defaultSelectedRows: [],\n  responsive: true,\n  selectableRows: true,\n  checkboxHeaderLabel: 'Toggle All Rows',\n  checkboxLabelTemplate: 'Toggle row {{row}}',\n  fixedHeader: false,\n  fixedFooter: false,\n  fixedDividers: true,\n  headerHeight: 56,\n  footerHeight: 48,\n  fullWidth: true\n};\nDataTable.childContextTypes = contextTypes;\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setTable = function (table) {\n    _this2._table = table;\n  };\n\n  this._createCheckbox = function (index) {\n    _this2.setState(function (state, props) {\n      var selectedRows = state.selectedRows.slice(); // Only use the default selected rows prop on first mount. If other changes occur after,\n      // default to false.\n\n      var selected = _this2._initial && props.defaultSelectedRows[index] || false;\n      selectedRows.splice(index, 0, selected);\n      return {\n        selectedRows: selectedRows,\n        allSelected: _this2._allSelected(selectedRows)\n      };\n    });\n  };\n\n  this._removeCheckbox = function (index) {\n    _this2.setState(function (state) {\n      // When multiple checkboxes are removed in a render cycle, they are removed in list order.\n      // So to keep the index correct while removing, need to keep subtract the provided index by\n      // the current number of removed elements. This value gets reset to 0 after a finished cycle.\n      var selectedRows = state.selectedRows.slice(); // This is really ugly. React 16 doesn't need to track all this while React 15 does\n\n      if (React.version && React.version.match(/^16\\./)) {\n        selectedRows.splice(index, 1);\n      } else {\n        selectedRows.splice(index - _this2._removed, 1);\n        _this2._removed += 1;\n      }\n\n      return {\n        selectedRows: selectedRows,\n        allSelected: _this2._allSelected(selectedRows)\n      };\n    });\n  };\n\n  this._toggleSelectedRow = function (row, header, e) {\n    var selectedRows = void 0;\n    var allSelected = _this2.state.allSelected;\n    var selectedCount = 0;\n    var i = _this2._table && _this2._table.querySelector('.md-table-header') ? row - 1 : row;\n    var checked = e.target.checked;\n\n    if (header) {\n      selectedRows = _this2.state.selectedRows.map(function () {\n        return checked;\n      });\n      allSelected = checked;\n      selectedCount = !checked ? 0 : selectedRows.length;\n    } else {\n      selectedRows = _this2.state.selectedRows.slice();\n      selectedRows[i] = !selectedRows[i];\n      selectedCount = selectedRows.filter(function (b) {\n        return b;\n      }).length;\n      allSelected = selectedCount === selectedRows.length;\n    }\n\n    if (_this2.props.onRowToggle) {\n      _this2.props.onRowToggle(row, checked, selectedCount, e);\n    }\n\n    var indeterminate = _this2.props.indeterminate && !allSelected && selectedCount > 0;\n\n    _this2.setState({\n      selectedRows: selectedRows,\n      allSelected: allSelected,\n      indeterminate: indeterminate\n    });\n  };\n};\n\nexport default DataTable;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/DataTables/DataTable.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","cn","deprecated","requiredForA11yIfNot","invalidIf","FontIcon","getDeprecatedIcon","contextTypes","DataTable","_PureComponent","props","_this","_initialiseProps","rows","defaultSelectedRows","state","header","indeterminate","undefined","allSelected","_allSelected","selectedRows","_removed","_initial","getChildContext","_props","checkedIcon","uncheckedIcon","indeterminateIcon","plain","baseId","selectableRows","checkboxHeaderLabel","checkboxLabelTemplate","fixedHeader","fixedFooter","checkedIconChildren","checkedIconClassName","uncheckedIconChildren","uncheckedIconClassName","indeterminateIconChildren","indeterminateIconClassName","toggleSelectedRow","_toggleSelectedRow","createCheckbox","_createCheckbox","removeCheckbox","_removeCheckbox","baseName","componentDidUpdate","all","some","checked","render","_cn","_props2","style","className","tableStyle","tableClassName","fixedWrapperStyle","fixedWrapperClassName","fixedScrollWrapperStyle","fixedScrollWrapperClassName","children","responsive","fixedDividers","fixedHeight","fixedWidth","headerHeight","footerHeight","fullWidth","onRowToggle","table","createElement","ref","_setTable","content","height","borderTop","borderBot","footer","width","propTypes","oneOfType","number","string","object","node","isRequired","arrayOf","bool","element","func","shape","defaultProps","childContextTypes","_this2","_table","index","setState","slice","selected","splice","version","match","row","e","selectedCount","querySelector","map","filter","b"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport requiredForA11yIfNot from '../utils/PropTypes/requiredForA11yIfNot';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport contextTypes from './contextTypes';\n\n/**\n * The `DataTable` component is used to manage the state of all rows.\n * This can either be a __plain__ table or a __data__ table.\n *\n * A __data__ table will include checkboxes on each row while a __plain__ table\n * will not.\n */\n\nvar DataTable = function (_PureComponent) {\n  _inherits(DataTable, _PureComponent);\n\n  function DataTable(props) {\n    _classCallCheck(this, DataTable);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this));\n\n    _initialiseProps.call(_this);\n\n    var rows = props.defaultSelectedRows;\n    _this.state = {\n      header: false,\n      indeterminate: props.indeterminate ? false : undefined,\n      allSelected: _this._allSelected(rows),\n      selectedRows: rows\n    };\n\n    _this._removed = 0;\n    _this._initial = true;\n    return _this;\n  }\n\n  DataTable.prototype.getChildContext = function getChildContext() {\n    var _props = this.props,\n        checkedIcon = _props.checkedIcon,\n        uncheckedIcon = _props.uncheckedIcon,\n        indeterminateIcon = _props.indeterminateIcon,\n        plain = _props.plain,\n        baseId = _props.baseId,\n        selectableRows = _props.selectableRows,\n        checkboxHeaderLabel = _props.checkboxHeaderLabel,\n        checkboxLabelTemplate = _props.checkboxLabelTemplate,\n        fixedHeader = _props.fixedHeader,\n        fixedFooter = _props.fixedFooter,\n        checkedIconChildren = _props.checkedIconChildren,\n        checkedIconClassName = _props.checkedIconClassName,\n        uncheckedIconChildren = _props.uncheckedIconChildren,\n        uncheckedIconClassName = _props.uncheckedIconClassName,\n        indeterminateIconChildren = _props.indeterminateIconChildren,\n        indeterminateIconClassName = _props.indeterminateIconClassName;\n\n\n    return {\n      checkedIcon: getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon),\n      uncheckedIcon: getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon),\n      indeterminateIcon: getDeprecatedIcon(indeterminateIconClassName, indeterminateIconChildren, indeterminateIcon),\n      indeterminate: this.state.indeterminate,\n      plain: plain,\n      allSelected: this.state.allSelected,\n      selectedRows: this.state.selectedRows,\n      toggleSelectedRow: this._toggleSelectedRow,\n      createCheckbox: this._createCheckbox,\n      removeCheckbox: this._removeCheckbox,\n      baseId: baseId,\n      baseName: baseId + '-control',\n      selectableRows: selectableRows,\n      checkboxHeaderLabel: checkboxHeaderLabel,\n      checkboxLabelTemplate: checkboxLabelTemplate,\n      fixedHeader: fixedHeader,\n      fixedFooter: fixedFooter\n    };\n  };\n\n  DataTable.prototype.componentDidUpdate = function componentDidUpdate() {\n    this._removed = 0;\n    this._initial = false;\n  };\n\n  DataTable.prototype._allSelected = function _allSelected(rows) {\n    var all = rows.length !== 0;\n    rows.some(function (checked) {\n      if (!checked) {\n        all = false;\n      }\n\n      return !all;\n    });\n\n    return all;\n  };\n\n  DataTable.prototype.render = function render() {\n    var _cn;\n\n    var _props2 = this.props,\n        style = _props2.style,\n        className = _props2.className,\n        tableStyle = _props2.tableStyle,\n        tableClassName = _props2.tableClassName,\n        fixedWrapperStyle = _props2.fixedWrapperStyle,\n        fixedWrapperClassName = _props2.fixedWrapperClassName,\n        fixedScrollWrapperStyle = _props2.fixedScrollWrapperStyle,\n        fixedScrollWrapperClassName = _props2.fixedScrollWrapperClassName,\n        children = _props2.children,\n        plain = _props2.plain,\n        responsive = _props2.responsive,\n        fixedHeader = _props2.fixedHeader,\n        fixedFooter = _props2.fixedFooter,\n        fixedDividers = _props2.fixedDividers,\n        fixedHeight = _props2.fixedHeight,\n        fixedWidth = _props2.fixedWidth,\n        headerHeight = _props2.headerHeight,\n        footerHeight = _props2.footerHeight,\n        fullWidth = _props2.fullWidth,\n        indeterminate = _props2.indeterminate,\n        indeterminateIcon = _props2.indeterminateIcon,\n        checkedIcon = _props2.checkedIcon,\n        uncheckedIcon = _props2.uncheckedIcon,\n        defaultSelectedRows = _props2.defaultSelectedRows,\n        baseId = _props2.baseId,\n        onRowToggle = _props2.onRowToggle,\n        selectableRows = _props2.selectableRows,\n        checkboxHeaderLabel = _props2.checkboxHeaderLabel,\n        checkboxLabelTemplate = _props2.checkboxLabelTemplate,\n        checkedIconChildren = _props2.checkedIconChildren,\n        checkedIconClassName = _props2.checkedIconClassName,\n        uncheckedIconChildren = _props2.uncheckedIconChildren,\n        uncheckedIconClassName = _props2.uncheckedIconClassName,\n        indeterminateIconChildren = _props2.indeterminateIconChildren,\n        indeterminateIconClassName = _props2.indeterminateIconClassName,\n        props = _objectWithoutProperties(_props2, ['style', 'className', 'tableStyle', 'tableClassName', 'fixedWrapperStyle', 'fixedWrapperClassName', 'fixedScrollWrapperStyle', 'fixedScrollWrapperClassName', 'children', 'plain', 'responsive', 'fixedHeader', 'fixedFooter', 'fixedDividers', 'fixedHeight', 'fixedWidth', 'headerHeight', 'footerHeight', 'fullWidth', 'indeterminate', 'indeterminateIcon', 'checkedIcon', 'uncheckedIcon', 'defaultSelectedRows', 'baseId', 'onRowToggle', 'selectableRows', 'checkboxHeaderLabel', 'checkboxLabelTemplate', 'checkedIconChildren', 'checkedIconClassName', 'uncheckedIconChildren', 'uncheckedIconClassName', 'indeterminateIconChildren', 'indeterminateIconClassName']);\n\n    var table = React.createElement(\n      'table',\n      _extends({}, props, {\n        ref: this._setTable,\n        style: responsive ? tableStyle : style,\n        className: cn('md-data-table', (_cn = {\n          'md-data-table--plain': plain,\n          'md-data-table--full-width': fullWidth\n        }, _cn[className] = !responsive && className, _cn[tableClassName] = responsive && tableClassName, _cn))\n      }),\n      children\n    );\n\n    if (!responsive) {\n      return table;\n    }\n\n    var content = table;\n    if (fixedHeader || fixedFooter) {\n      var height = fixedHeight;\n      if (fixedHeight) {\n        if (fixedHeader) {\n          height -= headerHeight;\n        }\n\n        if (fixedFooter) {\n          height -= footerHeight;\n        }\n      }\n\n      var borderTop = fixedHeader;\n      var borderBot = fixedFooter;\n      if (typeof fixedDividers === 'boolean') {\n        borderTop = borderTop && fixedDividers;\n        borderBot = borderBot && fixedDividers;\n      } else {\n        borderTop = borderTop && (typeof fixedDividers.header === 'undefined' || fixedDividers.header);\n        borderBot = borderBot && (typeof fixedDividers.footer === 'undefined' || fixedDividers.footer);\n      }\n\n      content = React.createElement(\n        'div',\n        {\n          style: fixedWrapperStyle,\n          className: cn('md-data-table__fixed-wrapper', {\n            'md-data-table__fixed-wrapper--header': fixedHeader,\n            'md-data-table__fixed-wrapper--footer': fixedFooter\n          }, fixedWrapperClassName)\n        },\n        React.createElement(\n          'div',\n          {\n            style: _extends({ height: height }, fixedScrollWrapperStyle),\n            className: cn('md-data-table__scroll-wrapper', {\n              'md-divider-border': fixedDividers,\n              'md-divider-border--top': borderTop,\n              'md-divider-border--bottom': borderBot\n            }, fixedScrollWrapperClassName)\n          },\n          table\n        )\n      );\n    }\n\n    return React.createElement(\n      'div',\n      {\n        style: _extends({ width: fixedWidth }, style),\n        className: cn('md-data-table--responsive', {\n          'md-data-table--fixed': fixedHeader || fixedFooter\n        }, className)\n      },\n      content\n    );\n  };\n\n  return DataTable;\n}(PureComponent);\n\nDataTable.propTypes = {\n  /**\n   * A base id to use for every checkbox or `EditDialogColumn` in the data table. This is\n   * required for a11y if the data table is not plain. It is recommended to always provide\n   * this prop if you are using any of the advanced table components to auto-generate unique\n   * ids for each element.\n   *\n   * @see {@link DataTables/EditDialogColumn}\n   * @see {@link DataTables/SelectFieldColumn}\n   * @see {@link DataTables/DropdownMenuColumn}\n   * @see {@link DataTables/MenuButtonColumn}\n   * @see {@link DataTables/TablePagination}\n   */\n  baseId: requiredForA11yIfNot(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'plain'),\n\n  /**\n   * Optional style to apply to the table. If the table is `responsive`, this will be applied to the surrounding `div`\n   * instead of the table itself. Use the `tableStyle` in this case.\n   *\n   * @see {@link #tableStyle}\n   * @see {@link #responsive}\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the table. If the table is `responsive`, this will be applied to the\n   * surrounding `div` instead of the table itself. Use the `tableClassName` in this case.\n   *\n   * @see {@link #tableClassName}\n   * @see {@link #responsive}\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\n   * `responsive`, use the `style` prop.\n   *\n   * @see {@link #style}\n   * @see {@link #responsive}\n   */\n  tableStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\n   * `responsive`, use the `className` prop.\n   *\n   * @see {@link #className}\n   * @see {@link #responsive}\n   */\n  tableClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the fixed table wrapper that appears when there is a fixed\n   * header or a fixed footer.\n   *\n   * @see {@link #fixedHeader}\n   * @see {@link #fixedFooter}\n   * @see {@link #fixedWrapperClassName}\n   * @see {@link #fixedScrollWrapperStyle}\n   * @see {@link #fixedScrollWrapperClassName}\n   */\n  fixedWrapperStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the fixed table wrapper that appears when there is a fixed\n   * header or a fixed footer.\n   *\n   * @see {@link #fixedHeader}\n   * @see {@link #fixedFooter}\n   * @see {@link #fixedWrapperStyle}\n   * @see {@link #fixedScrollWrapperStyle}\n   * @see {@link #fixedScrollWrapperClassName}\n   */\n  fixedWrapperClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the fixed table wrapper's scroll container that appears when there is a fixed\n   * header or a fixed footer.\n   *\n   * @see {@link #fixedHeader}\n   * @see {@link #fixedFooter}\n   * @see {@link #fixedWrapperStyle}\n   * @see {@link #fixedWrapperClassName}\n   * @see {@link #fixedScrollWrapperStyle}\n   */\n  fixedScrollWrapperStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the fixed table wrapper's scroll container that appears when there is a fixed\n   * header or a fixed footer.\n   *\n   * @see {@link #fixedHeader}\n   * @see {@link #fixedFooter}\n   * @see {@link #fixedWrapperStyle}\n   * @see {@link #fixedWrapperClassName}\n   * @see {@link #fixedScrollWrapperStyle}\n   */\n  fixedScrollWrapperClassName: PropTypes.string,\n\n  /**\n   * The table contents to display. This *should* be a list of `TableHeader` and `TableBody`\n   * components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * An optional array of booleans denoting if a row is selected.\n   * This is an associative array so the index must match the row\n   * number in the `TableBody` component.\n   */\n  defaultSelectedRows: PropTypes.arrayOf(PropTypes.bool).isRequired,\n\n  /**\n   * Boolean if the table is responsive. This will wrap the table in a container\n   * that allows scrolling to the right if overflow exists.\n   */\n  responsive: PropTypes.bool.isRequired,\n\n  /**\n   * Boolean if this table should not include the checkboxes on each row.\n   * This really means that the entire table is unselectable and you wish\n   * to display as a normal table.\n   */\n  plain: PropTypes.bool,\n\n  /**\n   * The checked checkbox icon to display when a row is selected. This really defaults\n   * to the `checkedCheckboxIcon` prop from the `SelectionControl`.\n   *\n   * @see {@link SelectionControls/SelectionControl#checkedCheckboxIcon}\n   */\n  checkedIcon: PropTypes.element,\n\n  /**\n   * The unchecked checkbox icon to display when a row is selected. This really defaults\n   * to the `uncheckedCheckboxIcon` prop from the `SelectionControl`.\n   *\n   * @see {@link SelectionControls/SelectionControl#uncheckedCheckboxIcon}\n   */\n  uncheckedIcon: PropTypes.element,\n\n  /**\n   * An optional function to call when a non-plain data table has a row toggled. The callback\n   * will include:\n   * - the row id\n   * - boolean if the row is now checked\n   * - the total count of rows selected\n   * - the change event\n   *\n   * All rows will be toggled on or off when the row id is 0 and a `thead` exists in the table.\n   */\n  onRowToggle: invalidIf(PropTypes.func, 'plain'),\n\n  /**\n   * Boolean if the `DataTable` should inject checkboxes at the start of each row.\n   */\n  selectableRows: PropTypes.bool,\n\n  /**\n   * Boolean if the checkboxes in the table should also include an _indeterminate_ state.\n   * It will use the `indeterminateIconChildren` and `indeterminateIconClassName` when at least\n   * 1 row has been checked, but not all rows.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * An optional icon to display when the selected state is indeterminate.\n   *\n   * @see {@link #indeterminate}\n   */\n  indeterminateIcon: PropTypes.element,\n\n  /**\n   * This is the aria-label to apply to the checkbox in the table's header. This\n   * is just used for accessibility since the checkboxes have no visible label.\n   */\n  checkboxHeaderLabel: PropTypes.string.isRequired,\n\n  /**\n   * This is the aria-label to apply to a checkbox in the table's body. This can either\n   * be a constant string that will replace `{{row}}` with the current row index, or\n   * a function that takes the row index and returns a string.\n   *\n   * ```js\n   * checkboxLabelTemplate={rowIndex => `Toggle row ${row}`}\n   * ```\n   */\n  checkboxLabelTemplate: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired,\n\n  /**\n   * Boolean if the table should include a fixed header. This will allow the `TableHeader` component\n   * to stay fixed to the top of the table while the `TableBody` scrolls horizontally.\n   *\n   * @see {@link #fixedFooter}\n   * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\n   */\n  fixedHeader: PropTypes.bool,\n\n  /**\n   * Boolean if the table should include a fixed footer. This will allow the `TableFooter` component\n   * to stay fixed to the bottom of the table while the `TableBody` scrolls horizontally.\n   *\n   * @see {@link #fixedHeader}\n   * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\n   */\n  fixedFooter: PropTypes.bool,\n\n  /**\n   * Either a boolean or a shape of booleans for if a divider should appear at the top or bottom of the table\n   * when there is a fixed header/footer. By default, this will automatically create dividers.\n   *\n   * @see {@link #fixedHeader}\n   * @see {@link #fixedFooter}\n   */\n  fixedDividers: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    header: PropTypes.bool,\n    footer: PropTypes.bool\n  })]),\n\n  /**\n   * An optional height to set for a table with a fixed header and/or a fixed footer. It is recommended to use\n   * the related `react-md-make-fixed-table` mixin instead.\n   *\n   * @see {@link #headerHeight}\n   * @see {@link #footerHeight}\n   */\n  fixedHeight: PropTypes.number,\n\n  /**\n   * An optional width to set for a table with a fixed header and/or a fixed footer. It is recommended to use\n   * the related `react-md-make-fixed-table` mixin instead.\n   */\n  fixedWidth: PropTypes.number,\n\n  /**\n   * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\n   * variable.\n   *\n   * @see [md-data-table-header-height](/components/data-tables?tab=2#variable-md-data-table-header-height)\n   * @see {@link #fixedHeight}\n   */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\n   * variable.\n   *\n   * @see [md-data-table-column-height](/components/data-tables?tab=2#variable-md-data-table-column-height)\n   * @see {@link #fixedHeight}\n   */\n  footerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Boolean if the `<table>` element should always span the entire width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  indeterminateIconChildren: deprecated(PropTypes.node, 'Use the `indeterminateIcon` prop instead'),\n  indeterminateIconClassName: deprecated(PropTypes.string, 'Use the `indeterminateIcon` prop instead'),\n  checkedIconClassName: deprecated(PropTypes.string, 'Use the `checkedIcon` prop instead'),\n  checkedIconChildren: deprecated(PropTypes.node, 'Use the `checkedIcon` prop instead'),\n  uncheckedIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedIcon` prop instead'),\n  uncheckedIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedIcon` prop instead')\n};\nDataTable.defaultProps = {\n  indeterminateIcon: React.createElement(\n    FontIcon,\n    null,\n    'indeterminate_check_box'\n  ),\n  defaultSelectedRows: [],\n  responsive: true,\n  selectableRows: true,\n  checkboxHeaderLabel: 'Toggle All Rows',\n  checkboxLabelTemplate: 'Toggle row {{row}}',\n  fixedHeader: false,\n  fixedFooter: false,\n  fixedDividers: true,\n  headerHeight: 56,\n  footerHeight: 48,\n  fullWidth: true\n};\nDataTable.childContextTypes = contextTypes;\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setTable = function (table) {\n    _this2._table = table;\n  };\n\n  this._createCheckbox = function (index) {\n    _this2.setState(function (state, props) {\n      var selectedRows = state.selectedRows.slice();\n      // Only use the default selected rows prop on first mount. If other changes occur after,\n      // default to false.\n      var selected = _this2._initial && props.defaultSelectedRows[index] || false;\n      selectedRows.splice(index, 0, selected);\n      return { selectedRows: selectedRows, allSelected: _this2._allSelected(selectedRows) };\n    });\n  };\n\n  this._removeCheckbox = function (index) {\n    _this2.setState(function (state) {\n      // When multiple checkboxes are removed in a render cycle, they are removed in list order.\n      // So to keep the index correct while removing, need to keep subtract the provided index by\n      // the current number of removed elements. This value gets reset to 0 after a finished cycle.\n      var selectedRows = state.selectedRows.slice();\n\n      // This is really ugly. React 16 doesn't need to track all this while React 15 does\n      if (React.version && React.version.match(/^16\\./)) {\n        selectedRows.splice(index, 1);\n      } else {\n        selectedRows.splice(index - _this2._removed, 1);\n        _this2._removed += 1;\n      }\n      return { selectedRows: selectedRows, allSelected: _this2._allSelected(selectedRows) };\n    });\n  };\n\n  this._toggleSelectedRow = function (row, header, e) {\n    var selectedRows = void 0;\n    var allSelected = _this2.state.allSelected;\n    var selectedCount = 0;\n    var i = _this2._table && _this2._table.querySelector('.md-table-header') ? row - 1 : row;\n    var checked = e.target.checked;\n\n    if (header) {\n      selectedRows = _this2.state.selectedRows.map(function () {\n        return checked;\n      });\n      allSelected = checked;\n      selectedCount = !checked ? 0 : selectedRows.length;\n    } else {\n      selectedRows = _this2.state.selectedRows.slice();\n      selectedRows[i] = !selectedRows[i];\n      selectedCount = selectedRows.filter(function (b) {\n        return b;\n      }).length;\n      allSelected = selectedCount === selectedRows.length;\n    }\n\n    if (_this2.props.onRowToggle) {\n      _this2.props.onRowToggle(row, checked, selectedCount, e);\n    }\n\n    var indeterminate = _this2.props.indeterminate && !allSelected && selectedCount > 0;\n\n    _this2.setState({ selectedRows: selectedRows, allSelected: allSelected, indeterminate: indeterminate });\n  };\n};\n\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}