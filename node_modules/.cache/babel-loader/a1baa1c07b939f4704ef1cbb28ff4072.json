{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint-disable no-shadow */\n\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport { ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport controlled from '../utils/PropTypes/controlled';\nimport DateTimeFormat from '../utils/DateUtils/DateTimeFormat';\nimport formatTime from '../utils/DateUtils/formatTime';\nimport extractTimeParts from '../utils/DateUtils/extractTimeParts';\nimport Dialog from '../Dialogs/DialogContainer';\nimport FontIcon from '../FontIcons/FontIcon';\nimport TextField from '../TextFields/TextField';\nimport Collapse from '../Helpers/Collapse';\nimport TimePicker from './TimePicker';\n/**\n * The `TimePickerContainer` component is a wrapper for the main `TimePicker` component\n * to manage the state and _logic_ for rendering the `TimePicker`. This component will\n * either render inline or in a `Dialog` depending if the `inline` prop is set\n * to `true`.\n *\n * NOTE: This component is actually exported as `TimePicker` when using the `import { member }` syntax.\n * The following two lines are equivalent:\n *\n * ```js\n * import { TimePicker } from 'react-md/lib/Pickers';\n * import TimePicker from 'react-md/lib/Pickers/TimePickerContainer';\n * ```\n */\n\nvar TimePickerContainer = function (_PureComponent) {\n  _inherits(TimePickerContainer, _PureComponent);\n\n  function TimePickerContainer(props) {\n    _classCallCheck(this, TimePickerContainer);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var initialDate = void 0;\n\n    if (props.defaultValue) {\n      initialDate = new Date(props.defaultValue);\n    } else if (props.value) {\n      initialDate = new Date(props.value);\n    } else {\n      initialDate = new Date();\n    }\n\n    var visible = typeof props.initiallyOpen !== 'undefined' ? props.initiallyOpen : !!props.defaultVisible;\n    _this.state = _extends({\n      visible: visible\n    }, _this._getTimeParts(initialDate, props), {\n      value: props.defaultValue,\n      time: initialDate,\n      timeMode: props.initialTimeMode || props.defaultTimeMode,\n      tempTime: initialDate\n    });\n    return _this;\n  }\n\n  TimePickerContainer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      var time = nextProps.value || new Date();\n      this.setState(_extends({\n        tempTime: time\n      }, this._getTimeParts(time, nextProps)));\n    }\n  };\n\n  TimePickerContainer.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var _props = this.props,\n        inline = _props.inline,\n        isOpen = _props.isOpen;\n    var visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n    var pVisible = typeof prevProps.isOpen !== 'undefined' ? prevProps.isOpen : getField(prevProps, prevState, 'visible');\n\n    if (visible === pVisible) {\n      return;\n    }\n\n    if (visible) {\n      if (inline) {\n        handleWindowClickListeners(this._handleOutsideClick, true);\n        window.addEventListener('keydown', this._closeOnEsc);\n      }\n    } else if (inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  };\n\n  TimePickerContainer.prototype.componentWillUnmount = function componentWillUnmount() {\n    var visible = typeof this.props.isOpen !== 'undefined' ? this.props.isOpen : getField(this.props, this.state, 'visible');\n\n    if (visible && this.props.inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  };\n\n  TimePickerContainer.prototype._getTimeParts = function _getTimeParts(date, props) {\n    return extractTimeParts(props.DateTimeFormat, props.locales, props.showSeconds, date);\n  };\n\n  TimePickerContainer.prototype._getTextFieldValue = function _getTextFieldValue(props, state) {\n    var DateTimeFormat = props.DateTimeFormat,\n        locales = props.locales,\n        showSeconds = props.showSeconds;\n    var value = getField(props, state, 'value');\n\n    if (!value) {\n      return '';\n    } else if (value instanceof Date) {\n      return formatTime(DateTimeFormat, locales, showSeconds, value);\n    } else {\n      // currently don't support value of string\n      return value;\n    }\n  };\n\n  TimePickerContainer.prototype.render = function render() {\n    var _state = this.state,\n        timeMode = _state.timeMode,\n        tempTime = _state.tempTime,\n        hours = _state.hours,\n        minutes = _state.minutes,\n        seconds = _state.seconds,\n        timePeriod = _state.timePeriod;\n\n    var _props2 = this.props,\n        style = _props2.style,\n        className = _props2.className,\n        pickerStyle = _props2.pickerStyle,\n        pickerClassName = _props2.pickerClassName,\n        inputStyle = _props2.inputStyle,\n        inputClassName = _props2.inputClassName,\n        textFieldStyle = _props2.textFieldStyle,\n        textFieldClassName = _props2.textFieldClassName,\n        id = _props2.id,\n        disabled = _props2.disabled,\n        label = _props2.label,\n        placeholder = _props2.placeholder,\n        icon = _props2.icon,\n        inline = _props2.inline,\n        displayMode = _props2.displayMode,\n        fullWidth = _props2.fullWidth,\n        lineDirection = _props2.lineDirection,\n        closeOnEsc = _props2.closeOnEsc,\n        hoverMode = _props2.hoverMode,\n        showSeconds = _props2.showSeconds,\n        portal = _props2.portal,\n        renderNode = _props2.renderNode,\n        lastChild = _props2.lastChild,\n        animateInline = _props2.animateInline,\n        block = _props2.block,\n        paddedBlock = _props2.paddedBlock,\n        active = _props2.active,\n        error = _props2.error,\n        floating = _props2.floating,\n        required = _props2.required,\n        leftIconStateful = _props2.leftIconStateful,\n        rightIcon = _props2.rightIcon,\n        rightIconStateful = _props2.rightIconStateful,\n        customSize = _props2.customSize,\n        errorText = _props2.errorText,\n        helpText = _props2.helpText,\n        helpOnFocus = _props2.helpOnFocus,\n        inlineIndicator = _props2.inlineIndicator,\n        disableScrollLocking = _props2.disableScrollLocking,\n        ariaLabel = _props2['aria-label'],\n        propValue = _props2.value,\n        propVisible = _props2.visible,\n        readOnly = _props2.readOnly,\n        defaultValue = _props2.defaultValue,\n        defaultVisible = _props2.defaultVisible,\n        defaultTimeMode = _props2.defaultTimeMode,\n        onVisibilityChange = _props2.onVisibilityChange,\n        isOpen = _props2.isOpen,\n        initialTimeMode = _props2.initialTimeMode,\n        initiallyOpen = _props2.initiallyOpen,\n        props = _objectWithoutProperties(_props2, ['style', 'className', 'pickerStyle', 'pickerClassName', 'inputStyle', 'inputClassName', 'textFieldStyle', 'textFieldClassName', 'id', 'disabled', 'label', 'placeholder', 'icon', 'inline', 'displayMode', 'fullWidth', 'lineDirection', 'closeOnEsc', 'hoverMode', 'showSeconds', 'portal', 'renderNode', 'lastChild', 'animateInline', 'block', 'paddedBlock', 'active', 'error', 'floating', 'required', 'leftIconStateful', 'rightIcon', 'rightIconStateful', 'customSize', 'errorText', 'helpText', 'helpOnFocus', 'inlineIndicator', 'disableScrollLocking', 'aria-label', 'value', 'visible', 'readOnly', 'defaultValue', 'defaultVisible', 'defaultTimeMode', 'onVisibilityChange', 'isOpen', 'initialTimeMode', 'initiallyOpen']);\n\n    var visible = typeof this.props.isOpen !== 'undefined' ? this.props.isOpen : getField(this.props, this.state, 'visible');\n    var picker = React.createElement(TimePicker, _extends({}, props, {\n      inline: inline,\n      icon: !!icon,\n      tempTime: tempTime,\n      timeMode: timeMode,\n      seconds: seconds,\n      hours: hours,\n      minutes: minutes,\n      timePeriod: timePeriod,\n      style: pickerStyle,\n      className: pickerClassName,\n      displayMode: displayMode,\n      onOkClick: this._handleOkClick,\n      onCancelClick: this._handleCancelClick,\n      setTimeMode: this._setTimeMode,\n      setTempTime: this._setTempTime,\n      hoverMode: hoverMode,\n      showSeconds: showSeconds\n    }));\n    var content = void 0;\n\n    if (inline) {\n      content = React.createElement(Collapse, {\n        collapsed: !visible,\n        animate: animateInline\n      }, picker);\n    } else {\n      content = React.createElement(Dialog, {\n        id: id + '-dialog',\n        visible: visible,\n        onHide: this._handleCancelClick,\n        dialogClassName: 'md-dialog--picker',\n        contentClassName: 'md-dialog-content--picker',\n        'aria-label': ariaLabel,\n        closeOnEsc: closeOnEsc,\n        portal: portal,\n        lastChild: lastChild,\n        renderNode: renderNode,\n        focusOnMount: false,\n        disableScrollLocking: disableScrollLocking\n      }, picker);\n    }\n\n    return React.createElement('div', {\n      style: style,\n      className: cn('md-picker-container', className),\n      ref: this._setContainer\n    }, React.createElement(TextField, {\n      id: id,\n      style: textFieldStyle,\n      className: cn({\n        'md-pointer--hover': !disabled\n      }, textFieldClassName),\n      inputStyle: inputStyle,\n      inputClassName: cn({\n        'md-pointer--hover': !disabled\n      }, inputClassName),\n      active: active || visible,\n      error: error,\n      floating: floating || visible,\n      required: required,\n      disabled: disabled,\n      leftIcon: icon,\n      leftIconStateful: leftIconStateful,\n      rightIcon: rightIcon,\n      rightIconStateful: rightIconStateful,\n      inlineIndicator: inlineIndicator,\n      block: block,\n      paddedBlock: paddedBlock,\n      fullWidth: fullWidth,\n      lineDirection: lineDirection,\n      customSize: customSize,\n      helpText: helpText,\n      helpOnFocus: helpOnFocus,\n      errorText: errorText,\n      label: label,\n      placeholder: placeholder,\n      onClick: this._toggleOpen,\n      onKeyDown: this._handleKeyDown,\n      value: this._getTextFieldValue(this.props, this.state),\n      readOnly: true\n    }), content);\n  };\n\n  return TimePickerContainer;\n}(PureComponent);\n\nTimePickerContainer.propTypes = {\n  /**\n   * An id for the text field in the time picker. This is require for a11y.\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * An aria-label to apply to the dialog when it has been opened. This is required for\n   * a11y.\n   */\n  'aria-label': isRequiredForA11y(PropTypes.string),\n\n  /**\n   * An optional style to apply to the time picker's container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the time picker's container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the time picker.\n   */\n  pickerStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the time picker.\n   */\n  pickerClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the input tag.\n   */\n  inputStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the input tag.\n   */\n  inputClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the text field's container.\n   */\n  textFieldStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the text field's container.\n   */\n  textFieldClassName: PropTypes.string,\n\n  /**\n   * An optional icon to display with the time picker.\n   *\n   * @see {@link TextFields/TextField#leftIcon}\n   */\n  icon: PropTypes.node,\n\n  /**\n   * Boolean if the time picker is open by default.\n   */\n  defaultVisible: PropTypes.bool,\n\n  /**\n   * An optional label to be displayed in the time picker's text\n   * field.\n   */\n  label: PropTypes.node,\n\n  /**\n   * An optional placeholder to be displayed in the time picker's text field.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * The value of the time picker. This will make the time picker\n   * be a controlled component.\n   */\n  value: controlled(PropTypes.instanceOf(Date), 'onChange', 'defaultValue'),\n\n  /**\n   * An optional function to call when the selected date is changed\n   * by hitting the OK button. The newly formatted time string,\n   * the new Date object, and the change event will be given.\n   *\n   * `onChange(timeString, dateObject, event)`.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * An optional default value to give for the year picker.\n   */\n  defaultValue: PropTypes.instanceOf(Date),\n\n  /**\n   * A function to format the dates since it should be formatted to the user's\n   * locale. This _should_ be the `Intl.DateTimeFormat` function. You\n   * can also create your own if you really wanted. Inadvisable though.\n   *\n   * See [intl-polyfill](https://github.com/andyearnshaw/Intl.js/) for more info.\n   */\n  DateTimeFormat: PropTypes.func.isRequired,\n\n  /**\n   * The locales to use for formatting the date. This will default to using\n   * the user's language in the browser or `'en-US'` when server rendering.\n   */\n  locales: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n\n  /**\n   * The label to use for the ok button on the year picker.\n   */\n  okLabel: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the ok button should be styled with the primary color.\n   */\n  okPrimary: PropTypes.bool,\n\n  /**\n   * The label to use for the cancel button on the year picker.\n   */\n  cancelLabel: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the cancel button should be styled with the primary color.\n   */\n  cancelPrimary: PropTypes.bool,\n\n  /**\n   * The default mode to open the time picker in.\n   */\n  defaultTimeMode: PropTypes.oneOf(['hour', 'minute', 'second']),\n\n  /**\n   * Boolean if the date should automatically be selected when a user clicks\n   * on a new date instead of making them hit the ok button.\n   */\n  autoOk: PropTypes.bool,\n\n  /**\n   * Boolean if the date picker should be displayed inline instead of in a\n   * dialog.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * An optional force of the display mode of the date picker.\n   * This _should_ not really be used since there are media queries\n   * to use the correct mode based on device orientation.\n   */\n  displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Boolean if the text field for the Time Picker should be displayed as full width.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The direction that the text field divider expands from when the text field\n   * in the date picker gains focus.\n   */\n  lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\n\n  /**\n   * An optional boolean if the time picker is current visible by dialog or inline.\n   * If this is set, the `onVisibilityChange` function is required.\n   */\n  visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n  /**\n   * An optional function to call when the date picker is opened in either a dialog, or\n   * inline. The callback will include the next state.\n   *\n   * ```js\n   * onVisibilityChange(!visible, e);\n   * ```\n   */\n  onVisibilityChange: PropTypes.func,\n\n  /**\n   * Boolean if the time picker is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Boolean if the dialog should be able to close if a keyboard user presses the escape key.\n   */\n  closeOnEsc: PropTypes.bool,\n\n  /**\n   * If true the hover mode of the Time Picker is activated.\n   * In hover mode no clicks are required to start selecting an hour\n   * and the time mode switches automatically when a time was chosen.\n   * When a minute is selected the chosen time is applied automatically.\n   */\n  hoverMode: PropTypes.bool,\n\n  /**\n   * If true seconds will be selectable in the Time Picker.\n   */\n  showSeconds: PropTypes.bool,\n\n  /**\n   * Boolean if the inline time picker's visibility should be animated.\n   */\n  animateInline: PropTypes.bool,\n\n  /**\n   * Boolean if the time is required.\n   *\n   * @see {@link TextFields/TextField#required}\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @see {@link TextFields/TextField#block}\n   */\n  block: TextField.propTypes.block,\n\n  /**\n   * @see {@link TextFields/TextField#paddedBlock}\n   */\n  paddedBlock: TextField.propTypes.paddedBlock,\n\n  /**\n   * @see {@link TextFields/TextField#active}\n   */\n  active: TextField.propTypes.active,\n\n  /**\n   * @see {@link TextFields/TextField#error}\n   */\n  error: TextField.propTypes.error,\n\n  /**\n   * @see {@link TextFields/TextField#floating}\n   */\n  floating: TextField.propTypes.floating,\n\n  /**\n   * @see {@link TextFields/TextField#leftIconStateful}\n   */\n  leftIconStateful: TextField.propTypes.leftIconStateful,\n\n  /**\n   * @see {@link TextFields/TextField#rightIcon}\n   */\n  rightIcon: TextField.propTypes.rightIcon,\n\n  /**\n   * @see {@link TextFields/TextField#rightIconStateful}\n   */\n  rightIconStateful: TextField.propTypes.rightIconStateful,\n\n  /**\n   * @see {@link TextFields/TextField#customSize}\n   */\n  customSize: TextField.propTypes.customSize,\n\n  /**\n   * @see {@link TextFields/TextField#errorText}\n   */\n  errorText: TextField.propTypes.errorText,\n\n  /**\n   * @see {@link TextFields/TextField#helpText}\n   */\n  helpText: TextField.propTypes.helpText,\n\n  /**\n   * @see {@link TextFields/TextField#helpOnFocus}\n   */\n  helpOnFocus: TextField.propTypes.helpOnFocus,\n\n  /**\n   * @see {@link TextFields/TextField#inlineIndicator}\n   */\n  inlineIndicator: TextField.propTypes.inlineIndicator,\n\n  /**\n   * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n   * to the dialog.\n   *\n   * @see {@link Helpers/Portal}\n   */\n  portal: PropTypes.bool,\n\n  /**\n   * An optional DOM Node to render the dialog into. The default is to render as the first child\n   * in the `body`.\n   */\n  renderNode: PropTypes.object,\n\n  /**\n   * Boolean if the dialog should be rendered as the last child of the `renderNode` or `body` instead\n   * of the first.\n   */\n  lastChild: PropTypes.bool,\n\n  /**\n   * @see {@link Dialogs/DialogContainer#disableScrollLocking}\n   */\n  disableScrollLocking: PropTypes.bool,\n\n  /**\n   * Boolean if the TimePicker should be read only. This will prevent the user from opening the picker\n   * and only display the current date in the text field.\n   */\n  readOnly: PropTypes.bool,\n  isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n  initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n  initialTimeMode: deprecated(PropTypes.oneOf(['hour', 'minute']), 'Use `defaultTimeMode` instead')\n};\nTimePickerContainer.defaultProps = {\n  animateInline: true,\n  defaultTimeMode: 'hour',\n  icon: React.createElement(FontIcon, null, 'access_time'),\n  DateTimeFormat: DateTimeFormat,\n  // eslint-disable-line object-shorthand\n  locales: typeof window !== 'undefined' ? window.navigator.userLanguage || window.navigator.language : 'en-US',\n  okLabel: 'Ok',\n  okPrimary: true,\n  cancelLabel: 'Cancel',\n  cancelPrimary: true,\n  closeOnEsc: true,\n  disableScrollLocking: false,\n  'aria-label': 'Select a time',\n  hoverMode: false,\n  showSeconds: false\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setContainer = function (container) {\n    _this2._container = container;\n  };\n\n  this._closeOnEsc = function (e) {\n    if ((e.which || e.keyCode) === ESC) {\n      _this2._handleCancelClick(e);\n    }\n  };\n\n  this._handleOutsideClick = function (e) {\n    if (_this2._container && !_this2._container.contains(e.target)) {\n      _this2._handleCancelClick(e);\n    }\n  };\n\n  this._toggleOpen = function (e) {\n    if (_this2.props.disabled || _this2.props.readOnly) {\n      return;\n    }\n\n    var visible = !(typeof _this2.props.isOpen !== 'undefined' ? _this2.props.isOpen : getField(_this2.props, _this2.state, 'visible'));\n\n    if (_this2.props.onVisibilityChange) {\n      _this2.props.onVisibilityChange(visible, e);\n    }\n\n    if (typeof _this2.props.isOpen === 'undefined' && typeof _this2.props.visible === 'undefined') {\n      var hoverMode = _this2.props.hoverMode;\n\n      if (hoverMode) {\n        _this2._setTimeMode('hour');\n      }\n\n      _this2.setState({\n        visible: visible\n      });\n    }\n  };\n\n  this._setTimeMode = function (timeMode) {\n    if (_this2.state.timeMode === timeMode) {\n      return;\n    }\n\n    _this2.setState({\n      timeMode: timeMode\n    });\n  };\n\n  this._setTempTime = function (time) {\n    if (_this2.state.tempTime === time) {\n      return;\n    }\n\n    _this2.setState(_extends({\n      tempTime: time\n    }, _this2._getTimeParts(time, _this2.props)));\n  };\n\n  this._handleKeyDown = function (e) {\n    handleKeyboardAccessibility(e, _this2._toggleOpen, true, true);\n\n    if ((e.which || e.keyCode) === TAB && _this2.state.active) {\n      _this2.setState({\n        active: false\n      });\n    }\n  };\n\n  this._handleOkClick = function (e) {\n    var _props3 = _this2.props,\n        onVisibilityChange = _props3.onVisibilityChange,\n        onChange = _props3.onChange,\n        DateTimeFormat = _props3.DateTimeFormat,\n        locales = _props3.locales,\n        showSeconds = _props3.showSeconds;\n    var value = new Date(_this2.state.tempTime);\n\n    if (onChange) {\n      onChange(formatTime(DateTimeFormat, locales, showSeconds, value), value, e);\n    }\n\n    if (onVisibilityChange) {\n      onVisibilityChange(false, e);\n    }\n\n    var state = _extends({\n      time: value\n    }, _this2._getTimeParts(value, _this2.props));\n\n    if (typeof _this2.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    if (typeof _this2.props.isOpen === 'undefined' && typeof _this2.props.visible === 'undefined') {\n      state.visible = false;\n    }\n\n    _this2.setState(state);\n  };\n\n  this._handleCancelClick = function (e) {\n    if (_this2.props.onVisibilityChange) {\n      _this2.props.onVisibilityChange(false, e);\n    }\n\n    var state = void 0;\n\n    if (typeof _this2.props.isOpen === 'undefined' && typeof _this2.props.visible === 'undefined') {\n      state = {\n        visible: false\n      };\n    }\n\n    var value = getField(_this2.props, _this2.state, 'value');\n\n    if (value) {\n      state = _extends({}, state, _this2._getTimeParts(value, _this2.props));\n      state.tempTime = _this2.state.time;\n    }\n\n    if (state) {\n      _this2.setState(state);\n    }\n  };\n};\n\nexport default TimePickerContainer;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Pickers/TimePickerContainer.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","cn","isRequiredForA11y","deprecated","ESC","TAB","getField","handleWindowClickListeners","handleKeyboardAccessibility","controlled","DateTimeFormat","formatTime","extractTimeParts","Dialog","FontIcon","TextField","Collapse","TimePicker","TimePickerContainer","_PureComponent","props","_this","_initialiseProps","initialDate","defaultValue","Date","visible","initiallyOpen","defaultVisible","state","_getTimeParts","time","timeMode","initialTimeMode","defaultTimeMode","tempTime","componentWillReceiveProps","nextProps","setState","componentDidUpdate","prevProps","prevState","_props","inline","isOpen","pVisible","_handleOutsideClick","window","addEventListener","_closeOnEsc","removeEventListener","componentWillUnmount","date","locales","showSeconds","_getTextFieldValue","render","_state","hours","minutes","seconds","timePeriod","_props2","style","className","pickerStyle","pickerClassName","inputStyle","inputClassName","textFieldStyle","textFieldClassName","id","disabled","label","placeholder","icon","displayMode","fullWidth","lineDirection","closeOnEsc","hoverMode","portal","renderNode","lastChild","animateInline","block","paddedBlock","active","error","floating","required","leftIconStateful","rightIcon","rightIconStateful","customSize","errorText","helpText","helpOnFocus","inlineIndicator","disableScrollLocking","ariaLabel","propValue","propVisible","readOnly","onVisibilityChange","picker","createElement","onOkClick","_handleOkClick","onCancelClick","_handleCancelClick","setTimeMode","_setTimeMode","setTempTime","_setTempTime","content","collapsed","animate","onHide","dialogClassName","contentClassName","focusOnMount","ref","_setContainer","leftIcon","onClick","_toggleOpen","onKeyDown","_handleKeyDown","propTypes","oneOfType","string","number","object","node","bool","instanceOf","onChange","func","isRequired","arrayOf","okLabel","okPrimary","cancelLabel","cancelPrimary","oneOf","autoOk","defaultProps","navigator","userLanguage","language","_this2","container","_container","e","which","keyCode","contains","_props3"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/* eslint-disable no-shadow */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport controlled from '../utils/PropTypes/controlled';\nimport DateTimeFormat from '../utils/DateUtils/DateTimeFormat';\nimport formatTime from '../utils/DateUtils/formatTime';\nimport extractTimeParts from '../utils/DateUtils/extractTimeParts';\nimport Dialog from '../Dialogs/DialogContainer';\nimport FontIcon from '../FontIcons/FontIcon';\nimport TextField from '../TextFields/TextField';\nimport Collapse from '../Helpers/Collapse';\nimport TimePicker from './TimePicker';\n\n/**\n * The `TimePickerContainer` component is a wrapper for the main `TimePicker` component\n * to manage the state and _logic_ for rendering the `TimePicker`. This component will\n * either render inline or in a `Dialog` depending if the `inline` prop is set\n * to `true`.\n *\n * NOTE: This component is actually exported as `TimePicker` when using the `import { member }` syntax.\n * The following two lines are equivalent:\n *\n * ```js\n * import { TimePicker } from 'react-md/lib/Pickers';\n * import TimePicker from 'react-md/lib/Pickers/TimePickerContainer';\n * ```\n */\n\nvar TimePickerContainer = function (_PureComponent) {\n  _inherits(TimePickerContainer, _PureComponent);\n\n  function TimePickerContainer(props) {\n    _classCallCheck(this, TimePickerContainer);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var initialDate = void 0;\n    if (props.defaultValue) {\n      initialDate = new Date(props.defaultValue);\n    } else if (props.value) {\n      initialDate = new Date(props.value);\n    } else {\n      initialDate = new Date();\n    }\n\n    var visible = typeof props.initiallyOpen !== 'undefined' ? props.initiallyOpen : !!props.defaultVisible;\n\n    _this.state = _extends({\n      visible: visible\n    }, _this._getTimeParts(initialDate, props), {\n      value: props.defaultValue,\n      time: initialDate,\n      timeMode: props.initialTimeMode || props.defaultTimeMode,\n      tempTime: initialDate\n    });\n    return _this;\n  }\n\n  TimePickerContainer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      var time = nextProps.value || new Date();\n      this.setState(_extends({ tempTime: time }, this._getTimeParts(time, nextProps)));\n    }\n  };\n\n  TimePickerContainer.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var _props = this.props,\n        inline = _props.inline,\n        isOpen = _props.isOpen;\n\n    var visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n    var pVisible = typeof prevProps.isOpen !== 'undefined' ? prevProps.isOpen : getField(prevProps, prevState, 'visible');\n\n    if (visible === pVisible) {\n      return;\n    }\n\n    if (visible) {\n      if (inline) {\n        handleWindowClickListeners(this._handleOutsideClick, true);\n        window.addEventListener('keydown', this._closeOnEsc);\n      }\n    } else if (inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  };\n\n  TimePickerContainer.prototype.componentWillUnmount = function componentWillUnmount() {\n    var visible = typeof this.props.isOpen !== 'undefined' ? this.props.isOpen : getField(this.props, this.state, 'visible');\n    if (visible && this.props.inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  };\n\n  TimePickerContainer.prototype._getTimeParts = function _getTimeParts(date, props) {\n    return extractTimeParts(props.DateTimeFormat, props.locales, props.showSeconds, date);\n  };\n\n  TimePickerContainer.prototype._getTextFieldValue = function _getTextFieldValue(props, state) {\n    var DateTimeFormat = props.DateTimeFormat,\n        locales = props.locales,\n        showSeconds = props.showSeconds;\n\n    var value = getField(props, state, 'value');\n    if (!value) {\n      return '';\n    } else if (value instanceof Date) {\n      return formatTime(DateTimeFormat, locales, showSeconds, value);\n    } else {\n      // currently don't support value of string\n      return value;\n    }\n  };\n\n  TimePickerContainer.prototype.render = function render() {\n    var _state = this.state,\n        timeMode = _state.timeMode,\n        tempTime = _state.tempTime,\n        hours = _state.hours,\n        minutes = _state.minutes,\n        seconds = _state.seconds,\n        timePeriod = _state.timePeriod;\n\n    var _props2 = this.props,\n        style = _props2.style,\n        className = _props2.className,\n        pickerStyle = _props2.pickerStyle,\n        pickerClassName = _props2.pickerClassName,\n        inputStyle = _props2.inputStyle,\n        inputClassName = _props2.inputClassName,\n        textFieldStyle = _props2.textFieldStyle,\n        textFieldClassName = _props2.textFieldClassName,\n        id = _props2.id,\n        disabled = _props2.disabled,\n        label = _props2.label,\n        placeholder = _props2.placeholder,\n        icon = _props2.icon,\n        inline = _props2.inline,\n        displayMode = _props2.displayMode,\n        fullWidth = _props2.fullWidth,\n        lineDirection = _props2.lineDirection,\n        closeOnEsc = _props2.closeOnEsc,\n        hoverMode = _props2.hoverMode,\n        showSeconds = _props2.showSeconds,\n        portal = _props2.portal,\n        renderNode = _props2.renderNode,\n        lastChild = _props2.lastChild,\n        animateInline = _props2.animateInline,\n        block = _props2.block,\n        paddedBlock = _props2.paddedBlock,\n        active = _props2.active,\n        error = _props2.error,\n        floating = _props2.floating,\n        required = _props2.required,\n        leftIconStateful = _props2.leftIconStateful,\n        rightIcon = _props2.rightIcon,\n        rightIconStateful = _props2.rightIconStateful,\n        customSize = _props2.customSize,\n        errorText = _props2.errorText,\n        helpText = _props2.helpText,\n        helpOnFocus = _props2.helpOnFocus,\n        inlineIndicator = _props2.inlineIndicator,\n        disableScrollLocking = _props2.disableScrollLocking,\n        ariaLabel = _props2['aria-label'],\n        propValue = _props2.value,\n        propVisible = _props2.visible,\n        readOnly = _props2.readOnly,\n        defaultValue = _props2.defaultValue,\n        defaultVisible = _props2.defaultVisible,\n        defaultTimeMode = _props2.defaultTimeMode,\n        onVisibilityChange = _props2.onVisibilityChange,\n        isOpen = _props2.isOpen,\n        initialTimeMode = _props2.initialTimeMode,\n        initiallyOpen = _props2.initiallyOpen,\n        props = _objectWithoutProperties(_props2, ['style', 'className', 'pickerStyle', 'pickerClassName', 'inputStyle', 'inputClassName', 'textFieldStyle', 'textFieldClassName', 'id', 'disabled', 'label', 'placeholder', 'icon', 'inline', 'displayMode', 'fullWidth', 'lineDirection', 'closeOnEsc', 'hoverMode', 'showSeconds', 'portal', 'renderNode', 'lastChild', 'animateInline', 'block', 'paddedBlock', 'active', 'error', 'floating', 'required', 'leftIconStateful', 'rightIcon', 'rightIconStateful', 'customSize', 'errorText', 'helpText', 'helpOnFocus', 'inlineIndicator', 'disableScrollLocking', 'aria-label', 'value', 'visible', 'readOnly', 'defaultValue', 'defaultVisible', 'defaultTimeMode', 'onVisibilityChange', 'isOpen', 'initialTimeMode', 'initiallyOpen']);\n\n    var visible = typeof this.props.isOpen !== 'undefined' ? this.props.isOpen : getField(this.props, this.state, 'visible');\n\n    var picker = React.createElement(TimePicker, _extends({}, props, {\n      inline: inline,\n      icon: !!icon,\n      tempTime: tempTime,\n      timeMode: timeMode,\n      seconds: seconds,\n      hours: hours,\n      minutes: minutes,\n      timePeriod: timePeriod,\n      style: pickerStyle,\n      className: pickerClassName,\n      displayMode: displayMode,\n      onOkClick: this._handleOkClick,\n      onCancelClick: this._handleCancelClick,\n      setTimeMode: this._setTimeMode,\n      setTempTime: this._setTempTime,\n      hoverMode: hoverMode,\n      showSeconds: showSeconds\n    }));\n\n    var content = void 0;\n    if (inline) {\n      content = React.createElement(\n        Collapse,\n        { collapsed: !visible, animate: animateInline },\n        picker\n      );\n    } else {\n      content = React.createElement(\n        Dialog,\n        {\n          id: id + '-dialog',\n          visible: visible,\n          onHide: this._handleCancelClick,\n          dialogClassName: 'md-dialog--picker',\n          contentClassName: 'md-dialog-content--picker',\n          'aria-label': ariaLabel,\n          closeOnEsc: closeOnEsc,\n          portal: portal,\n          lastChild: lastChild,\n          renderNode: renderNode,\n          focusOnMount: false,\n          disableScrollLocking: disableScrollLocking\n        },\n        picker\n      );\n    }\n\n    return React.createElement(\n      'div',\n      { style: style, className: cn('md-picker-container', className), ref: this._setContainer },\n      React.createElement(TextField, {\n        id: id,\n        style: textFieldStyle,\n        className: cn({ 'md-pointer--hover': !disabled }, textFieldClassName),\n        inputStyle: inputStyle,\n        inputClassName: cn({ 'md-pointer--hover': !disabled }, inputClassName),\n        active: active || visible,\n        error: error,\n        floating: floating || visible,\n        required: required,\n        disabled: disabled,\n        leftIcon: icon,\n        leftIconStateful: leftIconStateful,\n        rightIcon: rightIcon,\n        rightIconStateful: rightIconStateful,\n        inlineIndicator: inlineIndicator,\n        block: block,\n        paddedBlock: paddedBlock,\n        fullWidth: fullWidth,\n        lineDirection: lineDirection,\n        customSize: customSize,\n        helpText: helpText,\n        helpOnFocus: helpOnFocus,\n        errorText: errorText,\n        label: label,\n        placeholder: placeholder,\n        onClick: this._toggleOpen,\n        onKeyDown: this._handleKeyDown,\n        value: this._getTextFieldValue(this.props, this.state),\n        readOnly: true\n      }),\n      content\n    );\n  };\n\n  return TimePickerContainer;\n}(PureComponent);\n\nTimePickerContainer.propTypes = {\n  /**\n   * An id for the text field in the time picker. This is require for a11y.\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\n   * An aria-label to apply to the dialog when it has been opened. This is required for\n   * a11y.\n   */\n  'aria-label': isRequiredForA11y(PropTypes.string),\n\n  /**\n   * An optional style to apply to the time picker's container.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the time picker's container.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An optional style to apply to the time picker.\n   */\n  pickerStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the time picker.\n   */\n  pickerClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the input tag.\n   */\n  inputStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the input tag.\n   */\n  inputClassName: PropTypes.string,\n\n  /**\n   * An optional style to apply to the text field's container.\n   */\n  textFieldStyle: PropTypes.object,\n\n  /**\n   * An optional className to apply to the text field's container.\n   */\n  textFieldClassName: PropTypes.string,\n\n  /**\n   * An optional icon to display with the time picker.\n   *\n   * @see {@link TextFields/TextField#leftIcon}\n   */\n  icon: PropTypes.node,\n\n  /**\n   * Boolean if the time picker is open by default.\n   */\n  defaultVisible: PropTypes.bool,\n\n  /**\n   * An optional label to be displayed in the time picker's text\n   * field.\n   */\n  label: PropTypes.node,\n\n  /**\n   * An optional placeholder to be displayed in the time picker's text field.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * The value of the time picker. This will make the time picker\n   * be a controlled component.\n   */\n  value: controlled(PropTypes.instanceOf(Date), 'onChange', 'defaultValue'),\n\n  /**\n   * An optional function to call when the selected date is changed\n   * by hitting the OK button. The newly formatted time string,\n   * the new Date object, and the change event will be given.\n   *\n   * `onChange(timeString, dateObject, event)`.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * An optional default value to give for the year picker.\n   */\n  defaultValue: PropTypes.instanceOf(Date),\n\n  /**\n   * A function to format the dates since it should be formatted to the user's\n   * locale. This _should_ be the `Intl.DateTimeFormat` function. You\n   * can also create your own if you really wanted. Inadvisable though.\n   *\n   * See [intl-polyfill](https://github.com/andyearnshaw/Intl.js/) for more info.\n   */\n  DateTimeFormat: PropTypes.func.isRequired,\n\n  /**\n   * The locales to use for formatting the date. This will default to using\n   * the user's language in the browser or `'en-US'` when server rendering.\n   */\n  locales: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n\n  /**\n   * The label to use for the ok button on the year picker.\n   */\n  okLabel: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the ok button should be styled with the primary color.\n   */\n  okPrimary: PropTypes.bool,\n\n  /**\n   * The label to use for the cancel button on the year picker.\n   */\n  cancelLabel: PropTypes.node.isRequired,\n\n  /**\n   * Boolean if the cancel button should be styled with the primary color.\n   */\n  cancelPrimary: PropTypes.bool,\n\n  /**\n   * The default mode to open the time picker in.\n   */\n  defaultTimeMode: PropTypes.oneOf(['hour', 'minute', 'second']),\n\n  /**\n   * Boolean if the date should automatically be selected when a user clicks\n   * on a new date instead of making them hit the ok button.\n   */\n  autoOk: PropTypes.bool,\n\n  /**\n   * Boolean if the date picker should be displayed inline instead of in a\n   * dialog.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * An optional force of the display mode of the date picker.\n   * This _should_ not really be used since there are media queries\n   * to use the correct mode based on device orientation.\n   */\n  displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Boolean if the text field for the Time Picker should be displayed as full width.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The direction that the text field divider expands from when the text field\n   * in the date picker gains focus.\n   */\n  lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\n\n  /**\n   * An optional boolean if the time picker is current visible by dialog or inline.\n   * If this is set, the `onVisibilityChange` function is required.\n   */\n  visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n  /**\n   * An optional function to call when the date picker is opened in either a dialog, or\n   * inline. The callback will include the next state.\n   *\n   * ```js\n   * onVisibilityChange(!visible, e);\n   * ```\n   */\n  onVisibilityChange: PropTypes.func,\n\n  /**\n   * Boolean if the time picker is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Boolean if the dialog should be able to close if a keyboard user presses the escape key.\n   */\n  closeOnEsc: PropTypes.bool,\n\n  /**\n   * If true the hover mode of the Time Picker is activated.\n   * In hover mode no clicks are required to start selecting an hour\n   * and the time mode switches automatically when a time was chosen.\n   * When a minute is selected the chosen time is applied automatically.\n   */\n  hoverMode: PropTypes.bool,\n\n  /**\n   * If true seconds will be selectable in the Time Picker.\n   */\n  showSeconds: PropTypes.bool,\n\n  /**\n   * Boolean if the inline time picker's visibility should be animated.\n   */\n  animateInline: PropTypes.bool,\n\n  /**\n   * Boolean if the time is required.\n   *\n   * @see {@link TextFields/TextField#required}\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @see {@link TextFields/TextField#block}\n   */\n  block: TextField.propTypes.block,\n\n  /**\n   * @see {@link TextFields/TextField#paddedBlock}\n   */\n  paddedBlock: TextField.propTypes.paddedBlock,\n\n  /**\n   * @see {@link TextFields/TextField#active}\n   */\n  active: TextField.propTypes.active,\n\n  /**\n   * @see {@link TextFields/TextField#error}\n   */\n  error: TextField.propTypes.error,\n\n  /**\n   * @see {@link TextFields/TextField#floating}\n   */\n  floating: TextField.propTypes.floating,\n\n  /**\n   * @see {@link TextFields/TextField#leftIconStateful}\n   */\n  leftIconStateful: TextField.propTypes.leftIconStateful,\n\n  /**\n   * @see {@link TextFields/TextField#rightIcon}\n   */\n  rightIcon: TextField.propTypes.rightIcon,\n\n  /**\n   * @see {@link TextFields/TextField#rightIconStateful}\n   */\n  rightIconStateful: TextField.propTypes.rightIconStateful,\n\n  /**\n   * @see {@link TextFields/TextField#customSize}\n   */\n  customSize: TextField.propTypes.customSize,\n\n  /**\n   * @see {@link TextFields/TextField#errorText}\n   */\n  errorText: TextField.propTypes.errorText,\n\n  /**\n   * @see {@link TextFields/TextField#helpText}\n   */\n  helpText: TextField.propTypes.helpText,\n\n  /**\n   * @see {@link TextFields/TextField#helpOnFocus}\n   */\n  helpOnFocus: TextField.propTypes.helpOnFocus,\n\n  /**\n   * @see {@link TextFields/TextField#inlineIndicator}\n   */\n  inlineIndicator: TextField.propTypes.inlineIndicator,\n\n  /**\n   * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n   * to the dialog.\n   *\n   * @see {@link Helpers/Portal}\n   */\n  portal: PropTypes.bool,\n\n  /**\n   * An optional DOM Node to render the dialog into. The default is to render as the first child\n   * in the `body`.\n   */\n  renderNode: PropTypes.object,\n\n  /**\n   * Boolean if the dialog should be rendered as the last child of the `renderNode` or `body` instead\n   * of the first.\n   */\n  lastChild: PropTypes.bool,\n\n  /**\n   * @see {@link Dialogs/DialogContainer#disableScrollLocking}\n   */\n  disableScrollLocking: PropTypes.bool,\n\n  /**\n   * Boolean if the TimePicker should be read only. This will prevent the user from opening the picker\n   * and only display the current date in the text field.\n   */\n  readOnly: PropTypes.bool,\n\n  isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n  initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n  initialTimeMode: deprecated(PropTypes.oneOf(['hour', 'minute']), 'Use `defaultTimeMode` instead')\n};\nTimePickerContainer.defaultProps = {\n  animateInline: true,\n  defaultTimeMode: 'hour',\n  icon: React.createElement(\n    FontIcon,\n    null,\n    'access_time'\n  ),\n  DateTimeFormat: DateTimeFormat, // eslint-disable-line object-shorthand\n  locales: typeof window !== 'undefined' ? window.navigator.userLanguage || window.navigator.language : 'en-US',\n  okLabel: 'Ok',\n  okPrimary: true,\n  cancelLabel: 'Cancel',\n  cancelPrimary: true,\n  closeOnEsc: true,\n  disableScrollLocking: false,\n  'aria-label': 'Select a time',\n  hoverMode: false,\n  showSeconds: false\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setContainer = function (container) {\n    _this2._container = container;\n  };\n\n  this._closeOnEsc = function (e) {\n    if ((e.which || e.keyCode) === ESC) {\n      _this2._handleCancelClick(e);\n    }\n  };\n\n  this._handleOutsideClick = function (e) {\n    if (_this2._container && !_this2._container.contains(e.target)) {\n      _this2._handleCancelClick(e);\n    }\n  };\n\n  this._toggleOpen = function (e) {\n    if (_this2.props.disabled || _this2.props.readOnly) {\n      return;\n    }\n\n    var visible = !(typeof _this2.props.isOpen !== 'undefined' ? _this2.props.isOpen : getField(_this2.props, _this2.state, 'visible'));\n\n    if (_this2.props.onVisibilityChange) {\n      _this2.props.onVisibilityChange(visible, e);\n    }\n\n    if (typeof _this2.props.isOpen === 'undefined' && typeof _this2.props.visible === 'undefined') {\n      var hoverMode = _this2.props.hoverMode;\n\n\n      if (hoverMode) {\n        _this2._setTimeMode('hour');\n      }\n\n      _this2.setState({ visible: visible });\n    }\n  };\n\n  this._setTimeMode = function (timeMode) {\n    if (_this2.state.timeMode === timeMode) {\n      return;\n    }\n\n    _this2.setState({ timeMode: timeMode });\n  };\n\n  this._setTempTime = function (time) {\n    if (_this2.state.tempTime === time) {\n      return;\n    }\n\n    _this2.setState(_extends({ tempTime: time }, _this2._getTimeParts(time, _this2.props)));\n  };\n\n  this._handleKeyDown = function (e) {\n    handleKeyboardAccessibility(e, _this2._toggleOpen, true, true);\n\n    if ((e.which || e.keyCode) === TAB && _this2.state.active) {\n      _this2.setState({ active: false });\n    }\n  };\n\n  this._handleOkClick = function (e) {\n    var _props3 = _this2.props,\n        onVisibilityChange = _props3.onVisibilityChange,\n        onChange = _props3.onChange,\n        DateTimeFormat = _props3.DateTimeFormat,\n        locales = _props3.locales,\n        showSeconds = _props3.showSeconds;\n\n    var value = new Date(_this2.state.tempTime);\n    if (onChange) {\n      onChange(formatTime(DateTimeFormat, locales, showSeconds, value), value, e);\n    }\n\n    if (onVisibilityChange) {\n      onVisibilityChange(false, e);\n    }\n\n    var state = _extends({ time: value }, _this2._getTimeParts(value, _this2.props));\n    if (typeof _this2.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    if (typeof _this2.props.isOpen === 'undefined' && typeof _this2.props.visible === 'undefined') {\n      state.visible = false;\n    }\n\n    _this2.setState(state);\n  };\n\n  this._handleCancelClick = function (e) {\n    if (_this2.props.onVisibilityChange) {\n      _this2.props.onVisibilityChange(false, e);\n    }\n\n    var state = void 0;\n    if (typeof _this2.props.isOpen === 'undefined' && typeof _this2.props.visible === 'undefined') {\n      state = { visible: false };\n    }\n\n    var value = getField(_this2.props, _this2.state, 'value');\n    if (value) {\n      state = _extends({}, state, _this2._getTimeParts(value, _this2.props));\n      state.tempTime = _this2.state.time;\n    }\n\n    if (state) {\n      _this2.setState(state);\n    }\n  };\n};\n\nexport default TimePickerContainer;"]},"metadata":{},"sourceType":"module"}