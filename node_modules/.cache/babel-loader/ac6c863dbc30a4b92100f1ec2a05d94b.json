{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport between from '../utils/PropTypes/between';\nimport Paper from '../Papers/Paper';\nimport ToolbarTitle from './ToolbarTitle';\n\nvar Toolbar = function (_PureComponent) {\n  _inherits(Toolbar, _PureComponent);\n\n  function Toolbar() {\n    _classCallCheck(this, Toolbar);\n\n    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));\n  }\n\n  Toolbar.prototype.render = function render() {\n    var _props = this.props,\n        style = _props.style,\n        className = _props.className,\n        component = _props.component,\n        titleStyle = _props.titleStyle,\n        titleClassName = _props.titleClassName,\n        prominentTitle = _props.prominentTitle,\n        themed = _props.themed,\n        singleColor = _props.singleColor,\n        actions = _props.actions,\n        fixed = _props.fixed,\n        children = _props.children,\n        inset = _props.inset,\n        titleId = _props.titleId,\n        propNav = _props.nav,\n        propTitle = _props.title,\n        propTitleMenu = _props.titleMenu,\n        propZDepth = _props.zDepth,\n        propColored = _props.colored,\n        propProminent = _props.prominent,\n        containerStyle = _props.containerStyle,\n        containerClassName = _props.containerClassName,\n        actionLeft = _props.actionLeft,\n        actionsRight = _props.actionsRight,\n        primary = _props.primary,\n        secondary = _props.secondary,\n        props = _objectWithoutProperties(_props, ['style', 'className', 'component', 'titleStyle', 'titleClassName', 'prominentTitle', 'themed', 'singleColor', 'actions', 'fixed', 'children', 'inset', 'titleId', 'nav', 'title', 'titleMenu', 'zDepth', 'colored', 'prominent', 'containerStyle', 'containerClassName', 'actionLeft', 'actionsRight', 'primary', 'secondary']);\n\n    var _props2 = this.props,\n        colored = _props2.colored,\n        title = _props2.title,\n        titleMenu = _props2.titleMenu,\n        nav = _props2.nav,\n        prominent = _props2.prominent,\n        zDepth = _props2.zDepth;\n    colored = colored || primary || secondary;\n    prominent = prominent || prominentTitle;\n    title = React.createElement(ToolbarTitle, {\n      key: 'title',\n      style: titleStyle,\n      className: titleClassName,\n      prominent: prominentTitle,\n      offset: prominentTitle,\n      id: typeof titleId === 'undefined' && props.id ? props.id + '-title' : titleId,\n      title: title\n    });\n\n    if (nav || actionLeft) {\n      var navEl = Children.only(nav || actionLeft);\n      nav = cloneElement(nav, {\n        className: cn('md-btn--toolbar md-toolbar--action-left', navEl.props.className)\n      });\n    }\n\n    var rightActions = void 0;\n\n    if (actions || actionsRight) {\n      rightActions = Children.map(Children.toArray(actions || actionsRight), function (action) {\n        return cloneElement(action, {\n          className: cn('md-btn--toolbar', action.props.className)\n        });\n      });\n      rightActions = React.createElement('div', {\n        key: 'actions',\n        className: 'md-cell--right md-toolbar--action-right'\n      }, rightActions);\n    }\n\n    if (titleMenu) {\n      titleMenu = Children.only(titleMenu);\n      titleMenu = cloneElement(titleMenu, {\n        className: cn('md-title md-title--toolbar md-select-field--toolbar', {\n          'md-title--toolbar-offset': prominentTitle,\n          'md-title--toolbar-prominent': prominentTitle\n        }, titleMenu.props.className),\n        position: titleMenu.props.position || 'tl',\n        toolbar: true\n      });\n    }\n\n    if (typeof zDepth !== 'number') {\n      zDepth = fixed ? 2 : 0;\n    }\n\n    return React.createElement(Paper, _extends({}, props, {\n      component: component,\n      zDepth: zDepth,\n      style: style,\n      className: cn('md-toolbar', {\n        'md-background--primary': colored,\n        'md-toolbar--themed': themed,\n        'md-toolbar--text-white': singleColor && colored,\n        'md-toolbar--prominent': prominent,\n        'md-toolbar--fixed': fixed,\n        'md-toolbar--inset': inset\n      }, className)\n    }), nav, title, titleMenu, children, rightActions);\n  };\n\n  return Toolbar;\n}(PureComponent);\n\nToolbar.propTypes = {\n  /**\n   * An optional id to provide to the toolbar. If this is specified and the `titleId` is not, the title\n   * will gain an id of `${id}-title`. This will not be applied to the `titleMenu`.\n   *\n   * @see {@link #titleId}\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional style to apply to the toolbar.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the toolbar,\n   */\n  className: PropTypes.string,\n\n  /*\n   * An optional style to apply to the `h2` surrounding the `title` prop.\n   */\n  titleStyle: PropTypes.object,\n\n  /*\n   * An optional className to apply to the `h2` surrounding the `title` prop.\n   */\n  titleClassName: PropTypes.string,\n\n  /**\n   * Boolean if the toolbar should more prominent. This will double the height of the toolbar.\n   */\n  prominent: PropTypes.bool,\n\n  /**\n   * Boolean if the toolbar's title should be more prominent. This will move the title to the\n   * second line of the toolbar. This only works when the `prominent` prop is true as well.\n   */\n  prominentTitle: PropTypes.bool,\n\n  /**\n   * The current title of the page to show in the toolbar. It is invalid to specify both a\n   * `title` and a `titleMenu`. Only one should be given.\n   */\n  title: invalidIf(PropTypes.node, 'titleMenu'),\n\n  /**\n   * An optional id to give the main title in the toolbar. This will not be applied to the\n   * `titleMenu`.\n   */\n  titleId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional title menu to display instead of the title. This should be a `SelectField` component.\n   * It is cloned with some additional props, so if the `SelectField` is separated into a separate\n   * component, the following props must be passed to get the correct styling: `className`, `block`,\n   * `paddedBlock`, `position`.\n   */\n  titleMenu: PropTypes.element,\n\n  /**\n   * This prop is used for rendering an optional navigation button to the left of the `title`\n   * or the `titleMenu` component. This needs to be an icon `Button` because some additional props\n   * are cloned into it.\n   */\n  nav: PropTypes.element,\n\n  /**\n   * Any additional actions to display to the right of the title. This should be a list or a single\n   * `Button` to display. The buttons get cloned with an additional className for toolbar styling.\n   */\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n\n  /**\n   * Any children to display in the toolbar. This will be displayed between the optional title and\n   * actions.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Boolean if the toolbar should be fixed to the top of the page. This will add some additional box shadow.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Boolean if the nav, actions, and title should share the same color. For a `colored` or dark `themed`\n   * toolbar, they will all be colored white. For a transparent or light `themed` toolbar, the colors will\n   * be the `rgba(0, 0, 0, .87)`. Setting this to false will only style the title to the specific color\n   * stated above.\n   */\n  singleColor: PropTypes.bool,\n\n  /**\n   * Boolean if the toolbar should be colored based off the current theme. This will either style the background\n   * to be fairly white, or fairly black. You can not specify both `themed` and `colored`.\n   */\n  themed: PropTypes.bool,\n\n  /**\n   * Boolean if the toolbar should be colored with the `$md-primary-color`.\n   */\n  colored: invalidIf(PropTypes.bool, 'themed'),\n\n  /**\n   * The component to render the toolbar as.\n   */\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * Boolean if the toolbar is inset in the page. This will just add some margin around\n   * it.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * An optional zDepth to enforce for the toolbar. This should be a number between 0 and 5.\n   * If this is omitted, the toolbar will gain a zDepth of 2 when `fixed`.\n   */\n  zDepth: between(PropTypes.number, 0, 5),\n  containerStyle: deprecated(PropTypes.object, 'The `container` no longer exists in the `Toolbar`. Use the `style` prop instead'),\n  containerClassName: deprecated(PropTypes.string, 'The `container` no longer exists in the `Toolbar`. Use the `className` prop instead'),\n  primary: deprecated(PropTypes.bool, 'Use the `colored` prop instead'),\n  secondary: deprecated(PropTypes.bool, 'Toolbars can no longer be themed to the secondary color. Use the `colored` prop instead'),\n  actionLeft: deprecated(PropTypes.element, 'Use the `nav` prop instead'),\n  actionsRight: deprecated(PropTypes.node, 'Use the `menu` prop and/or the `actions` prop instead')\n};\nToolbar.defaultProps = {\n  singleColor: true,\n  component: 'header'\n};\nexport default Toolbar;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Toolbars/Toolbar.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","Children","cloneElement","PropTypes","cn","deprecated","invalidIf","between","Paper","ToolbarTitle","Toolbar","_PureComponent","apply","render","_props","props","style","className","component","titleStyle","titleClassName","prominentTitle","themed","singleColor","actions","fixed","children","inset","titleId","propNav","nav","propTitle","title","propTitleMenu","titleMenu","propZDepth","zDepth","propColored","colored","propProminent","prominent","containerStyle","containerClassName","actionLeft","actionsRight","primary","secondary","_props2","createElement","offset","id","navEl","only","rightActions","map","toArray","action","position","toolbar","propTypes","oneOfType","number","string","object","bool","node","element","arrayOf","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport between from '../utils/PropTypes/between';\nimport Paper from '../Papers/Paper';\nimport ToolbarTitle from './ToolbarTitle';\n\nvar Toolbar = function (_PureComponent) {\n  _inherits(Toolbar, _PureComponent);\n\n  function Toolbar() {\n    _classCallCheck(this, Toolbar);\n\n    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));\n  }\n\n  Toolbar.prototype.render = function render() {\n    var _props = this.props,\n        style = _props.style,\n        className = _props.className,\n        component = _props.component,\n        titleStyle = _props.titleStyle,\n        titleClassName = _props.titleClassName,\n        prominentTitle = _props.prominentTitle,\n        themed = _props.themed,\n        singleColor = _props.singleColor,\n        actions = _props.actions,\n        fixed = _props.fixed,\n        children = _props.children,\n        inset = _props.inset,\n        titleId = _props.titleId,\n        propNav = _props.nav,\n        propTitle = _props.title,\n        propTitleMenu = _props.titleMenu,\n        propZDepth = _props.zDepth,\n        propColored = _props.colored,\n        propProminent = _props.prominent,\n        containerStyle = _props.containerStyle,\n        containerClassName = _props.containerClassName,\n        actionLeft = _props.actionLeft,\n        actionsRight = _props.actionsRight,\n        primary = _props.primary,\n        secondary = _props.secondary,\n        props = _objectWithoutProperties(_props, ['style', 'className', 'component', 'titleStyle', 'titleClassName', 'prominentTitle', 'themed', 'singleColor', 'actions', 'fixed', 'children', 'inset', 'titleId', 'nav', 'title', 'titleMenu', 'zDepth', 'colored', 'prominent', 'containerStyle', 'containerClassName', 'actionLeft', 'actionsRight', 'primary', 'secondary']);\n\n    var _props2 = this.props,\n        colored = _props2.colored,\n        title = _props2.title,\n        titleMenu = _props2.titleMenu,\n        nav = _props2.nav,\n        prominent = _props2.prominent,\n        zDepth = _props2.zDepth;\n\n\n    colored = colored || primary || secondary;\n    prominent = prominent || prominentTitle;\n\n    title = React.createElement(ToolbarTitle, {\n      key: 'title',\n      style: titleStyle,\n      className: titleClassName,\n      prominent: prominentTitle,\n      offset: prominentTitle,\n      id: typeof titleId === 'undefined' && props.id ? props.id + '-title' : titleId,\n      title: title\n    });\n\n    if (nav || actionLeft) {\n      var navEl = Children.only(nav || actionLeft);\n      nav = cloneElement(nav, {\n        className: cn('md-btn--toolbar md-toolbar--action-left', navEl.props.className)\n      });\n    }\n\n    var rightActions = void 0;\n    if (actions || actionsRight) {\n      rightActions = Children.map(Children.toArray(actions || actionsRight), function (action) {\n        return cloneElement(action, {\n          className: cn('md-btn--toolbar', action.props.className)\n        });\n      });\n\n      rightActions = React.createElement(\n        'div',\n        { key: 'actions', className: 'md-cell--right md-toolbar--action-right' },\n        rightActions\n      );\n    }\n\n    if (titleMenu) {\n      titleMenu = Children.only(titleMenu);\n      titleMenu = cloneElement(titleMenu, {\n        className: cn('md-title md-title--toolbar md-select-field--toolbar', {\n          'md-title--toolbar-offset': prominentTitle,\n          'md-title--toolbar-prominent': prominentTitle\n        }, titleMenu.props.className),\n        position: titleMenu.props.position || 'tl',\n        toolbar: true\n      });\n    }\n\n    if (typeof zDepth !== 'number') {\n      zDepth = fixed ? 2 : 0;\n    }\n\n    return React.createElement(\n      Paper,\n      _extends({}, props, {\n        component: component,\n        zDepth: zDepth,\n        style: style,\n        className: cn('md-toolbar', {\n          'md-background--primary': colored,\n          'md-toolbar--themed': themed,\n          'md-toolbar--text-white': singleColor && colored,\n          'md-toolbar--prominent': prominent,\n          'md-toolbar--fixed': fixed,\n          'md-toolbar--inset': inset\n        }, className)\n      }),\n      nav,\n      title,\n      titleMenu,\n      children,\n      rightActions\n    );\n  };\n\n  return Toolbar;\n}(PureComponent);\n\nToolbar.propTypes = {\n  /**\n   * An optional id to provide to the toolbar. If this is specified and the `titleId` is not, the title\n   * will gain an id of `${id}-title`. This will not be applied to the `titleMenu`.\n   *\n   * @see {@link #titleId}\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional style to apply to the toolbar.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the toolbar,\n   */\n  className: PropTypes.string,\n\n  /*\n   * An optional style to apply to the `h2` surrounding the `title` prop.\n   */\n  titleStyle: PropTypes.object,\n\n  /*\n   * An optional className to apply to the `h2` surrounding the `title` prop.\n   */\n  titleClassName: PropTypes.string,\n\n  /**\n   * Boolean if the toolbar should more prominent. This will double the height of the toolbar.\n   */\n  prominent: PropTypes.bool,\n\n  /**\n   * Boolean if the toolbar's title should be more prominent. This will move the title to the\n   * second line of the toolbar. This only works when the `prominent` prop is true as well.\n   */\n  prominentTitle: PropTypes.bool,\n\n  /**\n   * The current title of the page to show in the toolbar. It is invalid to specify both a\n   * `title` and a `titleMenu`. Only one should be given.\n   */\n  title: invalidIf(PropTypes.node, 'titleMenu'),\n\n  /**\n   * An optional id to give the main title in the toolbar. This will not be applied to the\n   * `titleMenu`.\n   */\n  titleId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional title menu to display instead of the title. This should be a `SelectField` component.\n   * It is cloned with some additional props, so if the `SelectField` is separated into a separate\n   * component, the following props must be passed to get the correct styling: `className`, `block`,\n   * `paddedBlock`, `position`.\n   */\n  titleMenu: PropTypes.element,\n\n  /**\n   * This prop is used for rendering an optional navigation button to the left of the `title`\n   * or the `titleMenu` component. This needs to be an icon `Button` because some additional props\n   * are cloned into it.\n   */\n  nav: PropTypes.element,\n\n  /**\n   * Any additional actions to display to the right of the title. This should be a list or a single\n   * `Button` to display. The buttons get cloned with an additional className for toolbar styling.\n   */\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n\n  /**\n   * Any children to display in the toolbar. This will be displayed between the optional title and\n   * actions.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Boolean if the toolbar should be fixed to the top of the page. This will add some additional box shadow.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Boolean if the nav, actions, and title should share the same color. For a `colored` or dark `themed`\n   * toolbar, they will all be colored white. For a transparent or light `themed` toolbar, the colors will\n   * be the `rgba(0, 0, 0, .87)`. Setting this to false will only style the title to the specific color\n   * stated above.\n   */\n  singleColor: PropTypes.bool,\n\n  /**\n   * Boolean if the toolbar should be colored based off the current theme. This will either style the background\n   * to be fairly white, or fairly black. You can not specify both `themed` and `colored`.\n   */\n  themed: PropTypes.bool,\n\n  /**\n   * Boolean if the toolbar should be colored with the `$md-primary-color`.\n   */\n  colored: invalidIf(PropTypes.bool, 'themed'),\n\n  /**\n   * The component to render the toolbar as.\n   */\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]).isRequired,\n\n  /**\n   * Boolean if the toolbar is inset in the page. This will just add some margin around\n   * it.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * An optional zDepth to enforce for the toolbar. This should be a number between 0 and 5.\n   * If this is omitted, the toolbar will gain a zDepth of 2 when `fixed`.\n   */\n  zDepth: between(PropTypes.number, 0, 5),\n  containerStyle: deprecated(PropTypes.object, 'The `container` no longer exists in the `Toolbar`. Use the `style` prop instead'),\n  containerClassName: deprecated(PropTypes.string, 'The `container` no longer exists in the `Toolbar`. Use the `className` prop instead'),\n  primary: deprecated(PropTypes.bool, 'Use the `colored` prop instead'),\n  secondary: deprecated(PropTypes.bool, 'Toolbars can no longer be themed to the secondary color. Use the `colored` prop instead'),\n  actionLeft: deprecated(PropTypes.element, 'Use the `nav` prop instead'),\n  actionsRight: deprecated(PropTypes.node, 'Use the `menu` prop and/or the `actions` prop instead')\n};\nToolbar.defaultProps = {\n  singleColor: true,\n  component: 'header'\n};\nexport default Toolbar;"]},"metadata":{},"sourceType":"module"}