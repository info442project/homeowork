{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport getField from '../utils/getField';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport isInvalidAnimate from './isInvalidAnimate';\nimport Portal from '../Helpers/Portal';\nimport Snackbar from './Snackbar';\nvar CHAINED_TOAST_DELAY = 50;\n/**\n * The `Snackbar` component is used for displaying a concise and small message to the user about\n * an operation performed.\n *\n * > The main component for the `Snackbar` is actually named the `SnackbarContainer`, so you need\n * to make sure the import is `react-md/lib/Snackbars` or `react-md/lib/Snackbars/SnackbarContainer`.\n * The first import is preferable.\n */\n\nvar SnackbarContainer = function (_PureComponent) {\n  _inherits(SnackbarContainer, _PureComponent);\n\n  function SnackbarContainer(props) {\n    _classCallCheck(this, SnackbarContainer);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var visible = !!props.toasts.length;\n    _this.state = {\n      visible: visible,\n      toast: null\n    };\n    return _this;\n  }\n\n  SnackbarContainer.prototype.componentDidMount = function componentDidMount() {\n    var toasts = this.props.toasts;\n\n    if (toasts.length) {\n      this._initAndToast(toasts[0]);\n    }\n  };\n\n  SnackbarContainer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _nextProps$toasts = nextProps.toasts,\n        toast = _nextProps$toasts[0];\n    var _props$toasts = this.props.toasts,\n        prevToast = _props$toasts[0];\n\n    if (toast === prevToast || toast === this.state.toast) {\n      return;\n    }\n\n    if (!toast) {\n      this._createLeaveTimer();\n    } else if (!this.state.visible) {\n      this._initAndToast(toast);\n    } else {\n      this._createSwapTimer(toast);\n    }\n  };\n\n  SnackbarContainer.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this._initTimeout) {\n      clearTimeout(this._initTimeout);\n    }\n\n    if (this._leaveTimeout) {\n      clearTimeout(this._leaveTimeout);\n    }\n\n    if (this._swapTimeout) {\n      clearTimeout(this._swapTimeout);\n    }\n\n    if (this._dismissTimeout) {\n      clearTimeout(this._dismissTimeout);\n    }\n  };\n  /**\n   * This function takes in a new toast object and checks if the message will span\n   * multiple lines of text by creating the new snackbar before the `Snackbar` component\n   * gets made, checking the height of the message, and then removing the temporary\n   * snackbar.\n   */\n\n\n  SnackbarContainer.prototype.render = function render() {\n    var _state = this.state,\n        visible = _state.visible,\n        toast = _state.toast,\n        multiline = _state.multiline;\n\n    var _props = this.props,\n        transitionName = _props.transitionName,\n        transitionEnterTimeout = _props.transitionEnterTimeout,\n        transitionLeaveTimeout = _props.transitionLeaveTimeout,\n        dismiss = _props.dismiss,\n        onDismiss = _props.onDismiss,\n        lastChild = _props.lastChild,\n        portal = _props.portal,\n        propRenderNode = _props.renderNode,\n        toasts = _props.toasts,\n        props = _objectWithoutProperties(_props, ['transitionName', 'transitionEnterTimeout', 'transitionLeaveTimeout', 'dismiss', 'onDismiss', 'lastChild', 'portal', 'renderNode', 'toasts']);\n\n    var renderNode = getField(this.props, this.context, 'renderNode');\n    var snackbar = void 0;\n\n    if (toast) {\n      snackbar = React.createElement(Snackbar, _extends({}, props, {\n        key: 'snackbar',\n        leaveTimeout: transitionLeaveTimeout,\n        toast: toast,\n        multiline: multiline,\n        onDismiss: onDismiss || dismiss\n      }));\n    }\n\n    var container = React.createElement(CSSTransitionGroup, {\n      ref: this._setContainer,\n      key: 'container',\n      className: 'md-snackbar-container',\n      transitionName: transitionName,\n      transitionEnterTimeout: transitionEnterTimeout,\n      transitionLeaveTimeout: transitionLeaveTimeout\n    }, snackbar);\n\n    if (!portal) {\n      return visible ? container : null;\n    }\n\n    return React.createElement(Portal, {\n      visible: visible,\n      renderNode: renderNode,\n      lastChild: lastChild\n    }, container);\n  };\n\n  return SnackbarContainer;\n}(PureComponent);\n\nSnackbarContainer.propTypes = {\n  /**\n   * An id for the Snackbar once a toast has been added and is visible. This is a recommended\n   * prop for accessibility concerns. If it is omitted, the id will become `'snackbar-alert'`\n   * when there is no action on the toast, or `'snackbar-alert-dialog'` when there is an action\n   * on the toast.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional style to apply to the snackbar once it appears.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the snackbar once it appears.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An immutable controlled queue of toasts that should appear in the snackbar.\n   * The snackbar will always display the first toast in this list. When the user has\n   * either clicked the action of the toast, or the `autohideTimeout` has been reached,\n   * the `onDismiss` function will be called. The `onDismiss` function should remove the\n   * first toast and return a new list of remaining toasts.\n   *\n   * ```js\n   * let toasts = [];\n   * const onDismiss = () => {\n   *   const [, ...remainingToasts] = toasts;\n   *   toasts = remainingToasts;\n   * };\n   * ```\n   */\n  toasts: PropTypes.arrayOf(PropTypes.shape({\n    /**\n     * The text to display in the toast.\n     */\n    text: PropTypes.node.isRequired,\n\n    /**\n     * An optional action to take. If this value is a string, the `label` for the\n     * button will be this value, Otherwise, all the keys in the action object will\n     * be applied to the `Button`.\n     */\n    action: PropTypes.oneOfType([PropTypes.node, PropTypes.shape({\n      onClick: PropTypes.func,\n      children: PropTypes.node,\n      // Deprecated\n      label: PropTypes.node\n    })])\n  })).isRequired,\n\n  /**\n   * A function to call that will dismiss a toast. This will automatically be bound to\n   * any toast that has an `action` and it will also be called when the `autohideTimeout`\n   * has been reached.\n   */\n  onDismiss: PropTypes.func.isRequired,\n\n  /**\n   * Boolean if the snackbar's toasts should automatically be dismissed after the\n   * `autohideTimeout` has been reached.\n   */\n  autohide: PropTypes.bool,\n\n  /**\n   * The amount of time before the snackbar should be dequeued and the next toast\n   * should be displayed.\n   */\n  autohideTimeout: PropTypes.number.isRequired,\n\n  /**\n   * When a toast has an action, it will automatically be focused when this prop is enabled.\n   * This will require your action onClick handler to correctly focus an element on the page\n   * once the toast is hidden. If this prop is disabled, it is recommended to add custom focus\n   * logic so that keyboard users can interact with the snackbar.\n   */\n  autoFocusAction: PropTypes.bool,\n\n  /**\n   * The transition name to use for the snackbar appearing and disappearing.\n   */\n  transitionName: PropTypes.string.isRequired,\n\n  /**\n   * The transition time for the snackbar to enter. This should match the `$md-snackbar-transition-time`\n   * sass variable.\n   */\n  transitionEnterTimeout: PropTypes.number.isRequired,\n\n  /**\n   * The transition time for the snackbar to leave. This should match the `$md-snackbar-transition-time`\n   * sass variable.\n   */\n  transitionLeaveTimeout: PropTypes.number.isRequired,\n\n  /**\n   * When the app contains a floating action button that is fixed to the bottom of the screen,\n   * you should set this to be a ref of the floating action button. When a snackbar appears,\n   * the FAB will be moved to not overlay the snackbar.\n   */\n  fab: function fab(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);\n\n    if (!propValue) {\n      return null;\n    }\n\n    if (propType !== 'object' || typeof propValue.render !== 'function' || isInvalidAnimate(propValue)) {\n      var componentNameSafe = componentName || '<<anonymous>>';\n      var propFullNameSafe = propFullName || propName;\n      return new Error('Invalid ' + location + ' `' + propFullNameSafe + '` supplied to `' + componentNameSafe + '`, expected a ' + 'ref to a floating `Button` component. This should not be a DOMElement from `findDOMNode` but instead ' + 'the React ref object.');\n    }\n\n    return null;\n  },\n\n  /**\n   * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n   * to the snackbar.\n   *\n   * @see {@link Helpers/Portal}\n   */\n  portal: PropTypes.bool,\n\n  /**\n   * An optional DOM node to render the Snackbar in. If this is omitted, it will render as the first\n   * child in the `body`.\n   */\n  renderNode: PropTypes.object,\n\n  /**\n   * Boolean if the snackbar should render as the last child in the `renderNode` or `body` instead of\n   * as the first.\n   */\n  lastChild: PropTypes.bool,\n  dismiss: deprecated(PropTypes.func, 'Use `onDismiss` instead')\n};\nSnackbarContainer.defaultProps = {\n  autoFocusAction: false,\n  autohide: true,\n  toasts: [],\n  autohideTimeout: 3000,\n  transitionName: 'md-snackbar',\n  transitionEnterTimeout: 300,\n  transitionLeaveTimeout: 300\n};\nSnackbarContainer.contextTypes = {\n  renderNode: PropTypes.object\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setContainer = function (container) {\n    _this2._container = findDOMNode(container);\n  };\n\n  this._isMultiline = function (toast) {\n    var container = _this2._container;\n\n    if (container === null) {\n      return false;\n    }\n\n    var message = document.createElement('p');\n    message.classList.add('md-snackbar--toast');\n    message.innerHTML = toast.text;\n    var snackbar = void 0;\n\n    if (toast.action) {\n      message.classList.add('md-snackbar--action');\n      snackbar = document.createElement('section');\n      snackbar.className = 'md-snackbar';\n      snackbar.appendChild(message);\n      var action = document.createElement('button');\n      action.innerHTML = typeof toast.action === 'string' ? toast.action : toast.action.label;\n      action.className = 'md-btn md-btn--flat md-btn--text md-btn--snackbar';\n      snackbar.appendChild(action);\n    } else {\n      snackbar = message;\n    } // Only style we really want from the .md-snackbar\n\n\n    snackbar.style.maxWidth = '568px';\n    container.appendChild(snackbar);\n    var multiline = message.offsetHeight > 20;\n    container.removeChild(snackbar);\n    return multiline;\n  };\n\n  this._initAndToast = function (toast) {\n    _this2._initTimeout = setTimeout(function () {\n      _this2._initTimeout = null;\n\n      _this2.setState({\n        toast: toast,\n        multiline: _this2._isMultiline(toast)\n      });\n    }, TICK);\n\n    _this2.setState({\n      visible: true\n    });\n  };\n\n  this._createLeaveTimer = function () {\n    var time = _this2.props.transitionLeaveTimeout;\n    _this2._leaveTimeout = setTimeout(function () {\n      _this2._leaveTimeout = null;\n\n      _this2.setState({\n        visible: false\n      });\n    }, time + TICK);\n\n    _this2.setState({\n      toast: null\n    });\n  };\n\n  this._createSwapTimer = function (toast) {\n    _this2._swapTimeout = setTimeout(function () {\n      _this2._swapTimeout = null;\n\n      _this2.setState({\n        toast: toast,\n        multiline: _this2._isMultiline(toast)\n      });\n    }, _this2.props.transitionLeaveTimeout + CHAINED_TOAST_DELAY);\n\n    _this2.setState({\n      toast: null\n    });\n  };\n};\n\nexport default SnackbarContainer;","map":{"version":3,"sources":["C:/Users/Sky/Desktop/info442/homeowork/node_modules/react-md/es/Snackbars/SnackbarContainer.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_extends","Object","assign","target","i","arguments","length","source","key","hasOwnProperty","call","_objectWithoutProperties","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","findDOMNode","CSSTransitionGroup","deprecated","getField","TICK","isInvalidAnimate","Portal","Snackbar","CHAINED_TOAST_DELAY","SnackbarContainer","_PureComponent","props","_this","_initialiseProps","visible","toasts","state","toast","componentDidMount","_initAndToast","componentWillReceiveProps","nextProps","_nextProps$toasts","_props$toasts","prevToast","_createLeaveTimer","_createSwapTimer","componentWillUnmount","_initTimeout","clearTimeout","_leaveTimeout","_swapTimeout","_dismissTimeout","render","_state","multiline","_props","transitionName","transitionEnterTimeout","transitionLeaveTimeout","dismiss","onDismiss","lastChild","portal","propRenderNode","renderNode","context","snackbar","createElement","leaveTimeout","container","ref","_setContainer","className","propTypes","id","oneOfType","number","string","style","object","arrayOf","shape","text","node","isRequired","action","onClick","func","children","label","autohide","bool","autohideTimeout","autoFocusAction","fab","propName","componentName","location","propFullName","propValue","propType","componentNameSafe","propFullNameSafe","Error","defaultProps","contextTypes","_this2","_container","_isMultiline","message","document","classList","add","innerHTML","appendChild","maxWidth","offsetHeight","removeChild","setTimeout","setState","time"],"mappings":"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","sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport isInvalidAnimate from './isInvalidAnimate';\nimport Portal from '../Helpers/Portal';\nimport Snackbar from './Snackbar';\n\nvar CHAINED_TOAST_DELAY = 50;\n\n/**\n * The `Snackbar` component is used for displaying a concise and small message to the user about\n * an operation performed.\n *\n * > The main component for the `Snackbar` is actually named the `SnackbarContainer`, so you need\n * to make sure the import is `react-md/lib/Snackbars` or `react-md/lib/Snackbars/SnackbarContainer`.\n * The first import is preferable.\n */\n\nvar SnackbarContainer = function (_PureComponent) {\n  _inherits(SnackbarContainer, _PureComponent);\n\n  function SnackbarContainer(props) {\n    _classCallCheck(this, SnackbarContainer);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var visible = !!props.toasts.length;\n    _this.state = {\n      visible: visible,\n      toast: null\n    };\n    return _this;\n  }\n\n  SnackbarContainer.prototype.componentDidMount = function componentDidMount() {\n    var toasts = this.props.toasts;\n\n    if (toasts.length) {\n      this._initAndToast(toasts[0]);\n    }\n  };\n\n  SnackbarContainer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _nextProps$toasts = nextProps.toasts,\n        toast = _nextProps$toasts[0];\n    var _props$toasts = this.props.toasts,\n        prevToast = _props$toasts[0];\n\n    if (toast === prevToast || toast === this.state.toast) {\n      return;\n    }\n\n    if (!toast) {\n      this._createLeaveTimer();\n    } else if (!this.state.visible) {\n      this._initAndToast(toast);\n    } else {\n      this._createSwapTimer(toast);\n    }\n  };\n\n  SnackbarContainer.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this._initTimeout) {\n      clearTimeout(this._initTimeout);\n    }\n\n    if (this._leaveTimeout) {\n      clearTimeout(this._leaveTimeout);\n    }\n\n    if (this._swapTimeout) {\n      clearTimeout(this._swapTimeout);\n    }\n\n    if (this._dismissTimeout) {\n      clearTimeout(this._dismissTimeout);\n    }\n  };\n\n  /**\n   * This function takes in a new toast object and checks if the message will span\n   * multiple lines of text by creating the new snackbar before the `Snackbar` component\n   * gets made, checking the height of the message, and then removing the temporary\n   * snackbar.\n   */\n\n\n  SnackbarContainer.prototype.render = function render() {\n    var _state = this.state,\n        visible = _state.visible,\n        toast = _state.toast,\n        multiline = _state.multiline;\n\n    var _props = this.props,\n        transitionName = _props.transitionName,\n        transitionEnterTimeout = _props.transitionEnterTimeout,\n        transitionLeaveTimeout = _props.transitionLeaveTimeout,\n        dismiss = _props.dismiss,\n        onDismiss = _props.onDismiss,\n        lastChild = _props.lastChild,\n        portal = _props.portal,\n        propRenderNode = _props.renderNode,\n        toasts = _props.toasts,\n        props = _objectWithoutProperties(_props, ['transitionName', 'transitionEnterTimeout', 'transitionLeaveTimeout', 'dismiss', 'onDismiss', 'lastChild', 'portal', 'renderNode', 'toasts']);\n\n    var renderNode = getField(this.props, this.context, 'renderNode');\n\n    var snackbar = void 0;\n    if (toast) {\n      snackbar = React.createElement(Snackbar, _extends({}, props, {\n        key: 'snackbar',\n        leaveTimeout: transitionLeaveTimeout,\n        toast: toast,\n        multiline: multiline,\n        onDismiss: onDismiss || dismiss\n      }));\n    }\n\n    var container = React.createElement(\n      CSSTransitionGroup,\n      {\n        ref: this._setContainer,\n        key: 'container',\n        className: 'md-snackbar-container',\n        transitionName: transitionName,\n        transitionEnterTimeout: transitionEnterTimeout,\n        transitionLeaveTimeout: transitionLeaveTimeout\n      },\n      snackbar\n    );\n\n    if (!portal) {\n      return visible ? container : null;\n    }\n\n    return React.createElement(\n      Portal,\n      { visible: visible, renderNode: renderNode, lastChild: lastChild },\n      container\n    );\n  };\n\n  return SnackbarContainer;\n}(PureComponent);\n\nSnackbarContainer.propTypes = {\n  /**\n   * An id for the Snackbar once a toast has been added and is visible. This is a recommended\n   * prop for accessibility concerns. If it is omitted, the id will become `'snackbar-alert'`\n   * when there is no action on the toast, or `'snackbar-alert-dialog'` when there is an action\n   * on the toast.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * An optional style to apply to the snackbar once it appears.\n   */\n  style: PropTypes.object,\n\n  /**\n   * An optional className to apply to the snackbar once it appears.\n   */\n  className: PropTypes.string,\n\n  /**\n   * An immutable controlled queue of toasts that should appear in the snackbar.\n   * The snackbar will always display the first toast in this list. When the user has\n   * either clicked the action of the toast, or the `autohideTimeout` has been reached,\n   * the `onDismiss` function will be called. The `onDismiss` function should remove the\n   * first toast and return a new list of remaining toasts.\n   *\n   * ```js\n   * let toasts = [];\n   * const onDismiss = () => {\n   *   const [, ...remainingToasts] = toasts;\n   *   toasts = remainingToasts;\n   * };\n   * ```\n   */\n  toasts: PropTypes.arrayOf(PropTypes.shape({\n    /**\n     * The text to display in the toast.\n     */\n    text: PropTypes.node.isRequired,\n\n    /**\n     * An optional action to take. If this value is a string, the `label` for the\n     * button will be this value, Otherwise, all the keys in the action object will\n     * be applied to the `Button`.\n     */\n    action: PropTypes.oneOfType([PropTypes.node, PropTypes.shape({\n      onClick: PropTypes.func,\n      children: PropTypes.node,\n      // Deprecated\n      label: PropTypes.node\n    })])\n  })).isRequired,\n\n  /**\n   * A function to call that will dismiss a toast. This will automatically be bound to\n   * any toast that has an `action` and it will also be called when the `autohideTimeout`\n   * has been reached.\n   */\n  onDismiss: PropTypes.func.isRequired,\n\n  /**\n   * Boolean if the snackbar's toasts should automatically be dismissed after the\n   * `autohideTimeout` has been reached.\n   */\n  autohide: PropTypes.bool,\n\n  /**\n   * The amount of time before the snackbar should be dequeued and the next toast\n   * should be displayed.\n   */\n  autohideTimeout: PropTypes.number.isRequired,\n\n  /**\n   * When a toast has an action, it will automatically be focused when this prop is enabled.\n   * This will require your action onClick handler to correctly focus an element on the page\n   * once the toast is hidden. If this prop is disabled, it is recommended to add custom focus\n   * logic so that keyboard users can interact with the snackbar.\n   */\n  autoFocusAction: PropTypes.bool,\n\n  /**\n   * The transition name to use for the snackbar appearing and disappearing.\n   */\n  transitionName: PropTypes.string.isRequired,\n\n  /**\n   * The transition time for the snackbar to enter. This should match the `$md-snackbar-transition-time`\n   * sass variable.\n   */\n  transitionEnterTimeout: PropTypes.number.isRequired,\n\n  /**\n   * The transition time for the snackbar to leave. This should match the `$md-snackbar-transition-time`\n   * sass variable.\n   */\n  transitionLeaveTimeout: PropTypes.number.isRequired,\n\n  /**\n   * When the app contains a floating action button that is fixed to the bottom of the screen,\n   * you should set this to be a ref of the floating action button. When a snackbar appears,\n   * the FAB will be moved to not overlay the snackbar.\n   */\n  fab: function fab(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);\n\n    if (!propValue) {\n      return null;\n    }\n\n    if (propType !== 'object' || typeof propValue.render !== 'function' || isInvalidAnimate(propValue)) {\n      var componentNameSafe = componentName || '<<anonymous>>';\n      var propFullNameSafe = propFullName || propName;\n      return new Error('Invalid ' + location + ' `' + propFullNameSafe + '` supplied to `' + componentNameSafe + '`, expected a ' + 'ref to a floating `Button` component. This should not be a DOMElement from `findDOMNode` but instead ' + 'the React ref object.');\n    }\n\n    return null;\n  },\n\n  /**\n   * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n   * to the snackbar.\n   *\n   * @see {@link Helpers/Portal}\n   */\n  portal: PropTypes.bool,\n\n  /**\n   * An optional DOM node to render the Snackbar in. If this is omitted, it will render as the first\n   * child in the `body`.\n   */\n  renderNode: PropTypes.object,\n\n  /**\n   * Boolean if the snackbar should render as the last child in the `renderNode` or `body` instead of\n   * as the first.\n   */\n  lastChild: PropTypes.bool,\n  dismiss: deprecated(PropTypes.func, 'Use `onDismiss` instead')\n};\nSnackbarContainer.defaultProps = {\n  autoFocusAction: false,\n  autohide: true,\n  toasts: [],\n  autohideTimeout: 3000,\n  transitionName: 'md-snackbar',\n  transitionEnterTimeout: 300,\n  transitionLeaveTimeout: 300\n};\nSnackbarContainer.contextTypes = {\n  renderNode: PropTypes.object\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._setContainer = function (container) {\n    _this2._container = findDOMNode(container);\n  };\n\n  this._isMultiline = function (toast) {\n    var container = _this2._container;\n    if (container === null) {\n      return false;\n    }\n\n    var message = document.createElement('p');\n    message.classList.add('md-snackbar--toast');\n    message.innerHTML = toast.text;\n\n    var snackbar = void 0;\n    if (toast.action) {\n      message.classList.add('md-snackbar--action');\n\n      snackbar = document.createElement('section');\n      snackbar.className = 'md-snackbar';\n      snackbar.appendChild(message);\n\n      var action = document.createElement('button');\n      action.innerHTML = typeof toast.action === 'string' ? toast.action : toast.action.label;\n      action.className = 'md-btn md-btn--flat md-btn--text md-btn--snackbar';\n      snackbar.appendChild(action);\n    } else {\n      snackbar = message;\n    }\n\n    // Only style we really want from the .md-snackbar\n    snackbar.style.maxWidth = '568px';\n\n    container.appendChild(snackbar);\n    var multiline = message.offsetHeight > 20;\n    container.removeChild(snackbar);\n\n    return multiline;\n  };\n\n  this._initAndToast = function (toast) {\n    _this2._initTimeout = setTimeout(function () {\n      _this2._initTimeout = null;\n\n      _this2.setState({ toast: toast, multiline: _this2._isMultiline(toast) });\n    }, TICK);\n\n    _this2.setState({ visible: true });\n  };\n\n  this._createLeaveTimer = function () {\n    var time = _this2.props.transitionLeaveTimeout;\n\n    _this2._leaveTimeout = setTimeout(function () {\n      _this2._leaveTimeout = null;\n\n      _this2.setState({ visible: false });\n    }, time + TICK);\n\n    _this2.setState({ toast: null });\n  };\n\n  this._createSwapTimer = function (toast) {\n    _this2._swapTimeout = setTimeout(function () {\n      _this2._swapTimeout = null;\n\n      _this2.setState({ toast: toast, multiline: _this2._isMultiline(toast) });\n    }, _this2.props.transitionLeaveTimeout + CHAINED_TOAST_DELAY);\n\n    _this2.setState({ toast: null });\n  };\n};\n\nexport default SnackbarContainer;"]},"metadata":{},"sourceType":"module"}